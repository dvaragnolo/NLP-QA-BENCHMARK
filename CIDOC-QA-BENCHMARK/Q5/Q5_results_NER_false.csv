Id,Question,partialDRS,Solution,Gen Query,Gen.contains(Man)
1,Which is the birth place of ADÁL?," X1-be-is-null,X2-which-Which-null,X4-ADÁL-ADÁL-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-ADÁL,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-ADÁL-ADÁL-null, X1-subj-X2,X1-obj-X3,X4-has_name-ADÁL,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, ADÁL, ADÁL, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, ADÁL, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, ADÁL, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""ADÁL"",""i"")) . }",true
2,Which is the birth place of Aden E. Miller?," X1-be-is-null,X2-which-Which-null,X4-Aden E. Miller-Aden-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Aden E. Miller,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Aden E. Miller-Aden-null, X1-subj-X2,X1-obj-X3,X4-has_name-Aden E. Miller,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Aden E. Miller, Aden, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Aden E. Miller, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Aden E. Miller, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Aden E\\. Miller"",""i"")) . }",true
3,Which is the birth place of Adolf Benca?," X1-be-is-null,X2-which-Which-null,X4-Adolf Benca-Adolf-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Adolf Benca,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Adolf Benca-Adolf-null, X1-subj-X2,X1-obj-X3,X4-has_name-Adolf Benca,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Adolf Benca, Adolf, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Adolf Benca, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Adolf Benca, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Adolf Benca"",""i"")) . }",true
4,Which is the birth place of Adolf Schreyer?," X1-be-is-null,X2-which-Which-null,X4-Adolf Schreyer-Adolf-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Adolf Schreyer,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Adolf Schreyer-Adolf-null, X1-subj-X2,X1-obj-X3,X4-has_name-Adolf Schreyer,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Adolf Schreyer, Adolf, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Adolf Schreyer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Adolf Schreyer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Adolf Schreyer"",""i"")) . }",true
5,Which is the birth place of Adriaen Brouwer?," X1-be-is-null,X2-which-Which-null,X4-Adriaen Brouwer-Adriaen-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Adriaen Brouwer,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Adriaen Brouwer-Adriaen-null, X1-subj-X2,X1-obj-X3,X4-has_name-Adriaen Brouwer,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Adriaen Brouwer, Adriaen, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Adriaen Brouwer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Adriaen Brouwer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Adriaen Brouwer"",""i"")) . }",true
6,Which is the birth place of Aghassi George Aghassian?," X1-be-is-null,X2-which-Which-null,X4-Aghassi George Aghassian-Aghassi-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Aghassi George Aghassian,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Aghassi George Aghassian-Aghassi-null, X1-subj-X2,X1-obj-X3,X4-has_name-Aghassi George Aghassian,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Aghassi George Aghassian, Aghassi, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Aghassi George Aghassian, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Aghassi George Aghassian, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Aghassi George Aghassian"",""i"")) . }",true
7,Which is the birth place of Agnes E. Lyall?," X1-be-is-null,X2-which-Which-null,X4-Agnes E. Lyall-Agnes-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Agnes E. Lyall,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Agnes E. Lyall-Agnes-null, X1-subj-X2,X1-obj-X3,X4-has_name-Agnes E. Lyall,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Agnes E. Lyall, Agnes, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Agnes E. Lyall, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Agnes E. Lyall, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Agnes E\\. Lyall"",""i"")) . }",true
8,Which is the birth place of Alan Cohen?," X1-be-is-null,X2-which-Which-null,X4-Alan Cohen-Alan-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Alan Cohen,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Alan Cohen-Alan-null, X1-subj-X2,X1-obj-X3,X4-has_name-Alan Cohen,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Alan Cohen, Alan, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Alan Cohen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Alan Cohen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alan Cohen"",""i"")) . }",true
9,Which is the birth place of Albert Gregory Hull?," X1-be-is-null,X2-which-Which-null,X4-Albert Gregory Hull-Albert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Albert Gregory Hull,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Albert Gregory Hull-Albert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Albert Gregory Hull,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Albert Gregory Hull, Albert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Albert Gregory Hull, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Albert Gregory Hull, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Albert Gregory Hull"",""i"")) . }",true
10,Which is the birth place of Albert Heckman?," X1-be-is-null,X2-which-Which-null,X4-Albert Heckman-Albert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Albert Heckman,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Albert Heckman-Albert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Albert Heckman,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Albert Heckman, Albert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Albert Heckman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Albert Heckman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Albert Heckman"",""i"")) . }",true
11,Which is the birth place of Albert Pinkham Ryder?," X1-be-is-null,X2-which-Which-null,X4-Albert Pinkham Ryder-Albert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Albert Pinkham Ryder,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Albert Pinkham Ryder-Albert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Albert Pinkham Ryder,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Albert Pinkham Ryder, Albert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Albert Pinkham Ryder, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Albert Pinkham Ryder, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Albert Pinkham Ryder"",""i"")) . }",true
12,Which is the birth place of Alcopley?," X1-be-is-null,X2-which-Which-null,X4-Alcopley-Alcopley-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Alcopley,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Alcopley-Alcopley-null, X1-subj-X2,X1-obj-X3,X4-has_name-Alcopley,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Alcopley, Alcopley, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Alcopley, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Alcopley, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alcopley"",""i"")) . }",true
13,Which is the birth place of Aldro T. Hibbard?," X1-be-is-null,X2-which-Which-null,X4-Aldro T. Hibbard-Aldro-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Aldro T. Hibbard,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Aldro T. Hibbard-Aldro-null, X1-subj-X2,X1-obj-X3,X4-has_name-Aldro T. Hibbard,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Aldro T. Hibbard, Aldro, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Aldro T. Hibbard, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Aldro T. Hibbard, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Aldro T\\. Hibbard"",""i"")) . }",true
14,Which is the birth place of Alexander Kachinsky?," X1-be-is-null,X2-which-Which-null,X4-Alexander Kachinsky-Alexander-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Alexander Kachinsky,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Alexander Kachinsky-Alexander-null, X1-subj-X2,X1-obj-X3,X4-has_name-Alexander Kachinsky,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Alexander Kachinsky, Alexander, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Alexander Kachinsky, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Alexander Kachinsky, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alexander Kachinsky"",""i"")) . }",true
15,Which is the birth place of Alexander Robertson?," X1-be-is-null,X2-which-Which-null,X4-Alexander Robertson-Alexander-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Alexander Robertson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Alexander Robertson-Alexander-null, X1-subj-X2,X1-obj-X3,X4-has_name-Alexander Robertson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Alexander Robertson, Alexander, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Alexander Robertson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Alexander Robertson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alexander Robertson"",""i"")) . }",true
16,Which is the birth place of Alexandrina Robertson Harris?," X1-be-is-null,X2-which-Which-null,X4-Alexandrina Robertson Harris-Alexandrina-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Alexandrina Robertson Harris,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Alexandrina Robertson Harris-Alexandrina-null, X1-subj-X2,X1-obj-X3,X4-has_name-Alexandrina Robertson Harris,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Alexandrina Robertson Harris, Alexandrina, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Alexandrina Robertson Harris, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Alexandrina Robertson Harris, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alexandrina Robertson Harris"",""i"")) . }",true
17,Which is the birth place of Alfred Sessler?," X1-be-is-null,X2-which-Which-null,X4-Alfred Sessler-Alfred-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Alfred Sessler,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Alfred Sessler-Alfred-null, X1-subj-X2,X1-obj-X3,X4-has_name-Alfred Sessler,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Alfred Sessler, Alfred, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Alfred Sessler, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Alfred Sessler, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alfred Sessler"",""i"")) . }",true
18,Which is the birth place of Allen Appel?," X1-be-is-null,X2-which-Which-null,X4-Allen Appel-Allen-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Allen Appel,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Allen Appel-Allen-null, X1-subj-X2,X1-obj-X3,X4-has_name-Allen Appel,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Allen Appel, Allen, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Allen Appel, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Allen Appel, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Allen Appel"",""i"")) . }",true
19,Which is the birth place of Alonzo Earl Foringer?," X1-be-is-null,X2-which-Which-null,X4-Alonzo Earl Foringer-Alonzo-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Alonzo Earl Foringer,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Alonzo Earl Foringer-Alonzo-null, X1-subj-X2,X1-obj-X3,X4-has_name-Alonzo Earl Foringer,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Alonzo Earl Foringer, Alonzo, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Alonzo Earl Foringer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Alonzo Earl Foringer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alonzo Earl Foringer"",""i"")) . }",true
20,Which is the birth place of Alphonse Jongers?," X1-be-is-null,X2-which-Which-null,X4-Alphonse Jongers-Alphonse Jongers-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Alphonse Jongers,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Alphonse Jongers-Alphonse Jongers-null, X1-subj-X2,X1-obj-X3,X4-has_name-Alphonse Jongers,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Alphonse Jongers, Alphonse Jongers, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Alphonse Jongers, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Alphonse Jongers, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alphonse Jongers"",""i"")) . }",true
21,Which is the birth place of Alton Tobey?," X1-be-is-null,X2-which-Which-null,X4-Alton Tobey-Alton-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Alton Tobey,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Alton Tobey-Alton-null, X1-subj-X2,X1-obj-X3,X4-has_name-Alton Tobey,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Alton Tobey, Alton, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Alton Tobey, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Alton Tobey, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alton Tobey"",""i"")) . }",true
22,Which is the birth place of Alvan Fisher?," X1-be-is-null,X2-which-Which-null,X4-Alvan Fisher-Alvan-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Alvan Fisher,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Alvan Fisher-Alvan-null, X1-subj-X2,X1-obj-X3,X4-has_name-Alvan Fisher,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Alvan Fisher, Alvan, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Alvan Fisher, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Alvan Fisher, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alvan Fisher"",""i"")) . }",true
23,Which is the birth place of Amy Cutler?," X1-be-is-null,X2-which-Which-null,X4-Amy Cutler-Amy-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Amy Cutler,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Amy Cutler-Amy-null, X1-subj-X2,X1-obj-X3,X4-has_name-Amy Cutler,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Amy Cutler, Amy, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Amy Cutler, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Amy Cutler, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Amy Cutler"",""i"")) . }",true
24,Which is the birth place of Antonio Barone?," X1-be-is-null,X2-which-Which-null,X4-Antonio Barone-Antonio-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Antonio Barone,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Antonio Barone-Antonio-null, X1-subj-X2,X1-obj-X3,X4-has_name-Antonio Barone,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Antonio Barone, Antonio, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Antonio Barone, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Antonio Barone, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Antonio Barone"",""i"")) . }",true
25,Which is the birth place of Antonio Jacobsen?," X1-be-is-null,X2-which-Which-null,X4-Antonio Jacobsen-Antonio-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Antonio Jacobsen,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Antonio Jacobsen-Antonio-null, X1-subj-X2,X1-obj-X3,X4-has_name-Antonio Jacobsen,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Antonio Jacobsen, Antonio, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Antonio Jacobsen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Antonio Jacobsen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Antonio Jacobsen"",""i"")) . }",true
26,Which is the birth place of Aristidis Kyriazis?," X1-be-is-null,X2-which-Which-null,X4-Aristidis Kyriazis-Aristidis-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Aristidis Kyriazis,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Aristidis Kyriazis-Aristidis-null, X1-subj-X2,X1-obj-X3,X4-has_name-Aristidis Kyriazis,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Aristidis Kyriazis, Aristidis, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Aristidis Kyriazis, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Aristidis Kyriazis, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Aristidis Kyriazis"",""i"")) . }",true
27,Which is the birth place of Armin Landeck?," X1-be-is-null,X2-which-Which-null,X4-Armin Landeck-Armin-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Armin Landeck,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Armin Landeck-Armin-null, X1-subj-X2,X1-obj-X3,X4-has_name-Armin Landeck,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Armin Landeck, Armin, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Armin Landeck, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Armin Landeck, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Armin Landeck"",""i"")) . }",true
28,Which is the birth place of Art Green?," X1-be-is-null,X2-which-Which-null,X4-Art Green-Art-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Art Green,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Art Green-Art-null, X1-subj-X2,X1-obj-X3,X4-has_name-Art Green,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Art Green, Art, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Art Green, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Art Green, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Art Green"",""i"")) . }",true
29,Which is the birth place of Arthur Durston?," X1-be-is-null,X2-which-Which-null,X4-Arthur Durston-Arthur-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Arthur Durston,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Arthur Durston-Arthur-null, X1-subj-X2,X1-obj-X3,X4-has_name-Arthur Durston,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Arthur Durston, Arthur, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Arthur Durston, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Arthur Durston, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Arthur Durston"",""i"")) . }",true
30,Which is the birth place of Arthur Ollman?," X1-be-is-null,X2-which-Which-null,X4-Arthur Ollman-Arthur-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Arthur Ollman,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Arthur Ollman-Arthur-null, X1-subj-X2,X1-obj-X3,X4-has_name-Arthur Ollman,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Arthur Ollman, Arthur, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Arthur Ollman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Arthur Ollman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Arthur Ollman"",""i"")) . }",true
31,Which is the birth place of Arthur W. Hall?," X1-be-is-null,X2-which-Which-null,X4-Arthur W. Hall-Arthur-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Arthur W. Hall,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Arthur W. Hall-Arthur-null, X1-subj-X2,X1-obj-X3,X4-has_name-Arthur W. Hall,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Arthur W. Hall, Arthur, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Arthur W. Hall, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Arthur W. Hall, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Arthur W\\. Hall"",""i"")) . }",true
32,Which is the birth place of Attilio Salemme?," X1-be-is-null,X2-which-Which-null,X4-Attilio Salemme-Attilio-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Attilio Salemme,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Attilio Salemme-Attilio-null, X1-subj-X2,X1-obj-X3,X4-has_name-Attilio Salemme,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Attilio Salemme, Attilio, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Attilio Salemme, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Attilio Salemme, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Attilio Salemme"",""i"")) . }",true
33,Which is the birth place of B. W. Kilburn?," X1-be-is-null,X2-which-Which-null,X4-B. W. Kilburn-B.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-B. W. Kilburn,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-B. W. Kilburn-B.-null, X1-subj-X2,X1-obj-X3,X4-has_name-B. W. Kilburn,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, B. W. Kilburn, B., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, B. W. Kilburn, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, B. W. Kilburn, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""B\\. W\\. Kilburn"",""i"")) . }",true
34,Which is the birth place of Barbara Hashimoto?," X1-be-is-null,X2-which-Which-null,X4-Barbara Hashimoto-Barbara-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Barbara Hashimoto,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Barbara Hashimoto-Barbara-null, X1-subj-X2,X1-obj-X3,X4-has_name-Barbara Hashimoto,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Barbara Hashimoto, Barbara, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Barbara Hashimoto, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Barbara Hashimoto, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Barbara Hashimoto"",""i"")) . }",true
35,Which is the birth place of Barbara Tisserat?," X1-be-is-null,X2-which-Which-null,X4-Barbara Tisserat-Barbara-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Barbara Tisserat,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Barbara Tisserat-Barbara-null, X1-subj-X2,X1-obj-X3,X4-has_name-Barbara Tisserat,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Barbara Tisserat, Barbara, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Barbara Tisserat, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Barbara Tisserat, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Barbara Tisserat"",""i"")) . }",true
36,Which is the birth place of Basil Ede?," X1-be-is-null,X2-which-Which-null,X4-Basil Ede-Basil-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Basil Ede,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Basil Ede-Basil-null, X1-subj-X2,X1-obj-X3,X4-has_name-Basil Ede,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Basil Ede, Basil, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Basil Ede, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Basil Ede, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Basil Ede"",""i"")) . }",true
37,Which is the birth place of Baychar?," X1-be-is-null,X2-which-Which-null,X4-Baychar-Baychar-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Baychar,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Baychar-Baychar-null, X1-subj-X2,X1-obj-X3,X4-has_name-Baychar,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Baychar, Baychar, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Baychar, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Baychar, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Baychar"",""i"")) . }",true
38,Which is the birth place of Ben Foster?," X1-be-is-null,X2-which-Which-null,X4-Ben Foster-Ben-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ben Foster,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ben Foster-Ben-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ben Foster,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ben Foster, Ben, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ben Foster, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ben Foster, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ben Foster"",""i"")) . }",true
39,Which is the birth place of Benjamin Blythe?," X1-be-is-null,X2-which-Which-null,X4-Benjamin Blythe-Benjamin-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Benjamin Blythe,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Benjamin Blythe-Benjamin-null, X1-subj-X2,X1-obj-X3,X4-has_name-Benjamin Blythe,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Benjamin Blythe, Benjamin, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Benjamin Blythe, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Benjamin Blythe, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Benjamin Blythe"",""i"")) . }",true
40,Which is the birth place of Benjamin H. Frayser?," X1-be-is-null,X2-which-Which-null,X4-Benjamin H. Frayser-Benjamin-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Benjamin H. Frayser,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Benjamin H. Frayser-Benjamin-null, X1-subj-X2,X1-obj-X3,X4-has_name-Benjamin H. Frayser,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Benjamin H. Frayser, Benjamin, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Benjamin H. Frayser, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Benjamin H. Frayser, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Benjamin H\\. Frayser"",""i"")) . }",true
41,Which is the birth place of Benjamin Kopman?," X1-be-is-null,X2-which-Which-null,X4-Benjamin Kopman-Benjamin-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Benjamin Kopman,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Benjamin Kopman-Benjamin-null, X1-subj-X2,X1-obj-X3,X4-has_name-Benjamin Kopman,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Benjamin Kopman, Benjamin, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Benjamin Kopman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Benjamin Kopman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Benjamin Kopman"",""i"")) . }",true
42,Which is the birth place of Benoit Audran I?," X1-be-is-null,X2-which-Which-null,X4-Benoit Audran I-Benoit-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Benoit Audran I,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Benoit Audran I-Benoit-null, X1-subj-X2,X1-obj-X3,X4-has_name-Benoit Audran I,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Benoit Audran I, Benoit, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Benoit Audran I, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Benoit Audran I, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Benoit Audran I"",""i"")) . }",true
43,Which is the birth place of Bernard Arnest?," X1-be-is-null,X2-which-Which-null,X4-Bernard Arnest-Bernard-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Bernard Arnest,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Bernard Arnest-Bernard-null, X1-subj-X2,X1-obj-X3,X4-has_name-Bernard Arnest,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Bernard Arnest, Bernard, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Bernard Arnest, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Bernard Arnest, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Bernard Arnest"",""i"")) . }",true
44,Which is the birth place of Bernard Greenwald?," X1-be-is-null,X2-which-Which-null,X4-Bernard Greenwald-Bernard-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Bernard Greenwald,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Bernard Greenwald-Bernard-null, X1-subj-X2,X1-obj-X3,X4-has_name-Bernard Greenwald,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Bernard Greenwald, Bernard, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Bernard Greenwald, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Bernard Greenwald, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Bernard Greenwald"",""i"")) . }",true
45,Which is the birth place of Bernard Leach?," X1-be-is-null,X2-which-Which-null,X4-Bernard Leach-Bernard-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Bernard Leach,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Bernard Leach-Bernard-null, X1-subj-X2,X1-obj-X3,X4-has_name-Bernard Leach,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Bernard Leach, Bernard, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Bernard Leach, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Bernard Leach, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Bernard Leach"",""i"")) . }",true
46,Which is the birth place of Bernard Schardt?," X1-be-is-null,X2-which-Which-null,X4-Bernard Schardt-Bernard-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Bernard Schardt,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Bernard Schardt-Bernard-null, X1-subj-X2,X1-obj-X3,X4-has_name-Bernard Schardt,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Bernard Schardt, Bernard, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Bernard Schardt, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Bernard Schardt, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Bernard Schardt"",""i"")) . }",true
47,Which is the birth place of Betty Scarpino?," X1-be-is-null,X2-which-Which-null,X4-Betty Scarpino-Betty-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Betty Scarpino,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Betty Scarpino-Betty-null, X1-subj-X2,X1-obj-X3,X4-has_name-Betty Scarpino,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Betty Scarpino, Betty, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Betty Scarpino, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Betty Scarpino, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Betty Scarpino"",""i"")) . }",true
48,Which is the birth place of Betty Spindler?," X1-be-is-null,X2-which-Which-null,X4-Betty Spindler-Betty-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Betty Spindler,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Betty Spindler-Betty-null, X1-subj-X2,X1-obj-X3,X4-has_name-Betty Spindler,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Betty Spindler, Betty, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Betty Spindler, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Betty Spindler, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Betty Spindler"",""i"")) . }",true
49,Which is the birth place of Bill Beckley?," X1-be-is-null,X2-which-Which-null,X4-Bill Beckley-Bill-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Bill Beckley,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Bill Beckley-Bill-null, X1-subj-X2,X1-obj-X3,X4-has_name-Bill Beckley,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Bill Beckley, Bill, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Bill Beckley, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Bill Beckley, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Bill Beckley"",""i"")) . }",true
50,Which is the birth place of Billy Al Bengston?," X1-be-is-null,X2-which-Which-null,X4-Billy Al Bengston-Billy-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Billy Al Bengston,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Billy Al Bengston-Billy-null, X1-subj-X2,X1-obj-X3,X4-has_name-Billy Al Bengston,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Billy Al Bengston, Billy, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Billy Al Bengston, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Billy Al Bengston, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Billy Al Bengston"",""i"")) . }",true
51,Which is the birth place of Bjorn Egeli?," X1-be-is-null,X2-which-Which-null,X4-Bjorn Egeli-Bjorn-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Bjorn Egeli,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Bjorn Egeli-Bjorn-null, X1-subj-X2,X1-obj-X3,X4-has_name-Bjorn Egeli,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Bjorn Egeli, Bjorn, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Bjorn Egeli, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Bjorn Egeli, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Bjorn Egeli"",""i"")) . }",true
52,Which is the birth place of Blanche Grambs?," X1-be-is-null,X2-which-Which-null,X4-Blanche Grambs-Blanche-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Blanche Grambs,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Blanche Grambs-Blanche-null, X1-subj-X2,X1-obj-X3,X4-has_name-Blanche Grambs,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Blanche Grambs, Blanche, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Blanche Grambs, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Blanche Grambs, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Blanche Grambs"",""i"")) . }",true
53,Which is the birth place of Bob Freimark?," X1-be-is-null,X2-which-Which-null,X4-Bob Freimark-Bob-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Bob Freimark,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Bob Freimark-Bob-null, X1-subj-X2,X1-obj-X3,X4-has_name-Bob Freimark,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Bob Freimark, Bob, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Bob Freimark, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Bob Freimark, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Bob Freimark"",""i"")) . }",true
54,Which is the birth place of Bob Thompson?," X1-be-is-null,X2-which-Which-null,X4-Bob Thompson-Bob-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Bob Thompson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Bob Thompson-Bob-null, X1-subj-X2,X1-obj-X3,X4-has_name-Bob Thompson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Bob Thompson, Bob, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Bob Thompson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Bob Thompson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Bob Thompson"",""i"")) . }",true
55,Which is the birth place of Bob Winston?," X1-be-is-null,X2-which-Which-null,X4-Bob Winston-Bob-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Bob Winston,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Bob Winston-Bob-null, X1-subj-X2,X1-obj-X3,X4-has_name-Bob Winston,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Bob Winston, Bob, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Bob Winston, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Bob Winston, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Bob Winston"",""i"")) . }",true
56,Which is the birth place of Boris Gorelick?," X1-be-is-null,X2-which-Which-null,X4-Boris Gorelick-Boris-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Boris Gorelick,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Boris Gorelick-Boris-null, X1-subj-X2,X1-obj-X3,X4-has_name-Boris Gorelick,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Boris Gorelick, Boris, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Boris Gorelick, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Boris Gorelick, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Boris Gorelick"",""i"")) . }",true
57,Which is the birth place of Brother Thomas Bezanson?," X1-be-is-null,X2-which-Which-null,X4-Brother Thomas Bezanson-Brother-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Brother Thomas Bezanson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Brother Thomas Bezanson-Brother-null, X1-subj-X2,X1-obj-X3,X4-has_name-Brother Thomas Bezanson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Brother Thomas Bezanson, Brother, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Brother Thomas Bezanson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Brother Thomas Bezanson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Brother Thomas Bezanson"",""i"")) . }",true
58,Which is the birth place of Buenaventura Salesa?," X1-be-is-null,X2-which-Which-null,X4-Buenaventura Salesa-Buenaventura-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Buenaventura Salesa,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Buenaventura Salesa-Buenaventura-null, X1-subj-X2,X1-obj-X3,X4-has_name-Buenaventura Salesa,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Buenaventura Salesa, Buenaventura, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Buenaventura Salesa, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Buenaventura Salesa, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Buenaventura Salesa"",""i"")) . }",true
59,Which is the birth place of C. K. Chatterton?," X1-be-is-null,X2-which-Which-null,X4-C. K. Chatterton-C.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-C. K. Chatterton,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-C. K. Chatterton-C.-null, X1-subj-X2,X1-obj-X3,X4-has_name-C. K. Chatterton,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, C. K. Chatterton, C., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, C. K. Chatterton, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, C. K. Chatterton, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""C\\. K\\. Chatterton"",""i"")) . }",true
60,Which is the birth place of CHRISTIAN MARCLAY (NEA)?," X1-be-is-null,X2-which-Which-null,X5-NEA-NEA-null,X4-Christian Marclay-CHRISTIAN-null,X3-birth place-birth place-the, X1-subj-X2,X5-has_name-NEA,X4-rel-X5,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X5-NEA-NEA-null,X4-Christian Marclay-CHRISTIAN-null, X1-subj-X2,X1-obj-X3,X5-has_name-NEA,X4-rel-X5,X1-obl_of-X4,",Incorrect partial DRS,null,null
61,Which is the birth place of Carl Dern?," X1-be-is-null,X2-which-Which-null,X4-Carl Dern-Carl-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Carl Dern,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Carl Dern-Carl-null, X1-subj-X2,X1-obj-X3,X4-has_name-Carl Dern,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Carl Dern, Carl, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Carl Dern, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Carl Dern, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Carl Dern"",""i"")) . }",true
62,Which is the birth place of Carl Holty?," X1-be-is-null,X2-which-Which-null,X4-Carl Holty-Carl-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Carl Holty,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Carl Holty-Carl-null, X1-subj-X2,X1-obj-X3,X4-has_name-Carl Holty,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Carl Holty, Carl, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Carl Holty, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Carl Holty, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Carl Holty"",""i"")) . }",true
63,Which is the birth place of Carl Van Vechten?," X1-be-is-null,X2-which-Which-null,X4-Carl Van Vechten-Carl-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Carl Van Vechten,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Carl Van Vechten-Carl-null, X1-subj-X2,X1-obj-X3,X4-has_name-Carl Van Vechten,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Carl Van Vechten, Carl, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Carl Van Vechten, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Carl Van Vechten, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Carl Van Vechten"",""i"")) . }",true
64,Which is the birth place of Carlos Alfonzo?," X1-be-is-null,X2-which-Which-null,X4-Carlos Alfonzo-Carlos-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Carlos Alfonzo,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Carlos Alfonzo-Carlos-null, X1-subj-X2,X1-obj-X3,X4-has_name-Carlos Alfonzo,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Carlos Alfonzo, Carlos, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Carlos Alfonzo, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Carlos Alfonzo, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Carlos Alfonzo"",""i"")) . }",true
65,Which is the birth place of Carlos López?," X1-be-is-null,X2-which-Which-null,X4-Carlos López-Carlos-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Carlos López,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Carlos López-Carlos-null, X1-subj-X2,X1-obj-X3,X4-has_name-Carlos López,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Carlos López, Carlos, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Carlos López, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Carlos López, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Carlos López"",""i"")) . }",true
66,Which is the birth place of Carlos Santistevan?," X1-be-is-null,X2-which-Which-null,X4-Carlos Santistevan-Carlos-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Carlos Santistevan,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Carlos Santistevan-Carlos-null, X1-subj-X2,X1-obj-X3,X4-has_name-Carlos Santistevan,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Carlos Santistevan, Carlos, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Carlos Santistevan, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Carlos Santistevan, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Carlos Santistevan"",""i"")) . }",true
67,Which is the birth place of Charles Anton Kaeselau?," X1-be-is-null,X2-which-Which-null,X4-Charles Anton Kaeselau-Charles-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Charles Anton Kaeselau,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Charles Anton Kaeselau-Charles-null, X1-subj-X2,X1-obj-X3,X4-has_name-Charles Anton Kaeselau,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Charles Anton Kaeselau, Charles, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Charles Anton Kaeselau, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Charles Anton Kaeselau, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charles Anton Kaeselau"",""i"")) . }",true
68,Which is the birth place of Charles François Lacroix de Marseille?," X1-be-is-null,X2-which-Which-null,X4-Charles François Lacroix de Marseille-Charles-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Charles François Lacroix de Marseille,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Charles François Lacroix de Marseille-Charles-null, X1-subj-X2,X1-obj-X3,X4-has_name-Charles François Lacroix de Marseille,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Charles François Lacroix de Marseille, Charles, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Charles François Lacroix de Marseille, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Charles François Lacroix de Marseille, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charles François Lacroix de Marseille"",""i"")) . }",true
69,Which is the birth place of Charles Fraser?," X1-be-is-null,X2-which-Which-null,X4-Charles Fraser-Charles-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Charles Fraser,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Charles Fraser-Charles-null, X1-subj-X2,X1-obj-X3,X4-has_name-Charles Fraser,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Charles Fraser, Charles, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Charles Fraser, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Charles Fraser, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charles Fraser"",""i"")) . }",true
70,Which is the birth place of Charles Merrick Capps?," X1-be-is-null,X2-which-Which-null,X4-Charles Merrick Capps-Charles-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Charles Merrick Capps,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Charles Merrick Capps-Charles-null, X1-subj-X2,X1-obj-X3,X4-has_name-Charles Merrick Capps,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Charles Merrick Capps, Charles, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Charles Merrick Capps, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Charles Merrick Capps, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charles Merrick Capps"",""i"")) . }",true
71,Which is the birth place of Charles Mottram?," X1-be-is-null,X2-which-Which-null,X4-Charles Mottram-Charles-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Charles Mottram,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Charles Mottram-Charles-null, X1-subj-X2,X1-obj-X3,X4-has_name-Charles Mottram,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Charles Mottram, Charles, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Charles Mottram, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Charles Mottram, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charles Mottram"",""i"")) . }",true
72,Which is the birth place of Charles Pollock?," X1-be-is-null,X2-which-Which-null,X4-Charles Pollock-Charles-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Charles Pollock,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Charles Pollock-Charles-null, X1-subj-X2,X1-obj-X3,X4-has_name-Charles Pollock,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Charles Pollock, Charles, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Charles Pollock, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Charles Pollock, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charles Pollock"",""i"")) . }",true
73,Which is the birth place of Charles Roscoe Savage?," X1-be-is-null,X2-which-Which-null,X4-Charles Roscoe Savage-Charles-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Charles Roscoe Savage,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Charles Roscoe Savage-Charles-null, X1-subj-X2,X1-obj-X3,X4-has_name-Charles Roscoe Savage,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Charles Roscoe Savage, Charles, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Charles Roscoe Savage, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Charles Roscoe Savage, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charles Roscoe Savage"",""i"")) . }",true
74,Which is the birth place of Charles W. Hawthorne?," X1-be-is-null,X2-which-Which-null,X4-Charles W. Hawthorne-Charles-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Charles W. Hawthorne,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Charles W. Hawthorne-Charles-null, X1-subj-X2,X1-obj-X3,X4-has_name-Charles W. Hawthorne,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Charles W. Hawthorne, Charles, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Charles W. Hawthorne, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Charles W. Hawthorne, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charles W\\. Hawthorne"",""i"")) . }",true
75,Which is the birth place of Charles W. Ward?," X1-be-is-null,X2-which-Which-null,X4-Charles W. Ward-Charles-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Charles W. Ward,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Charles W. Ward-Charles-null, X1-subj-X2,X1-obj-X3,X4-has_name-Charles W. Ward,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Charles W. Ward, Charles, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Charles W. Ward, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Charles W. Ward, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charles W\\. Ward"",""i"")) . }",true
76,Which is the birth place of Charlie Willeto?," X1-be-is-null,X2-which-Which-null,X4-Charlie Willeto-Charlie-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Charlie Willeto,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Charlie Willeto-Charlie-null, X1-subj-X2,X1-obj-X3,X4-has_name-Charlie Willeto,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Charlie Willeto, Charlie, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Charlie Willeto, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Charlie Willeto, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charlie Willeto"",""i"")) . }",true
77,Which is the birth place of Chauncey Frederick Korten?," X1-be-is-null,X2-which-Which-null,X4-Chauncey Frederick Korten-Chauncey-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Chauncey Frederick Korten,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Chauncey Frederick Korten-Chauncey-null, X1-subj-X2,X1-obj-X3,X4-has_name-Chauncey Frederick Korten,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Chauncey Frederick Korten, Chauncey, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Chauncey Frederick Korten, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Chauncey Frederick Korten, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Chauncey Frederick Korten"",""i"")) . }",true
78,Which is the birth place of Chester Leich?," X1-be-is-null,X2-which-Which-null,X4-Chester Leich-Chester-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Chester Leich,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Chester Leich-Chester-null, X1-subj-X2,X1-obj-X3,X4-has_name-Chester Leich,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Chester Leich, Chester, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Chester Leich, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Chester Leich, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Chester Leich"",""i"")) . }",true
79,Which is the birth place of Chiura Obata?," X1-be-is-null,X2-which-Which-null,X4-Chiura Obata-Chiura-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Chiura Obata,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Chiura Obata-Chiura-null, X1-subj-X2,X1-obj-X3,X4-has_name-Chiura Obata,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Chiura Obata, Chiura, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Chiura Obata, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Chiura Obata, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Chiura Obata"",""i"")) . }",true
80,Which is the birth place of Chou Pang-Ling?," X1-be-is-null,X2-which-Which-null,X4-Chou Pang-Chou-null,X3-birth place Ling-birth place-the, X1-subj-X2,X4-has_name-Chou Pang,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place Ling-birth place-the,X4-Chou Pang-Chou-null, X1-subj-X2,X1-obj-X3,X4-has_name-Chou Pang,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Chou Pang, Chou, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place Ling, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Chou Pang, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Chou Pang, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place Ling, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 2]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Chou Pang"",""i"")) . }",true
81,Which is the birth place of Chris Irick?," X1-be-is-null,X2-which-Which-null,X4-Chris Irick-Chris-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Chris Irick,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Chris Irick-Chris-null, X1-subj-X2,X1-obj-X3,X4-has_name-Chris Irick,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Chris Irick, Chris, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Chris Irick, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Chris Irick, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Chris Irick"",""i"")) . }",true
82,Which is the birth place of Christo?," X1-be-is-null,X2-which-Which-null,X4-Christo-Christo-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Christo,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Christo-Christo-null, X1-subj-X2,X1-obj-X3,X4-has_name-Christo,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Christo, Christo, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Christo, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Christo, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Christo"",""i"")) . }",true
83,Which is the birth place of Christoffel Wüst?," X1-be-is-null,X2-which-Which-null,X4-Christoffel Wüst-Christoffel-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Christoffel Wüst,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Christoffel Wüst-Christoffel-null, X1-subj-X2,X1-obj-X3,X4-has_name-Christoffel Wüst,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Christoffel Wüst, Christoffel, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Christoffel Wüst, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Christoffel Wüst, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Christoffel Wüst"",""i"")) . }",true
84,Which is the birth place of Chuck Hindes?," X1-be-is-null,X2-which-Which-null,X4-Chuck Hindes-Chuck-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Chuck Hindes,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Chuck Hindes-Chuck-null, X1-subj-X2,X1-obj-X3,X4-has_name-Chuck Hindes,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Chuck Hindes, Chuck, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Chuck Hindes, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Chuck Hindes, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Chuck Hindes"",""i"")) . }",true
85,Which is the birth place of Chuck Ramirez?," X1-be-is-null,X2-which-Which-null,X4-Chuck Ramirez-Chuck-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Chuck Ramirez,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Chuck Ramirez-Chuck-null, X1-subj-X2,X1-obj-X3,X4-has_name-Chuck Ramirez,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Chuck Ramirez, Chuck, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Chuck Ramirez, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Chuck Ramirez, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Chuck Ramirez"",""i"")) . }",true
86,Which is the birth place of Clara Fasano?," X1-be-is-null,X2-which-Which-null,X4-Clara Fasano-Clara-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Clara Fasano,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Clara Fasano-Clara-null, X1-subj-X2,X1-obj-X3,X4-has_name-Clara Fasano,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Clara Fasano, Clara, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Clara Fasano, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Clara Fasano, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Clara Fasano"",""i"")) . }",true
87,Which is the birth place of Clay Grigsby?," X1-be-is-null,X2-which-Which-null,X4-Clay Grigsby-Clay-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Clay Grigsby,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Clay Grigsby-Clay-null, X1-subj-X2,X1-obj-X3,X4-has_name-Clay Grigsby,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Clay Grigsby, Clay, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Clay Grigsby, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Clay Grigsby, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Clay Grigsby"",""i"")) . }",true
88,Which is the birth place of Clinton Adams?," X1-be-is-null,X2-which-Which-null,X4-Clinton Adams-Clinton-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Clinton Adams,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Clinton Adams-Clinton-null, X1-subj-X2,X1-obj-X3,X4-has_name-Clinton Adams,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Clinton Adams, Clinton, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Clinton Adams, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Clinton Adams, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Clinton Adams"",""i"")) . }",true
89,Which is the birth place of Clyde F. Jenkins?," X1-be-is-null,X2-which-Which-null,X4-Clyde F. Jenkins-Clyde-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Clyde F. Jenkins,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Clyde F. Jenkins-Clyde-null, X1-subj-X2,X1-obj-X3,X4-has_name-Clyde F. Jenkins,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Clyde F. Jenkins, Clyde, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Clyde F. Jenkins, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Clyde F. Jenkins, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Clyde F\\. Jenkins"",""i"")) . }",true
90,Which is the birth place of Clyde Lynds?," X1-be-is-null,X2-which-Which-null,X4-Clyde Lynds-Clyde-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Clyde Lynds,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Clyde Lynds-Clyde-null, X1-subj-X2,X1-obj-X3,X4-has_name-Clyde Lynds,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Clyde Lynds, Clyde, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Clyde Lynds, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Clyde Lynds, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Clyde Lynds"",""i"")) . }",true
91,Which is the birth place of Crystal K. D. Huie?," X1-be-is-null,X2-which-Which-null,X4-Crystal K. D. Huie-Crystal-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Crystal K. D. Huie,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Crystal K. D. Huie-Crystal-null, X1-subj-X2,X1-obj-X3,X4-has_name-Crystal K. D. Huie,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Crystal K. D. Huie, Crystal, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Crystal K. D. Huie, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Crystal K. D. Huie, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Crystal K\\. D\\. Huie"",""i"")) . }",true
92,Which is the birth place of Da Loria Norman?," X1-be-is-null,X2-which-Which-null,X4-Da Loria Norman-Da-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Da Loria Norman,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Da Loria Norman-Da-null, X1-subj-X2,X1-obj-X3,X4-has_name-Da Loria Norman,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Da Loria Norman, Da, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Da Loria Norman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Da Loria Norman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Da Loria Norman"",""i"")) . }",true
93,Which is the birth place of Dan Graham?," X1-be-is-null,X2-which-Which-null,X4-Dan Graham-Dan-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Dan Graham,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Dan Graham-Dan-null, X1-subj-X2,X1-obj-X3,X4-has_name-Dan Graham,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Dan Graham, Dan, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Dan Graham, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Dan Graham, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Dan Graham"",""i"")) . }",true
94,Which is the birth place of David Beck?," X1-be-is-null,X2-which-Which-null,X4-David Beck-David-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-David Beck,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-David Beck-David-null, X1-subj-X2,X1-obj-X3,X4-has_name-David Beck,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, David Beck, David, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, David Beck, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, David Beck, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David Beck"",""i"")) . }",true
95,Which is the birth place of David Blue Lamm?," X1-be-is-null,X2-which-Which-null,X4-David Blue Lamm-David-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-David Blue Lamm,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-David Blue Lamm-David-null, X1-subj-X2,X1-obj-X3,X4-has_name-David Blue Lamm,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, David Blue Lamm, David, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, David Blue Lamm, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, David Blue Lamm, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David Blue Lamm"",""i"")) . }",true
96,Which is the birth place of David Burliuk?," X1-be-is-null,X2-which-Which-null,X4-David Burliuk-David-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-David Burliuk,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-David Burliuk-David-null, X1-subj-X2,X1-obj-X3,X4-has_name-David Burliuk,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, David Burliuk, David, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, David Burliuk, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, David Burliuk, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David Burliuk"",""i"")) . }",true
97,Which is the birth place of David Glines?," X1-be-is-null,X2-which-Which-null,X4-David Gline-David-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-David Gline,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-David Gline-David-null, X1-subj-X2,X1-obj-X3,X4-has_name-David Gline,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, David Gline, David, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, David Gline, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, David Gline, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David Gline"",""i"")) . }",true
98,Which is the birth place of David McCosh?," X1-be-is-null,X2-which-Which-null,X4-David McCosh-David-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-David McCosh,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-David McCosh-David-null, X1-subj-X2,X1-obj-X3,X4-has_name-David McCosh,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, David McCosh, David, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, David McCosh, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, David McCosh, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David McCosh"",""i"")) . }",true
99,Which is the birth place of David Meaders?," X1-be-is-null,X2-which-Which-null,X4-David Meaders-David-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-David Meaders,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-David Meaders-David-null, X1-subj-X2,X1-obj-X3,X4-has_name-David Meaders,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, David Meaders, David, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, David Meaders, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, David Meaders, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David Meaders"",""i"")) . }",true
100,Which is the birth place of David Ruddell?," X1-be-is-null,X2-which-Which-null,X4-David Ruddell-David-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-David Ruddell,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-David Ruddell-David-null, X1-subj-X2,X1-obj-X3,X4-has_name-David Ruddell,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, David Ruddell, David, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, David Ruddell, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, David Ruddell, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David Ruddell"",""i"")) . }",true
101,Which is the birth place of David Sengel?," X1-be-is-null,X2-which-Which-null,X4-David Sengel-David-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-David Sengel,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-David Sengel-David-null, X1-subj-X2,X1-obj-X3,X4-has_name-David Sengel,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, David Sengel, David, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, David Sengel, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, David Sengel, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David Sengel"",""i"")) . }",true
102,Which is the birth place of David Stromeyer?," X1-be-is-null,X2-which-Which-null,X4-David Stromeyer-David-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-David Stromeyer,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-David Stromeyer-David-null, X1-subj-X2,X1-obj-X3,X4-has_name-David Stromeyer,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, David Stromeyer, David, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, David Stromeyer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, David Stromeyer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David Stromeyer"",""i"")) . }",true
103,Which is the birth place of David T. Hanson?," X1-be-is-null,X2-which-Which-null,X4-David T. Hanson-David-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-David T. Hanson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-David T. Hanson-David-null, X1-subj-X2,X1-obj-X3,X4-has_name-David T. Hanson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, David T. Hanson, David, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, David T. Hanson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, David T. Hanson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David T\\. Hanson"",""i"")) . }",true
104,Which is the birth place of David Underwood?," X1-be-is-null,X2-which-Which-null,X4-David Underwood-David-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-David Underwood,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-David Underwood-David-null, X1-subj-X2,X1-obj-X3,X4-has_name-David Underwood,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, David Underwood, David, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, David Underwood, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, David Underwood, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David Underwood"",""i"")) . }",true
105,Which is the birth place of David W. Humphrey?," X1-be-is-null,X2-which-Which-null,X4-David W. Humphrey-David-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-David W. Humphrey,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-David W. Humphrey-David-null, X1-subj-X2,X1-obj-X3,X4-has_name-David W. Humphrey,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, David W. Humphrey, David, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, David W. Humphrey, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, David W. Humphrey, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David W\\. Humphrey"",""i"")) . }",true
106,Which is the birth place of David White?," X1-be-is-null,X2-which-Which-null,X4-David White-David-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-David White,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-David White-David-null, X1-subj-X2,X1-obj-X3,X4-has_name-David White,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, David White, David, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, David White, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, David White, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David White"",""i"")) . }",true
107,Which is the birth place of De Lancey Gill?," X1-be-is-null,X2-which-Which-null,X4-De Lancey Gill-De-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-De Lancey Gill,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-De Lancey Gill-De-null, X1-subj-X2,X1-obj-X3,X4-has_name-De Lancey Gill,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, De Lancey Gill, De, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, De Lancey Gill, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, De Lancey Gill, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""De Lancey Gill"",""i"")) . }",true
108,Which is the birth place of Debbie Fleming Caffery?," X1-be-is-null,X2-which-Which-null,X4-Debbie Fleming Caffery-Debbie-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Debbie Fleming Caffery,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Debbie Fleming Caffery-Debbie-null, X1-subj-X2,X1-obj-X3,X4-has_name-Debbie Fleming Caffery,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Debbie Fleming Caffery, Debbie, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Debbie Fleming Caffery, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Debbie Fleming Caffery, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Debbie Fleming Caffery"",""i"")) . }",true
109,Which is the birth place of Delilah Montoya?," X1-be-is-null,X2-which-Which-null,X4-Delilah Montoya-Delilah-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Delilah Montoya,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Delilah Montoya-Delilah-null, X1-subj-X2,X1-obj-X3,X4-has_name-Delilah Montoya,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Delilah Montoya, Delilah, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Delilah Montoya, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Delilah Montoya, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Delilah Montoya"",""i"")) . }",true
110,Which is the birth place of Delwyn Herbert?," X1-be-is-null,X2-which-Which-null,X4-Delwyn Herbert-Delwyn-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Delwyn Herbert,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Delwyn Herbert-Delwyn-null, X1-subj-X2,X1-obj-X3,X4-has_name-Delwyn Herbert,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Delwyn Herbert, Delwyn, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Delwyn Herbert, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Delwyn Herbert, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Delwyn Herbert"",""i"")) . }",true
111,Which is the birth place of Didi Suydam?," X1-be-is-null,X2-which-Which-null,X4-Didi Suydam-Didi-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Didi Suydam,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Didi Suydam-Didi-null, X1-subj-X2,X1-obj-X3,X4-has_name-Didi Suydam,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Didi Suydam, Didi, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Didi Suydam, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Didi Suydam, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Didi Suydam"",""i"")) . }",true
112,"Which is the birth place of Don Doll, S. J.?"," X1-be-is-null,X2-which-Which-null,X4-Don Doll J.?-Don-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-S.,X4-has_name-Don Doll J.?,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Don Doll J.?-Don-null, X1-subj-X2,X1-obj-X3,X4-has_name-S.,X4-has_name-Don Doll J.?,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Don Doll J.?, Don, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, S., propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_name, Don Doll J.?, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Don Doll J.?, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 3
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Don Doll J\\.\\?"",""i"")) . {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""S\\."",""i"")) . }",false
113,Which is the birth place of Donal Hord?," X1-be-is-null,X2-which-Which-null,X4-Donal Hord-Donal-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Donal Hord,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Donal Hord-Donal-null, X1-subj-X2,X1-obj-X3,X4-has_name-Donal Hord,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Donal Hord, Donal, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Donal Hord, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Donal Hord, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Donal Hord"",""i"")) . }",true
114,Which is the birth place of Doris Rosenthal?," X1-be-is-null,X2-which-Which-null,X4-Doris Rosenthal-Doris-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Doris Rosenthal,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Doris Rosenthal-Doris-null, X1-subj-X2,X1-obj-X3,X4-has_name-Doris Rosenthal,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Doris Rosenthal, Doris, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Doris Rosenthal, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Doris Rosenthal, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Doris Rosenthal"",""i"")) . }",true
115,Which is the birth place of Dorothy Gill Barnes?," X1-be-is-null,X2-which-Which-null,X4-Dorothy Gill Barnes-Dorothy-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Dorothy Gill Barnes,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Dorothy Gill Barnes-Dorothy-null, X1-subj-X2,X1-obj-X3,X4-has_name-Dorothy Gill Barnes,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Dorothy Gill Barnes, Dorothy, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Dorothy Gill Barnes, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Dorothy Gill Barnes, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Dorothy Gill Barnes"",""i"")) . }",true
116,Which is the birth place of Dotty Attie?," X1-be-is-null,X2-which-Which-null,X4-Dotty Attie-Dotty-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Dotty Attie,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Dotty Attie-Dotty-null, X1-subj-X2,X1-obj-X3,X4-has_name-Dotty Attie,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Dotty Attie, Dotty, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Dotty Attie, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Dotty Attie, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Dotty Attie"",""i"")) . }",true
117,Which is the birth place of Douglas Kenney?," X1-be-is-null,X2-which-Which-null,X4-Douglas Kenney-Douglas-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Douglas Kenney,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Douglas Kenney-Douglas-null, X1-subj-X2,X1-obj-X3,X4-has_name-Douglas Kenney,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Douglas Kenney, Douglas, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Douglas Kenney, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Douglas Kenney, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Douglas Kenney"",""i"")) . }",true
118,Which is the birth place of Douglas Paul Finkel?," X1-be-is-null,X2-which-Which-null,X4-Douglas Paul Finkel-Douglas-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Douglas Paul Finkel,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Douglas Paul Finkel-Douglas-null, X1-subj-X2,X1-obj-X3,X4-has_name-Douglas Paul Finkel,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Douglas Paul Finkel, Douglas, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Douglas Paul Finkel, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Douglas Paul Finkel, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Douglas Paul Finkel"",""i"")) . }",true
119,Which is the birth place of Douglas Warfield Warner?," X1-be-is-null,X2-which-Which-null,X4-Douglas Warfield Warner-Douglas-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Douglas Warfield Warner,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Douglas Warfield Warner-Douglas-null, X1-subj-X2,X1-obj-X3,X4-has_name-Douglas Warfield Warner,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Douglas Warfield Warner, Douglas, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Douglas Warfield Warner, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Douglas Warfield Warner, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Douglas Warfield Warner"",""i"")) . }",true
120,Which is the birth place of Duncan McCosker?," X1-be-is-null,X2-which-Which-null,X4-Duncan McCosker-Duncan-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Duncan McCosker,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Duncan McCosker-Duncan-null, X1-subj-X2,X1-obj-X3,X4-has_name-Duncan McCosker,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Duncan McCosker, Duncan, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Duncan McCosker, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Duncan McCosker, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Duncan McCosker"",""i"")) . }",true
121,Which is the birth place of E. J. Bellocq?," X1-be-is-null,X2-which-Which-null,X4-E. J. Bellocq-E.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-E. J. Bellocq,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-E. J. Bellocq-E.-null, X1-subj-X2,X1-obj-X3,X4-has_name-E. J. Bellocq,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, E. J. Bellocq, E., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, E. J. Bellocq, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, E. J. Bellocq, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""E\\. J\\. Bellocq"",""i"")) . }",true
122,Which is the birth place of Earl Pardon?," X1-be-is-null,X2-which-Which-null,X4-Earl Pardon-Earl-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Earl Pardon,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Earl Pardon-Earl-null, X1-subj-X2,X1-obj-X3,X4-has_name-Earl Pardon,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Earl Pardon, Earl, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Earl Pardon, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Earl Pardon, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Earl Pardon"",""i"")) . }",true
123,Which is the birth place of Edgar Melville Ward?," X1-be-is-null,X2-which-Which-null,X4-Edgar Melville Ward-Edgar Ward-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Edgar Melville Ward,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Edgar Melville Ward-Edgar Ward-null, X1-subj-X2,X1-obj-X3,X4-has_name-Edgar Melville Ward,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Edgar Melville Ward, Edgar Ward, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Edgar Melville Ward, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Edgar Melville Ward, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Edgar Melville Ward"",""i"")) . }",true
124,Which is the birth place of Edmond Casarella?," X1-be-is-null,X2-which-Which-null,X4-Edmond Casarella-Edmond-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Edmond Casarella,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Edmond Casarella-Edmond-null, X1-subj-X2,X1-obj-X3,X4-has_name-Edmond Casarella,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Edmond Casarella, Edmond, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Edmond Casarella, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Edmond Casarella, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Edmond Casarella"",""i"")) . }",true
125,Which is the birth place of Edward B. Webster?," X1-be-is-null,X2-which-Which-null,X4-Edward B. Webster-Edward-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Edward B. Webster,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Edward B. Webster-Edward-null, X1-subj-X2,X1-obj-X3,X4-has_name-Edward B. Webster,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Edward B. Webster, Edward, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Edward B. Webster, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Edward B. Webster, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Edward B\\. Webster"",""i"")) . }",true
126,Which is the birth place of Edward Goodall?," X1-be-is-null,X2-which-Which-null,X4-Edward Goodall-Edward-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Edward Goodall,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Edward Goodall-Edward-null, X1-subj-X2,X1-obj-X3,X4-has_name-Edward Goodall,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Edward Goodall, Edward, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Edward Goodall, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Edward Goodall, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Edward Goodall"",""i"")) . }",true
127,Which is the birth place of Edward Kienholz?," X1-be-is-null,X2-which-Which-null,X4-Edward Kienholz-Edward-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Edward Kienholz,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Edward Kienholz-Edward-null, X1-subj-X2,X1-obj-X3,X4-has_name-Edward Kienholz,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Edward Kienholz, Edward, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Edward Kienholz, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Edward Kienholz, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Edward Kienholz"",""i"")) . }",true
128,Which is the birth place of Edward Lambert?," X1-be-is-null,X2-which-Which-null,X4-Edward Lambert-Edward-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Edward Lambert,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Edward Lambert-Edward-null, X1-subj-X2,X1-obj-X3,X4-has_name-Edward Lambert,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Edward Lambert, Edward, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Edward Lambert, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Edward Lambert, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Edward Lambert"",""i"")) . }",true
129,Which is the birth place of Edwin Boyd Johnson?," X1-be-is-null,X2-which-Which-null,X4-Edwin Boyd Johnson-Edwin-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Edwin Boyd Johnson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Edwin Boyd Johnson-Edwin-null, X1-subj-X2,X1-obj-X3,X4-has_name-Edwin Boyd Johnson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Edwin Boyd Johnson, Edwin, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Edwin Boyd Johnson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Edwin Boyd Johnson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Edwin Boyd Johnson"",""i"")) . }",true
130,Which is the birth place of Elaine de Kooning?," X1-be-is-null,X2-which-Which-null,X4-Elaine de Kooning-Elaine-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Elaine de Kooning,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Elaine de Kooning-Elaine-null, X1-subj-X2,X1-obj-X3,X4-has_name-Elaine de Kooning,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Elaine de Kooning, Elaine, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Elaine de Kooning, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Elaine de Kooning, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Elaine de Kooning"",""i"")) . }",true
131,Which is the birth place of Elisabetta Sirani?," X1-be-is-null,X2-which-Which-null,X4-Elisabetta Sirani-Elisabetta-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Elisabetta Sirani,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Elisabetta Sirani-Elisabetta-null, X1-subj-X2,X1-obj-X3,X4-has_name-Elisabetta Sirani,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Elisabetta Sirani, Elisabetta, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Elisabetta Sirani, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Elisabetta Sirani, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Elisabetta Sirani"",""i"")) . }",true
132,Which is the birth place of Elizabeth Saltonstall?," X1-be-is-null,X2-which-Which-null,X4-Elizabeth Saltonstall-Elizabeth-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Elizabeth Saltonstall,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Elizabeth Saltonstall-Elizabeth-null, X1-subj-X2,X1-obj-X3,X4-has_name-Elizabeth Saltonstall,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Elizabeth Saltonstall, Elizabeth, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Elizabeth Saltonstall, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Elizabeth Saltonstall, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Elizabeth Saltonstall"",""i"")) . }",true
133,Which is the birth place of Ellen Sharples?," X1-be-is-null,X2-which-Which-null,X4-Ellen Sharples-Ellen-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ellen Sharples,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ellen Sharples-Ellen-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ellen Sharples,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ellen Sharples, Ellen, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ellen Sharples, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ellen Sharples, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ellen Sharples"",""i"")) . }",true
134,Which is the birth place of Elliott Thompson?," X1-be-is-null,X2-which-Which-null,X4-Elliott Thompson-Elliott-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Elliott Thompson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Elliott Thompson-Elliott-null, X1-subj-X2,X1-obj-X3,X4-has_name-Elliott Thompson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Elliott Thompson, Elliott, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Elliott Thompson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Elliott Thompson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Elliott Thompson"",""i"")) . }",true
135,Which is the birth place of Ellsworth Young?," X1-be-is-null,X2-which-Which-null,X4-Ellsworth Young-Ellsworth-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ellsworth Young,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ellsworth Young-Ellsworth-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ellsworth Young,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ellsworth Young, Ellsworth, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ellsworth Young, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ellsworth Young, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ellsworth Young"",""i"")) . }",true
136,Which is the birth place of Eluid Levi Martinez?," X1-be-is-null,X2-which-Which-null,X4-Eluid Levi Martinez-Eluid-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Eluid Levi Martinez,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Eluid Levi Martinez-Eluid-null, X1-subj-X2,X1-obj-X3,X4-has_name-Eluid Levi Martinez,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Eluid Levi Martinez, Eluid, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Eluid Levi Martinez, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Eluid Levi Martinez, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Eluid Levi Martinez"",""i"")) . }",true
137,Which is the birth place of Emile Auguste Carolus-Duran?," X1-be-is-null,X2-which-Which-null,X4-Emile Auguste Carolus-Emile-null,X3-birth place Duran-birth place-the, X1-subj-X2,X4-has_name-Emile Auguste Carolus,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place Duran-birth place-the,X4-Emile Auguste Carolus-Emile-null, X1-subj-X2,X1-obj-X3,X4-has_name-Emile Auguste Carolus,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Emile Auguste Carolus, Emile, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place Duran, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Emile Auguste Carolus, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Emile Auguste Carolus, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place Duran, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 2]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Emile Auguste Carolus"",""i"")) . }",true
138,Which is the birth place of Emile Gallé?," X1-be-is-null,X2-which-Which-null,X4-Emile Gallé-Emile-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Emile Gallé,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Emile Gallé-Emile-null, X1-subj-X2,X1-obj-X3,X4-has_name-Emile Gallé,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Emile Gallé, Emile, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Emile Gallé, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Emile Gallé, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Emile Gallé"",""i"")) . }",true
139,Which is the birth place of Emmett Edwards?," X1-be-is-null,X2-which-Which-null,X4-Emmett Edwards-Emmett-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Emmett Edwards,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Emmett Edwards-Emmett-null, X1-subj-X2,X1-obj-X3,X4-has_name-Emmett Edwards,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Emmett Edwards, Emmett, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Emmett Edwards, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Emmett Edwards, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Emmett Edwards"",""i"")) . }",true
140,Which is the birth place of Enrico Glicenstein?," X1-be-is-null,X2-which-Which-null,X4-Enrico Glicenstein-Enrico-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Enrico Glicenstein,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Enrico Glicenstein-Enrico-null, X1-subj-X2,X1-obj-X3,X4-has_name-Enrico Glicenstein,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Enrico Glicenstein, Enrico, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Enrico Glicenstein, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Enrico Glicenstein, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Enrico Glicenstein"",""i"")) . }",true
141,Which is the birth place of Erik Gronborg?," X1-be-is-null,X2-which-Which-null,X4-Erik Gronborg-Erik-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Erik Gronborg,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Erik Gronborg-Erik-null, X1-subj-X2,X1-obj-X3,X4-has_name-Erik Gronborg,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Erik Gronborg, Erik, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Erik Gronborg, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Erik Gronborg, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Erik Gronborg"",""i"")) . }",true
142,Which is the birth place of Ernest Briggs?," X1-be-is-null,X2-which-Which-null,X4-Ernest Briggs-Ernest-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ernest Briggs,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ernest Briggs-Ernest-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ernest Briggs,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ernest Briggs, Ernest, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ernest Briggs, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ernest Briggs, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ernest Briggs"",""i"")) . }",true
143,Which is the birth place of Ernest D. Roth?," X1-be-is-null,X2-which-Which-null,X4-Ernest D. Roth-Ernest-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ernest D. Roth,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ernest D. Roth-Ernest-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ernest D. Roth,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ernest D. Roth, Ernest, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ernest D. Roth, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ernest D. Roth, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ernest D\\. Roth"",""i"")) . }",true
144,Which is the birth place of Ernest Fiene?," X1-be-is-null,X2-which-Which-null,X4-Ernest Fiene-Ernest-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ernest Fiene,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ernest Fiene-Ernest-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ernest Fiene,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ernest Fiene, Ernest, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ernest Fiene, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ernest Fiene, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ernest Fiene"",""i"")) . }",true
145,Which is the birth place of Ernst Halberstadt?," X1-be-is-null,X2-which-Which-null,X4-Ernst Halberstadt-Ernst-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ernst Halberstadt,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ernst Halberstadt-Ernst-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ernst Halberstadt,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ernst Halberstadt, Ernst, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ernst Halberstadt, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ernst Halberstadt, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ernst Halberstadt"",""i"")) . }",true
146,Which is the birth place of Esther Blaikie MacKinnon?," X1-be-is-null,X2-which-Which-null,X4-Esther Blaikie MacKinnon-Esther-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Esther Blaikie MacKinnon,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Esther Blaikie MacKinnon-Esther-null, X1-subj-X2,X1-obj-X3,X4-has_name-Esther Blaikie MacKinnon,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Esther Blaikie MacKinnon, Esther, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Esther Blaikie MacKinnon, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Esther Blaikie MacKinnon, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Esther Blaikie MacKinnon"",""i"")) . }",true
147,Which is the birth place of Esther Louise Peck Newton?," X1-be-is-null,X2-which-Which-null,X4-Esther Louise Peck Newton-Esther-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Esther Louise Peck Newton,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Esther Louise Peck Newton-Esther-null, X1-subj-X2,X1-obj-X3,X4-has_name-Esther Louise Peck Newton,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Esther Louise Peck Newton, Esther, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Esther Louise Peck Newton, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Esther Louise Peck Newton, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Esther Louise Peck Newton"",""i"")) . }",true
148,Which is the birth place of Ethelyn Cosby Stewart?," X1-be-is-null,X2-which-Which-null,X4-Ethelyn Cosby Stewart-Ethelyn-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ethelyn Cosby Stewart,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ethelyn Cosby Stewart-Ethelyn-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ethelyn Cosby Stewart,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ethelyn Cosby Stewart, Ethelyn, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ethelyn Cosby Stewart, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ethelyn Cosby Stewart, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ethelyn Cosby Stewart"",""i"")) . }",true
149,Which is the birth place of Eugene C. Fitsch?," X1-be-is-null,X2-which-Which-null,X4-Eugene C. Fitsch-Eugene-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Eugene C. Fitsch,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Eugene C. Fitsch-Eugene-null, X1-subj-X2,X1-obj-X3,X4-has_name-Eugene C. Fitsch,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Eugene C. Fitsch, Eugene, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Eugene C. Fitsch, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Eugene C. Fitsch, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Eugene C\\. Fitsch"",""i"")) . }",true
150,Which is the birth place of Eugene James Faber?," X1-be-is-null,X2-which-Which-null,X4-Eugene James Faber-Eugene-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Eugene James Faber,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Eugene James Faber-Eugene-null, X1-subj-X2,X1-obj-X3,X4-has_name-Eugene James Faber,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Eugene James Faber, Eugene, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Eugene James Faber, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Eugene James Faber, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Eugene James Faber"",""i"")) . }",true
151,Which is the birth place of Eugenio Landesio?," X1-be-is-null,X2-which-Which-null,X4-Eugenio Landesio-Eugenio-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Eugenio Landesio,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Eugenio Landesio-Eugenio-null, X1-subj-X2,X1-obj-X3,X4-has_name-Eugenio Landesio,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Eugenio Landesio, Eugenio, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Eugenio Landesio, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Eugenio Landesio, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Eugenio Landesio"",""i"")) . }",true
152,Which is the birth place of Eyre de Lanux?," X1-be-is-null,X2-which-Which-null,X4-Eyre de Lanux-Eyre-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Eyre de Lanux,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Eyre de Lanux-Eyre-null, X1-subj-X2,X1-obj-X3,X4-has_name-Eyre de Lanux,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Eyre de Lanux, Eyre, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Eyre de Lanux, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Eyre de Lanux, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Eyre de Lanux"",""i"")) . }",true
153,Which is the birth place of F. Luis Mora?," X1-be-is-null,X2-which-Which-null,X4-F. Luis Mora-F.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-F. Luis Mora,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-F. Luis Mora-F.-null, X1-subj-X2,X1-obj-X3,X4-has_name-F. Luis Mora,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, F. Luis Mora, F., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, F. Luis Mora, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, F. Luis Mora, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""F\\. Luis Mora"",""i"")) . }",true
154,Which is the birth place of Fay Chong?," X1-be-is-null,X2-which-Which-null,X4-Fay Chong-Fay-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Fay Chong,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Fay Chong-Fay-null, X1-subj-X2,X1-obj-X3,X4-has_name-Fay Chong,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Fay Chong, Fay, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Fay Chong, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Fay Chong, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Fay Chong"",""i"")) . }",true
155,Which is the birth place of Ferdinand Pettrich?," X1-be-is-null,X2-which-Which-null,X4-Ferdinand Pettrich-Ferdinand-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ferdinand Pettrich,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ferdinand Pettrich-Ferdinand-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ferdinand Pettrich,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ferdinand Pettrich, Ferdinand, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ferdinand Pettrich, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ferdinand Pettrich, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ferdinand Pettrich"",""i"")) . }",true
156,Which is the birth place of Ferol Sibley Warthen?," X1-be-is-null,X2-which-Which-null,X4-Ferol Sibley Warthen-Ferol-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ferol Sibley Warthen,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ferol Sibley Warthen-Ferol-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ferol Sibley Warthen,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ferol Sibley Warthen, Ferol, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ferol Sibley Warthen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ferol Sibley Warthen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ferol Sibley Warthen"",""i"")) . }",true
157,Which is the birth place of Frances Felten?," X1-be-is-null,X2-which-Which-null,X4-Frances Felten-Frances-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Frances Felten,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Frances Felten-Frances-null, X1-subj-X2,X1-obj-X3,X4-has_name-Frances Felten,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Frances Felten, Frances, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Frances Felten, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Frances Felten, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frances Felten"",""i"")) . }",true
158,Which is the birth place of Frances H. Gearhart?," X1-be-is-null,X2-which-Which-null,X4-Frances H. Gearhart-Frances-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Frances H. Gearhart,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Frances H. Gearhart-Frances-null, X1-subj-X2,X1-obj-X3,X4-has_name-Frances H. Gearhart,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Frances H. Gearhart, Frances, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Frances H. Gearhart, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Frances H. Gearhart, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frances H\\. Gearhart"",""i"")) . }",true
159,Which is the birth place of Frances Higgins?," X1-be-is-null,X2-which-Which-null,X4-Frances Higgins-Frances-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Frances Higgins,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Frances Higgins-Frances-null, X1-subj-X2,X1-obj-X3,X4-has_name-Frances Higgins,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Frances Higgins, Frances, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Frances Higgins, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Frances Higgins, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frances Higgins"",""i"")) . }",true
160,Which is the birth place of Francis Kearny?," X1-be-is-null,X2-which-Which-null,X4-Francis Kearny-Francis-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Francis Kearny,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Francis Kearny-Francis-null, X1-subj-X2,X1-obj-X3,X4-has_name-Francis Kearny,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Francis Kearny, Francis, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Francis Kearny, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Francis Kearny, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Francis Kearny"",""i"")) . }",true
161,Which is the birth place of Francis Scott King?," X1-be-is-null,X2-which-Which-null,X4-Francis Scott King-Francis-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Francis Scott King,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Francis Scott King-Francis-null, X1-subj-X2,X1-obj-X3,X4-has_name-Francis Scott King,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Francis Scott King, Francis, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Francis Scott King, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Francis Scott King, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Francis Scott King"",""i"")) . }",true
162,Which is the birth place of Francois Vivares?," X1-be-is-null,X2-which-Which-null,X4-Francois Vivares-Francois-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Francois Vivares,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Francois Vivares-Francois-null, X1-subj-X2,X1-obj-X3,X4-has_name-Francois Vivares,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Francois Vivares, Francois, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Francois Vivares, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Francois Vivares, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Francois Vivares"",""i"")) . }",true
163,Which is the birth place of Frank Armstrong?," X1-be-is-null,X2-which-Which-null,X4-Frank Armstrong-Frank-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Frank Armstrong,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Frank Armstrong-Frank-null, X1-subj-X2,X1-obj-X3,X4-has_name-Frank Armstrong,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Frank Armstrong, Frank, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Frank Armstrong, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Frank Armstrong, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frank Armstrong"",""i"")) . }",true
164,Which is the birth place of Frank Bergman?," X1-be-is-null,X2-which-Which-null,X4-Frank Bergman-Frank-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Frank Bergman,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Frank Bergman-Frank-null, X1-subj-X2,X1-obj-X3,X4-has_name-Frank Bergman,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Frank Bergman, Frank, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Frank Bergman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Frank Bergman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frank Bergman"",""i"")) . }",true
165,Which is the birth place of Frank French?," X1-be-is-null,X2-which-Which-null,X4-Frank French-Frank-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Frank French,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Frank French-Frank-null, X1-subj-X2,X1-obj-X3,X4-has_name-Frank French,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Frank French, Frank, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Frank French, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Frank French, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frank French"",""i"")) . }",true
166,Which is the birth place of Frank Stella?," X1-be-is-null,X2-which-Which-null,X4-Frank Stella-Frank-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Frank Stella,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Frank Stella-Frank-null, X1-subj-X2,X1-obj-X3,X4-has_name-Frank Stella,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Frank Stella, Frank, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Frank Stella, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Frank Stella, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frank Stella"",""i"")) . }",true
167,Which is the birth place of Frans Wildenhain?," X1-be-is-null,X2-which-Which-null,X4-Frans Wildenhain-Frans-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Frans Wildenhain,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Frans Wildenhain-Frans-null, X1-subj-X2,X1-obj-X3,X4-has_name-Frans Wildenhain,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Frans Wildenhain, Frans, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Frans Wildenhain, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Frans Wildenhain, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frans Wildenhain"",""i"")) . }",true
168,Which is the birth place of Françoise Grossen?," X1-be-is-null,X2-which-Which-null,X4-Françoise Grossen-Françoise-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Françoise Grossen,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Françoise Grossen-Françoise-null, X1-subj-X2,X1-obj-X3,X4-has_name-Françoise Grossen,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Françoise Grossen, Françoise, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Françoise Grossen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Françoise Grossen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Françoise Grossen"",""i"")) . }",true
169,Which is the birth place of Fred Genis?," X1-be-is-null,X2-which-Which-null,X4-Fred Genis-Fred-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Fred Genis,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Fred Genis-Fred-null, X1-subj-X2,X1-obj-X3,X4-has_name-Fred Genis,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Fred Genis, Fred, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Fred Genis, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Fred Genis, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Fred Genis"",""i"")) . }",true
170,Which is the birth place of Fred Shane?," X1-be-is-null,X2-which-Which-null,X4-Fred Shane-Fred-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Fred Shane,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Fred Shane-Fred-null, X1-subj-X2,X1-obj-X3,X4-has_name-Fred Shane,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Fred Shane, Fred, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Fred Shane, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Fred Shane, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Fred Shane"",""i"")) . }",true
171,Which is the birth place of Frederic Marvin?," X1-be-is-null,X2-which-Which-null,X4-Frederic Marvin-Frederic-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Frederic Marvin,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Frederic Marvin-Frederic-null, X1-subj-X2,X1-obj-X3,X4-has_name-Frederic Marvin,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Frederic Marvin, Frederic, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Frederic Marvin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Frederic Marvin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frederic Marvin"",""i"")) . }",true
172,Which is the birth place of Frederick Franck?," X1-be-is-null,X2-which-Which-null,X4-Frederick Franck-Frederick-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Frederick Franck,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Frederick Franck-Frederick-null, X1-subj-X2,X1-obj-X3,X4-has_name-Frederick Franck,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Frederick Franck, Frederick, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Frederick Franck, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Frederick Franck, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frederick Franck"",""i"")) . }",true
173,Which is the birth place of Frederick Langenheim?," X1-be-is-null,X2-which-Which-null,X4-Frederick Langenheim-Frederick-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Frederick Langenheim,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Frederick Langenheim-Frederick-null, X1-subj-X2,X1-obj-X3,X4-has_name-Frederick Langenheim,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Frederick Langenheim, Frederick, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Frederick Langenheim, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Frederick Langenheim, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frederick Langenheim"",""i"")) . }",true
174,Which is the birth place of Frederick W. Harer?," X1-be-is-null,X2-which-Which-null,X4-Frederick W. Harer-Frederick-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Frederick W. Harer,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Frederick W. Harer-Frederick-null, X1-subj-X2,X1-obj-X3,X4-has_name-Frederick W. Harer,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Frederick W. Harer, Frederick, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Frederick W. Harer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Frederick W. Harer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frederick W\\. Harer"",""i"")) . }",true
175,Which is the birth place of Félix López?," X1-be-is-null,X2-which-Which-null,X4-Félix López-Félix-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Félix López,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Félix López-Félix-null, X1-subj-X2,X1-obj-X3,X4-has_name-Félix López,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Félix López, Félix, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Félix López, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Félix López, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Félix López"",""i"")) . }",true
176,Which is the birth place of Gayleen Aiken?," X1-be-is-null,X2-which-Which-null,X4-Gayleen Aiken-Gayleen-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Gayleen Aiken,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Gayleen Aiken-Gayleen-null, X1-subj-X2,X1-obj-X3,X4-has_name-Gayleen Aiken,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Gayleen Aiken, Gayleen, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Gayleen Aiken, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Gayleen Aiken, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Gayleen Aiken"",""i"")) . }",true
177,Which is the birth place of Genichiro Inokuma?," X1-be-is-null,X2-which-Which-null,X4-Genichiro Inokuma-Genichiro-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Genichiro Inokuma,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Genichiro Inokuma-Genichiro-null, X1-subj-X2,X1-obj-X3,X4-has_name-Genichiro Inokuma,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Genichiro Inokuma, Genichiro, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Genichiro Inokuma, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Genichiro Inokuma, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Genichiro Inokuma"",""i"")) . }",true
178,Which is the birth place of George A. Tice?," X1-be-is-null,X2-which-Which-null,X4-George A. Tice-George-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-George A. Tice,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-George A. Tice-George-null, X1-subj-X2,X1-obj-X3,X4-has_name-George A. Tice,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, George A. Tice, George, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, George A. Tice, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, George A. Tice, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""George A\\. Tice"",""i"")) . }",true
179,Which is the birth place of George Fuller?," X1-be-is-null,X2-which-Which-null,X4-George Fuller-George-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-George Fuller,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-George Fuller-George-null, X1-subj-X2,X1-obj-X3,X4-has_name-George Fuller,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, George Fuller, George, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, George Fuller, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, George Fuller, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""George Fuller"",""i"")) . }",true
180,Which is the birth place of George Inness?," X1-be-is-null,X2-which-Which-null,X4-George Inness-George-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-George Inness,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-George Inness-George-null, X1-subj-X2,X1-obj-X3,X4-has_name-George Inness,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, George Inness, George, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, George Inness, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, George Inness, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""George Inness"",""i"")) . }",true
181,Which is the birth place of George Rickey?," X1-be-is-null,X2-which-Which-null,X4-George Rickey-George-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-George Rickey,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-George Rickey-George-null, X1-subj-X2,X1-obj-X3,X4-has_name-George Rickey,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, George Rickey, George, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, George Rickey, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, George Rickey, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""George Rickey"",""i"")) . }",true
182,Which is the birth place of George Snow Hill?," X1-be-is-null,X2-which-Which-null,X4-George Snow Hill-George-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-George Snow Hill,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-George Snow Hill-George-null, X1-subj-X2,X1-obj-X3,X4-has_name-George Snow Hill,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, George Snow Hill, George, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, George Snow Hill, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, George Snow Hill, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""George Snow Hill"",""i"")) . }",true
183,Which is the birth place of George T. Morgan?," X1-be-is-null,X2-which-Which-null,X4-George T. Morgan-George-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-George T. Morgan,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-George T. Morgan-George-null, X1-subj-X2,X1-obj-X3,X4-has_name-George T. Morgan,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, George T. Morgan, George, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, George T. Morgan, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, George T. Morgan, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""George T\\. Morgan"",""i"")) . }",true
184,"Which is the birth place of Giacomo Palma, the younger?"," X1-be-is-null,X2-which-Which-null,X5-young-younger-the,X4-Giacomo Palma-Giacomo-null,X3-birth place-birth place-the, X1-subj-X2,X4-rel-X5,X4-has_name-Giacomo Palma,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X5-young-younger-the,X4-Giacomo Palma-Giacomo-null, X1-subj-X2,X1-obj-X3,X4-rel-X5,X4-has_name-Giacomo Palma,X1-obl_of-X4,",Incorrect partial DRS,null,null
185,Which is the birth place of Gil Smith?," X1-be-is-null,X2-which-Which-null,X4-Gil Smith-Gil-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Gil Smith,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Gil Smith-Gil-null, X1-subj-X2,X1-obj-X3,X4-has_name-Gil Smith,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Gil Smith, Gil, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Gil Smith, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Gil Smith, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Gil Smith"",""i"")) . }",true
186,Which is the birth place of Gilbert Gaul?," X1-be-is-null,X2-which-Which-null,X4-Gilbert Gaul-Gilbert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Gilbert Gaul,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Gilbert Gaul-Gilbert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Gilbert Gaul,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Gilbert Gaul, Gilbert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Gilbert Gaul, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Gilbert Gaul, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Gilbert Gaul"",""i"")) . }",true
187,Which is the birth place of Gilbert Stuart Newton?," X1-be-is-null,X2-which-Which-null,X4-Gilbert Stuart Newton-Gilbert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Gilbert Stuart Newton,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Gilbert Stuart Newton-Gilbert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Gilbert Stuart Newton,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Gilbert Stuart Newton, Gilbert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Gilbert Stuart Newton, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Gilbert Stuart Newton, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Gilbert Stuart Newton"",""i"")) . }",true
188,Which is the birth place of Giuseppe Cesari?," X1-be-is-null,X2-which-Which-null,X4-Giuseppe Cesari-Giuseppe-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Giuseppe Cesari,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Giuseppe Cesari-Giuseppe-null, X1-subj-X2,X1-obj-X3,X4-has_name-Giuseppe Cesari,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Giuseppe Cesari, Giuseppe, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Giuseppe Cesari, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Giuseppe Cesari, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Giuseppe Cesari"",""i"")) . }",true
189,Which is the birth place of Grant Mudford?," X1-be-is-null,X2-which-Which-null,X4-grant Mudford-Grant-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-grant Mudford,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-grant Mudford-Grant-null, X1-subj-X2,X1-obj-X3,X4-has_name-grant Mudford,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, grant Mudford, Grant, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, grant Mudford, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, grant Mudford, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""grant Mudford"",""i"")) . }",true
190,Which is the birth place of Gregory Conniff?," X1-be-is-null,X2-which-Which-null,X4-Gregory Conniff-Gregory-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Gregory Conniff,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Gregory Conniff-Gregory-null, X1-subj-X2,X1-obj-X3,X4-has_name-Gregory Conniff,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Gregory Conniff, Gregory, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Gregory Conniff, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Gregory Conniff, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Gregory Conniff"",""i"")) . }",true
191,Which is the birth place of Gustave Baumann?," X1-be-is-null,X2-which-Which-null,X4-Gustave Baumann-Gustave-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Gustave Baumann,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Gustave Baumann-Gustave-null, X1-subj-X2,X1-obj-X3,X4-has_name-Gustave Baumann,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Gustave Baumann, Gustave, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Gustave Baumann, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Gustave Baumann, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Gustave Baumann"",""i"")) . }",true
192,Which is the birth place of Gustave Klumpp?," X1-be-is-null,X2-which-Which-null,X4-Gustave Klumpp-Gustave-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Gustave Klumpp,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Gustave Klumpp-Gustave-null, X1-subj-X2,X1-obj-X3,X4-has_name-Gustave Klumpp,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Gustave Klumpp, Gustave, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Gustave Klumpp, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Gustave Klumpp, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Gustave Klumpp"",""i"")) . }",true
193,Which is the birth place of Gwendolyn A. Magee?," X1-be-is-null,X2-which-Which-null,X4-Gwendolyn A. Magee-Gwendolyn-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Gwendolyn A. Magee,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Gwendolyn A. Magee-Gwendolyn-null, X1-subj-X2,X1-obj-X3,X4-has_name-Gwendolyn A. Magee,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Gwendolyn A. Magee, Gwendolyn, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Gwendolyn A. Magee, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Gwendolyn A. Magee, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Gwendolyn A\\. Magee"",""i"")) . }",true
194,Which is the birth place of H. Willard Ortlip?," X1-be-is-null,X2-which-Which-null,X4-H. Willard Ortlip-H.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-H. Willard Ortlip,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-H. Willard Ortlip-H.-null, X1-subj-X2,X1-obj-X3,X4-has_name-H. Willard Ortlip,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, H. Willard Ortlip, H., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, H. Willard Ortlip, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, H. Willard Ortlip, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""H\\. Willard Ortlip"",""i"")) . }",true
195,Which is the birth place of Hans Haacke?," X1-be-is-null,X2-which-Which-null,X4-Hans Haacke-Hans-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Hans Haacke,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Hans Haacke-Hans-null, X1-subj-X2,X1-obj-X3,X4-has_name-Hans Haacke,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Hans Haacke, Hans, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Hans Haacke, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Hans Haacke, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Hans Haacke"",""i"")) . }",true
196,Which is the birth place of Hans Jelinek?," X1-be-is-null,X2-which-Which-null,X4-Hans Jelinek-Hans-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Hans Jelinek,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Hans Jelinek-Hans-null, X1-subj-X2,X1-obj-X3,X4-has_name-Hans Jelinek,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Hans Jelinek, Hans, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Hans Jelinek, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Hans Jelinek, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Hans Jelinek"",""i"")) . }",true
197,Which is the birth place of Harold Emerson Keeler?," X1-be-is-null,X2-which-Which-null,X4-Harold Emerson Keeler-Harold-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Harold Emerson Keeler,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Harold Emerson Keeler-Harold-null, X1-subj-X2,X1-obj-X3,X4-has_name-Harold Emerson Keeler,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Harold Emerson Keeler, Harold, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Harold Emerson Keeler, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Harold Emerson Keeler, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Harold Emerson Keeler"",""i"")) . }",true
198,Which is the birth place of Harold Faye?," X1-be-is-null,X2-which-Which-null,X4-Harold Faye-Harold-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Harold Faye,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Harold Faye-Harold-null, X1-subj-X2,X1-obj-X3,X4-has_name-Harold Faye,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Harold Faye, Harold, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Harold Faye, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Harold Faye, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Harold Faye"",""i"")) . }",true
199,Which is the birth place of Harry W. Scheuch?," X1-be-is-null,X2-which-Which-null,X4-Harry W. Scheuch-Harry-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Harry W. Scheuch,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Harry W. Scheuch-Harry-null, X1-subj-X2,X1-obj-X3,X4-has_name-Harry W. Scheuch,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Harry W. Scheuch, Harry, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Harry W. Scheuch, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Harry W. Scheuch, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Harry W\\. Scheuch"",""i"")) . }",true
200,Which is the birth place of Haskell Coffin?," X1-be-is-null,X2-which-Which-null,X4-Haskell Coffin-Haskell-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Haskell Coffin,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Haskell Coffin-Haskell-null, X1-subj-X2,X1-obj-X3,X4-has_name-Haskell Coffin,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Haskell Coffin, Haskell, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Haskell Coffin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Haskell Coffin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Haskell Coffin"",""i"")) . }",true
201,Which is the birth place of Helen Gerardia?," X1-be-is-null,X2-which-Which-null,X4-Helen Gerardia-Helen-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Helen Gerardia,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Helen Gerardia-Helen-null, X1-subj-X2,X1-obj-X3,X4-has_name-Helen Gerardia,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Helen Gerardia, Helen, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Helen Gerardia, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Helen Gerardia, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Helen Gerardia"",""i"")) . }",true
202,Which is the birth place of Helen West Heller?," X1-be-is-null,X2-which-Which-null,X4-Helen West Heller-Helen-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Helen West Heller,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Helen West Heller-Helen-null, X1-subj-X2,X1-obj-X3,X4-has_name-Helen West Heller,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Helen West Heller, Helen, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Helen West Heller, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Helen West Heller, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Helen West Heller"",""i"")) . }",true
203,Which is the birth place of Helene Sardeau?," X1-be-is-null,X2-which-Which-null,X4-Helene Sardeau-Helene-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Helene Sardeau,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Helene Sardeau-Helene-null, X1-subj-X2,X1-obj-X3,X4-has_name-Helene Sardeau,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Helene Sardeau, Helene, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Helene Sardeau, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Helene Sardeau, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Helene Sardeau"",""i"")) . }",true
204,Which is the birth place of Henner Schröder?," X1-be-is-null,X2-which-Which-null,X4-Henner Schröder-Henner-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Henner Schröder,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Henner Schröder-Henner-null, X1-subj-X2,X1-obj-X3,X4-has_name-Henner Schröder,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Henner Schröder, Henner, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Henner Schröder, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Henner Schröder, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Henner Schröder"",""i"")) . }",true
205,Which is the birth place of Henri Martin?," X1-be-is-null,X2-which-Which-null,X4-Henri Martin-Henri-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Henri Martin,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Henri Martin-Henri-null, X1-subj-X2,X1-obj-X3,X4-has_name-Henri Martin,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Henri Martin, Henri, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Henri Martin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Henri Martin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Henri Martin"",""i"")) . }",true
206,Which is the birth place of Henry Colton Shumway?," X1-be-is-null,X2-which-Which-null,X4-Henry Colton Shumway-Henry-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Henry Colton Shumway,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Henry Colton Shumway-Henry-null, X1-subj-X2,X1-obj-X3,X4-has_name-Henry Colton Shumway,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Henry Colton Shumway, Henry, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Henry Colton Shumway, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Henry Colton Shumway, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Henry Colton Shumway"",""i"")) . }",true
207,Which is the birth place of Henry Otto Wix?," X1-be-is-null,X2-which-Which-null,X4-Henry Otto Wix-Henry-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Henry Otto Wix,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Henry Otto Wix-Henry-null, X1-subj-X2,X1-obj-X3,X4-has_name-Henry Otto Wix,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Henry Otto Wix, Henry, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Henry Otto Wix, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Henry Otto Wix, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Henry Otto Wix"",""i"")) . }",true
208,Which is the birth place of Herbert Singleton?," X1-be-is-null,X2-which-Which-null,X4-Herbert Singleton-Herbert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Herbert Singleton,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Herbert Singleton-Herbert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Herbert Singleton,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Herbert Singleton, Herbert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Herbert Singleton, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Herbert Singleton, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Herbert Singleton"",""i"")) . }",true
209,Which is the birth place of Hermann Herzog?," X1-be-is-null,X2-which-Which-null,X4-Hermann Herzog-Hermann-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Hermann Herzog,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Hermann Herzog-Hermann-null, X1-subj-X2,X1-obj-X3,X4-has_name-Hermann Herzog,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Hermann Herzog, Hermann, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Hermann Herzog, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Hermann Herzog, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Hermann Herzog"",""i"")) . }",true
210,Which is the birth place of Hermann J. Meyer?," X1-be-is-null,X2-which-Which-null,X4-Hermann J. Meyer-Hermann-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Hermann J. Meyer,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Hermann J. Meyer-Hermann-null, X1-subj-X2,X1-obj-X3,X4-has_name-Hermann J. Meyer,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Hermann J. Meyer, Hermann, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Hermann J. Meyer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Hermann J. Meyer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Hermann J\\. Meyer"",""i"")) . }",true
211,Which is the birth place of Herschel Elarth?," X1-be-is-null,X2-which-Which-null,X4-Herschel Elarth-Herschel Elarth-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Herschel Elarth,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Herschel Elarth-Herschel Elarth-null, X1-subj-X2,X1-obj-X3,X4-has_name-Herschel Elarth,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Herschel Elarth, Herschel Elarth, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Herschel Elarth, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Herschel Elarth, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Herschel Elarth"",""i"")) . }",true
212,Which is the birth place of Hideaki Miyamura?," X1-be-is-null,X2-which-Which-null,X4-Hideaki Miyamura-Hideaki-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Hideaki Miyamura,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Hideaki Miyamura-Hideaki-null, X1-subj-X2,X1-obj-X3,X4-has_name-Hideaki Miyamura,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Hideaki Miyamura, Hideaki, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Hideaki Miyamura, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Hideaki Miyamura, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Hideaki Miyamura"",""i"")) . }",true
213,Which is the birth place of Hildegarde Haas?," X1-be-is-null,X2-which-Which-null,X4-Hildegarde Haas-Hildegarde-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Hildegarde Haas,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Hildegarde Haas-Hildegarde-null, X1-subj-X2,X1-obj-X3,X4-has_name-Hildegarde Haas,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Hildegarde Haas, Hildegarde, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Hildegarde Haas, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Hildegarde Haas, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Hildegarde Haas"",""i"")) . }",true
214,Which is the birth place of Hollis Holbrook?," X1-be-is-null,X2-which-Which-null,X4-Hollis Holbrook-Hollis-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Hollis Holbrook,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Hollis Holbrook-Hollis-null, X1-subj-X2,X1-obj-X3,X4-has_name-Hollis Holbrook,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Hollis Holbrook, Hollis, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Hollis Holbrook, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Hollis Holbrook, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Hollis Holbrook"",""i"")) . }",true
215,Which is the birth place of Horace Pippin?," X1-be-is-null,X2-which-Which-null,X4-Horace Pippin-Horace-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Horace Pippin,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Horace Pippin-Horace-null, X1-subj-X2,X1-obj-X3,X4-has_name-Horace Pippin,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Horace Pippin, Horace, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Horace Pippin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Horace Pippin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Horace Pippin"",""i"")) . }",true
216,Which is the birth place of Hyman Katz?," X1-be-is-null,X2-which-Which-null,X4-Hyman Katz-Hyman-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Hyman Katz,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Hyman Katz-Hyman-null, X1-subj-X2,X1-obj-X3,X4-has_name-Hyman Katz,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Hyman Katz, Hyman, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Hyman Katz, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Hyman Katz, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Hyman Katz"",""i"")) . }",true
217,Which is the birth place of Ida Kohlmeyer?," X1-be-is-null,X2-which-Which-null,X4-Ida Kohlmeyer-Ida-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ida Kohlmeyer,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ida Kohlmeyer-Ida-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ida Kohlmeyer,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ida Kohlmeyer, Ida, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ida Kohlmeyer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ida Kohlmeyer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ida Kohlmeyer"",""i"")) . }",true
218,Which is the birth place of Ilah Marian Kibbey?," X1-be-is-null,X2-which-Which-null,X4-Ilah Marian Kibbey-Ilah-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ilah Marian Kibbey,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ilah Marian Kibbey-Ilah-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ilah Marian Kibbey,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ilah Marian Kibbey, Ilah, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ilah Marian Kibbey, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ilah Marian Kibbey, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ilah Marian Kibbey"",""i"")) . }",true
219,Which is the birth place of Ingeborg Gerdes?," X1-be-is-null,X2-which-Which-null,X4-Ingeborg Gerdes-Ingeborg-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ingeborg Gerdes,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ingeborg Gerdes-Ingeborg-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ingeborg Gerdes,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ingeborg Gerdes, Ingeborg, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ingeborg Gerdes, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ingeborg Gerdes, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ingeborg Gerdes"",""i"")) . }",true
220,Which is the birth place of J. Paul Fennell?," X1-be-is-null,X2-which-Which-null,X4-J. Paul Fennell-J.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-J. Paul Fennell,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-J. Paul Fennell-J.-null, X1-subj-X2,X1-obj-X3,X4-has_name-J. Paul Fennell,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, J. Paul Fennell, J., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, J. Paul Fennell, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, J. Paul Fennell, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""J\\. Paul Fennell"",""i"")) . }",true
221,Which is the birth place of Jackson Pollock?," X1-be-is-null,X2-which-Which-null,X4-Jackson Pollock-Jackson-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jackson Pollock,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jackson Pollock-Jackson-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jackson Pollock,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jackson Pollock, Jackson, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jackson Pollock, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jackson Pollock, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jackson Pollock"",""i"")) . }",true
222,Which is the birth place of Jacob Frymire?," X1-be-is-null,X2-which-Which-null,X4-Jacob Frymire-Jacob-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jacob Frymire,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jacob Frymire-Jacob-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jacob Frymire,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jacob Frymire, Jacob, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jacob Frymire, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jacob Frymire, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jacob Frymire"",""i"")) . }",true
223,Which is the birth place of Jacob van Strij?," X1-be-is-null,X2-which-Which-null,X4-Jacob van Strij-Jacob-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jacob van Strij,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jacob van Strij-Jacob-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jacob van Strij,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jacob van Strij, Jacob, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jacob van Strij, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jacob van Strij, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jacob van Strij"",""i"")) . }",true
224,Which is the birth place of Jacquelyn Rice?," X1-be-is-null,X2-which-Which-null,X4-Jacquelyn Rice-Jacquelyn-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jacquelyn Rice,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jacquelyn Rice-Jacquelyn-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jacquelyn Rice,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jacquelyn Rice, Jacquelyn, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jacquelyn Rice, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jacquelyn Rice, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jacquelyn Rice"",""i"")) . }",true
225,Which is the birth place of James Auchiah?," X1-be-is-null,X2-which-Which-null,X4-James Auchiah-James-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-James Auchiah,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-James Auchiah-James-null, X1-subj-X2,X1-obj-X3,X4-has_name-James Auchiah,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, James Auchiah, James, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, James Auchiah, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, James Auchiah, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James Auchiah"",""i"")) . }",true
226,Which is the birth place of James D. Butler?," X1-be-is-null,X2-which-Which-null,X4-James D. Butler-James-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-James D. Butler,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-James D. Butler-James-null, X1-subj-X2,X1-obj-X3,X4-has_name-James D. Butler,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, James D. Butler, James, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, James D. Butler, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, James D. Butler, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James D\\. Butler"",""i"")) . }",true
227,Which is the birth place of James Forbes?," X1-be-is-null,X2-which-Which-null,X4-James Forbes-James-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-James Forbes,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-James Forbes-James-null, X1-subj-X2,X1-obj-X3,X4-has_name-James Forbes,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, James Forbes, James, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, James Forbes, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, James Forbes, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James Forbes"",""i"")) . }",true
228,Which is the birth place of James Gill?," X1-be-is-null,X2-which-Which-null,X4-James Gill-James-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-James Gill,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-James Gill-James-null, X1-subj-X2,X1-obj-X3,X4-has_name-James Gill,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, James Gill, James, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, James Gill, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, James Gill, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James Gill"",""i"")) . }",true
229,Which is the birth place of James Hamilton?," X1-be-is-null,X2-which-Which-null,X4-James Hamilton-James-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-James Hamilton,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-James Hamilton-James-null, X1-subj-X2,X1-obj-X3,X4-has_name-James Hamilton,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, James Hamilton, James, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, James Hamilton, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, James Hamilton, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James Hamilton"",""i"")) . }",true
230,Which is the birth place of James Holmes?," X1-be-is-null,X2-which-Which-null,X4-James Holmes-James-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-James Holmes,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-James Holmes-James-null, X1-subj-X2,X1-obj-X3,X4-has_name-James Holmes,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, James Holmes, James, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, James Holmes, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, James Holmes, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James Holmes"",""i"")) . }",true
231,Which is the birth place of James L. Enyeart?," X1-be-is-null,X2-which-Which-null,X4-James L. Enyeart-James-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-James L. Enyeart,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-James L. Enyeart-James-null, X1-subj-X2,X1-obj-X3,X4-has_name-James L. Enyeart,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, James L. Enyeart, James, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, James L. Enyeart, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, James L. Enyeart, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James L\\. Enyeart"",""i"")) . }",true
232,Which is the birth place of James Lawton?," X1-be-is-null,X2-which-Which-null,X4-James Lawton-James-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-James Lawton,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-James Lawton-James-null, X1-subj-X2,X1-obj-X3,X4-has_name-James Lawton,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, James Lawton, James, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, James Lawton, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, James Lawton, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James Lawton"",""i"")) . }",true
233,Which is the birth place of James M. Haughey?," X1-be-is-null,X2-which-Which-null,X4-James M. Haughey-James-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-James M. Haughey,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-James M. Haughey-James-null, X1-subj-X2,X1-obj-X3,X4-has_name-James M. Haughey,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, James M. Haughey, James, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, James M. Haughey, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, James M. Haughey, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James M\\. Haughey"",""i"")) . }",true
234,Which is the birth place of James W. Williams?," X1-be-is-null,X2-which-Which-null,X4-James W. Williams-James-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-James W. Williams,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-James W. Williams-James-null, X1-subj-X2,X1-obj-X3,X4-has_name-James W. Williams,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, James W. Williams, James, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, James W. Williams, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, James W. Williams, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James W\\. Williams"",""i"")) . }",true
235,Which is the birth place of James Wallace Buchman?," X1-be-is-null,X2-which-Which-null,X4-James Wallace Buchman-James-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-James Wallace Buchman,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-James Wallace Buchman-James-null, X1-subj-X2,X1-obj-X3,X4-has_name-James Wallace Buchman,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, James Wallace Buchman, James, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, James Wallace Buchman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, James Wallace Buchman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James Wallace Buchman"",""i"")) . }",true
236,Which is the birth place of James Wellstood?," X1-be-is-null,X2-which-Which-null,X4-James Wellstood-James-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-James Wellstood,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-James Wellstood-James-null, X1-subj-X2,X1-obj-X3,X4-has_name-James Wellstood,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, James Wellstood, James, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, James Wellstood, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, James Wellstood, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James Wellstood"",""i"")) . }",true
237,Which is the birth place of Jane Marie Logemann?," X1-be-is-null,X2-which-Which-null,X4-Jane Marie Logemann-Jane-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jane Marie Logemann,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jane Marie Logemann-Jane-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jane Marie Logemann,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jane Marie Logemann, Jane, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jane Marie Logemann, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jane Marie Logemann, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jane Marie Logemann"",""i"")) . }",true
238,Which is the birth place of Janet E. Turner?," X1-be-is-null,X2-which-Which-null,X4-Janet E. Turner-Janet-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Janet E. Turner,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Janet E. Turner-Janet-null, X1-subj-X2,X1-obj-X3,X4-has_name-Janet E. Turner,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Janet E. Turner, Janet, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Janet E. Turner, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Janet E. Turner, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Janet E\\. Turner"",""i"")) . }",true
239,Which is the birth place of Jay DeFeo?," X1-be-is-null,X2-which-Which-null,X4-Jay DeFeo-Jay-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jay DeFeo,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jay DeFeo-Jay-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jay DeFeo,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jay DeFeo, Jay, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jay DeFeo, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jay DeFeo, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jay DeFeo"",""i"")) . }",true
240,Which is the birth place of Jay S. Dunitz?," X1-be-is-null,X2-which-Which-null,X4-Jay S. Dunitz-Jay-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jay S. Dunitz,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jay S. Dunitz-Jay-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jay S. Dunitz,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jay S. Dunitz, Jay, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jay S. Dunitz, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jay S. Dunitz, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jay S\\. Dunitz"",""i"")) . }",true
241,Which is the birth place of Jay Wilson?," X1-be-is-null,X2-which-Which-null,X4-Jay Wilson-Jay-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jay Wilson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jay Wilson-Jay-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jay Wilson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jay Wilson, Jay, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jay Wilson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jay Wilson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jay Wilson"",""i"")) . }",true
242,Which is the birth place of Jean Paul Laurens?," X1-be-is-null,X2-which-Which-null,X4-Jean Paul Laurens-Jean-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jean Paul Laurens,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jean Paul Laurens-Jean-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jean Paul Laurens,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jean Paul Laurens, Jean, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jean Paul Laurens, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jean Paul Laurens, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jean Paul Laurens"",""i"")) . }",true
243,Which is the birth place of Jeffrey Clancy?," X1-be-is-null,X2-which-Which-null,X4-Jeffrey Clancy-Jeffrey-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jeffrey Clancy,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jeffrey Clancy-Jeffrey-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jeffrey Clancy,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jeffrey Clancy, Jeffrey, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jeffrey Clancy, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jeffrey Clancy, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jeffrey Clancy"",""i"")) . }",true
244,Which is the birth place of Jennifer McCurdy?," X1-be-is-null,X2-which-Which-null,X4-Jennifer McCurdy-Jennifer-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jennifer McCurdy,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jennifer McCurdy-Jennifer-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jennifer McCurdy,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jennifer McCurdy, Jennifer, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jennifer McCurdy, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jennifer McCurdy, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jennifer McCurdy"",""i"")) . }",true
245,Which is the birth place of Jennifer Trask?," X1-be-is-null,X2-which-Which-null,X4-Jennifer Trask-Jennifer-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jennifer Trask,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jennifer Trask-Jennifer-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jennifer Trask,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jennifer Trask, Jennifer, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jennifer Trask, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jennifer Trask, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jennifer Trask"",""i"")) . }",true
246,Which is the birth place of Jesús Moroles?," X1-be-is-null,X2-which-Which-null,X4-Jesús Moroles-Jesús-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jesús Moroles,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jesús Moroles-Jesús-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jesús Moroles,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jesús Moroles, Jesús, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jesús Moroles, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jesús Moroles, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jesús Moroles"",""i"")) . }",true
247,Which is the birth place of Jody Klein?," X1-be-is-null,X2-which-Which-null,X4-Jody Klein-Jody-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jody Klein,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jody Klein-Jody-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jody Klein,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jody Klein, Jody, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jody Klein, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jody Klein, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jody Klein"",""i"")) . }",true
248,Which is the birth place of Johann Leonhard Appold?," X1-be-is-null,X2-which-Which-null,X4-Johann Leonhard Appold-Johann-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Johann Leonhard Appold,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Johann Leonhard Appold-Johann-null, X1-subj-X2,X1-obj-X3,X4-has_name-Johann Leonhard Appold,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Johann Leonhard Appold, Johann, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Johann Leonhard Appold, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Johann Leonhard Appold, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Johann Leonhard Appold"",""i"")) . }",true
249,Which is the birth place of John Adams Elder?," X1-be-is-null,X2-which-Which-null,X4-John Adams elder-John Elder-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John Adams elder,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John Adams elder-John Elder-null, X1-subj-X2,X1-obj-X3,X4-has_name-John Adams elder,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John Adams elder, John Elder, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John Adams elder, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John Adams elder, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Adams elder"",""i"")) . }",true
250,Which is the birth place of John C. Johansen?," X1-be-is-null,X2-which-Which-null,X4-John C. Johansen-John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John C. Johansen,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John C. Johansen-John-null, X1-subj-X2,X1-obj-X3,X4-has_name-John C. Johansen,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John C. Johansen, John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John C. Johansen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John C. Johansen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John C\\. Johansen"",""i"")) . }",true
251,Which is the birth place of John Crookshanks King?," X1-be-is-null,X2-which-Which-null,X4-John Crookshank King-John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John Crookshank King,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John Crookshank King-John-null, X1-subj-X2,X1-obj-X3,X4-has_name-John Crookshank King,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John Crookshank King, John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John Crookshank King, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John Crookshank King, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Crookshank King"",""i"")) . }",false
252,Which is the birth place of John Grazier?," X1-be-is-null,X2-which-Which-null,X4-John Grazier-John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John Grazier,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John Grazier-John-null, X1-subj-X2,X1-obj-X3,X4-has_name-John Grazier,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John Grazier, John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John Grazier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John Grazier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Grazier"",""i"")) . }",true
253,Which is the birth place of John Iversen?," X1-be-is-null,X2-which-Which-null,X4-John Iversen-John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John Iversen,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John Iversen-John-null, X1-subj-X2,X1-obj-X3,X4-has_name-John Iversen,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John Iversen, John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John Iversen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John Iversen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Iversen"",""i"")) . }",true
254,Which is the birth place of John Leighton?," X1-be-is-null,X2-which-Which-null,X4-John Leighton-John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John Leighton,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John Leighton-John-null, X1-subj-X2,X1-obj-X3,X4-has_name-John Leighton,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John Leighton, John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John Leighton, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John Leighton, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Leighton"",""i"")) . }",true
255,Which is the birth place of John Saccaro?," X1-be-is-null,X2-which-Which-null,X4-John Saccaro-John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John Saccaro,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John Saccaro-John-null, X1-subj-X2,X1-obj-X3,X4-has_name-John Saccaro,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John Saccaro, John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John Saccaro, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John Saccaro, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Saccaro"",""i"")) . }",true
256,Which is the birth place of John Salt?," X1-be-is-null,X2-which-Which-null,X4-John Salt-John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John Salt,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John Salt-John-null, X1-subj-X2,X1-obj-X3,X4-has_name-John Salt,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John Salt, John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John Salt, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John Salt, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Salt"",""i"")) . }",true
257,Which is the birth place of John Samuel Agar?," X1-be-is-null,X2-which-Which-null,X4-John Samuel Agar-John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John Samuel Agar,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John Samuel Agar-John-null, X1-subj-X2,X1-obj-X3,X4-has_name-John Samuel Agar,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John Samuel Agar, John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John Samuel Agar, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John Samuel Agar, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Samuel Agar"",""i"")) . }",true
258,Which is the birth place of John Satterfield?," X1-be-is-null,X2-which-Which-null,X4-John Satterfield-John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John Satterfield,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John Satterfield-John-null, X1-subj-X2,X1-obj-X3,X4-has_name-John Satterfield,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John Satterfield, John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John Satterfield, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John Satterfield, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Satterfield"",""i"")) . }",true
259,Which is the birth place of John Scott?," X1-be-is-null,X2-which-Which-null,X4-John Scott-John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John Scott,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John Scott-John-null, X1-subj-X2,X1-obj-X3,X4-has_name-John Scott,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John Scott, John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John Scott, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John Scott, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Scott"",""i"")) . }",true
260,Which is the birth place of John Sebastien Miller?," X1-be-is-null,X2-which-Which-null,X4-John Sebastien Miller-John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John Sebastien Miller,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John Sebastien Miller-John-null, X1-subj-X2,X1-obj-X3,X4-has_name-John Sebastien Miller,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John Sebastien Miller, John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John Sebastien Miller, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John Sebastien Miller, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Sebastien Miller"",""i"")) . }",true
261,Which is the birth place of John T. Bowen?," X1-be-is-null,X2-which-Which-null,X4-John T. Bowen-John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John T. Bowen,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John T. Bowen-John-null, X1-subj-X2,X1-obj-X3,X4-has_name-John T. Bowen,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John T. Bowen, John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John T. Bowen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John T. Bowen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John T\\. Bowen"",""i"")) . }",true
262,Which is the birth place of John William Gear?," X1-be-is-null,X2-which-Which-null,X4-John William Gear-John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John William Gear,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John William Gear-John-null, X1-subj-X2,X1-obj-X3,X4-has_name-John William Gear,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John William Gear, John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John William Gear, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John William Gear, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John William Gear"",""i"")) . }",true
263,Which is the birth place of John Woodin?," X1-be-is-null,X2-which-Which-null,X4-John Woodin-John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John Woodin,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John Woodin-John-null, X1-subj-X2,X1-obj-X3,X4-has_name-John Woodin,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John Woodin, John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John Woodin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John Woodin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Woodin"",""i"")) . }",true
264,Which is the birth place of Josef Israëls?," X1-be-is-null,X2-which-Which-null,X4-Josef Israëls-Josef-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Josef Israëls,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Josef Israëls-Josef-null, X1-subj-X2,X1-obj-X3,X4-has_name-Josef Israëls,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Josef Israëls, Josef, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Josef Israëls, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Josef Israëls, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Josef Israëls"",""i"")) . }",true
265,Which is the birth place of Joseph Binder?," X1-be-is-null,X2-which-Which-null,X4-Joseph Binder-Joseph-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Joseph Binder,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Joseph Binder-Joseph-null, X1-subj-X2,X1-obj-X3,X4-has_name-Joseph Binder,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Joseph Binder, Joseph, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Joseph Binder, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Joseph Binder, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Joseph Binder"",""i"")) . }",true
266,Which is the birth place of Joseph Kantor?," X1-be-is-null,X2-which-Which-null,X4-Joseph Kantor-Joseph-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Joseph Kantor,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Joseph Kantor-Joseph-null, X1-subj-X2,X1-obj-X3,X4-has_name-Joseph Kantor,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Joseph Kantor, Joseph, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Joseph Kantor, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Joseph Kantor, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Joseph Kantor"",""i"")) . }",true
267,Which is the birth place of Joseph Konzal?," X1-be-is-null,X2-which-Which-null,X4-Joseph Konzal-Joseph-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Joseph Konzal,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Joseph Konzal-Joseph-null, X1-subj-X2,X1-obj-X3,X4-has_name-Joseph Konzal,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Joseph Konzal, Joseph, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Joseph Konzal, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Joseph Konzal, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Joseph Konzal"",""i"")) . }",true
268,Which is the birth place of Joyce Kozloff?," X1-be-is-null,X2-which-Which-null,X4-Joyce Kozloff-Joyce-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Joyce Kozloff,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Joyce Kozloff-Joyce-null, X1-subj-X2,X1-obj-X3,X4-has_name-Joyce Kozloff,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Joyce Kozloff, Joyce, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Joyce Kozloff, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Joyce Kozloff, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Joyce Kozloff"",""i"")) . }",true
269,Which is the birth place of Juan Buckingham Wandesforde?," X1-be-is-null,X2-which-Which-null,X4-Juan Buckingham Wandesforde-Juan-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Juan Buckingham Wandesforde,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Juan Buckingham Wandesforde-Juan-null, X1-subj-X2,X1-obj-X3,X4-has_name-Juan Buckingham Wandesforde,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Juan Buckingham Wandesforde, Juan, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Juan Buckingham Wandesforde, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Juan Buckingham Wandesforde, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Juan Buckingham Wandesforde"",""i"")) . }",true
270,Which is the birth place of Juan Downey?," X1-be-is-null,X2-which-Which-null,X4-Juan Downey-Juan-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Juan Downey,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Juan Downey-Juan-null, X1-subj-X2,X1-obj-X3,X4-has_name-Juan Downey,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Juan Downey, Juan, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Juan Downey, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Juan Downey, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Juan Downey"",""i"")) . }",true
271,Which is the birth place of Jules Dupré?," X1-be-is-null,X2-which-Which-null,X4-Jules Dupré-Jules-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jules Dupré,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jules Dupré-Jules-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jules Dupré,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jules Dupré, Jules, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jules Dupré, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jules Dupré, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jules Dupré"",""i"")) . }",true
272,Which is the birth place of Jules Edouard Roiné?," X1-be-is-null,X2-which-Which-null,X4-Jules Edouard Roiné-Jules-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jules Edouard Roiné,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jules Edouard Roiné-Jules-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jules Edouard Roiné,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jules Edouard Roiné, Jules, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jules Edouard Roiné, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jules Edouard Roiné, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jules Edouard Roiné"",""i"")) . }",true
273,Which is the birth place of Jules Lion?," X1-be-is-null,X2-which-Which-null,X4-Jules Lion-Jules-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jules Lion,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jules Lion-Jules-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jules Lion,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jules Lion, Jules, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jules Lion, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jules Lion, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jules Lion"",""i"")) . }",true
274,Which is the birth place of K. Lee Manuel?," X1-be-is-null,X2-which-Which-null,X4-K. Lee Manuel-K.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-K. Lee Manuel,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-K. Lee Manuel-K.-null, X1-subj-X2,X1-obj-X3,X4-has_name-K. Lee Manuel,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, K. Lee Manuel, K., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, K. Lee Manuel, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, K. Lee Manuel, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""K\\. Lee Manuel"",""i"")) . }",true
275,Which is the birth place of Karin Birch?," X1-be-is-null,X2-which-Which-null,X4-Karin Birch-Karin-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Karin Birch,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Karin Birch-Karin-null, X1-subj-X2,X1-obj-X3,X4-has_name-Karin Birch,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Karin Birch, Karin, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Karin Birch, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Karin Birch, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Karin Birch"",""i"")) . }",true
276,Which is the birth place of Karl Kelpe?," X1-be-is-null,X2-which-Which-null,X4-Karl Kelpe-Karl-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Karl Kelpe,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Karl Kelpe-Karl-null, X1-subj-X2,X1-obj-X3,X4-has_name-Karl Kelpe,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Karl Kelpe, Karl, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Karl Kelpe, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Karl Kelpe, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Karl Kelpe"",""i"")) . }",true
277,Which is the birth place of Katherine Merrill?," X1-be-is-null,X2-which-Which-null,X4-Katherine Merrill-Katherine-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Katherine Merrill,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Katherine Merrill-Katherine-null, X1-subj-X2,X1-obj-X3,X4-has_name-Katherine Merrill,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Katherine Merrill, Katherine, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Katherine Merrill, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Katherine Merrill, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Katherine Merrill"",""i"")) . }",true
278,Which is the birth place of Katja Oxman?," X1-be-is-null,X2-which-Which-null,X4-Katja Oxman-Katja-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Katja Oxman,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Katja Oxman-Katja-null, X1-subj-X2,X1-obj-X3,X4-has_name-Katja Oxman,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Katja Oxman, Katja, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Katja Oxman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Katja Oxman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Katja Oxman"",""i"")) . }",true
279,Which is the birth place of Kazuko?," X1-be-is-null,X2-which-Which-null,X4-Kazuko-Kazuko-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Kazuko,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Kazuko-Kazuko-null, X1-subj-X2,X1-obj-X3,X4-has_name-Kazuko,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Kazuko, Kazuko, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Kazuko, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Kazuko, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Kazuko"",""i"")) . }",true
280,Which is the birth place of Kee-Ho Yuen?," X1-be-is-null,X2-which-Which-null,X4-Kee-Ho Yuen-Kee,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Kee,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Kee-Ho Yuen-Kee, X1-subj-X2,X1-obj-X3,X4-has_name-Kee,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Kee-Ho Yuen, Kee-Ho, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Kee-Ho Yuen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Kee-Ho Yuen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Kee\\-Ho Yuen"",""i"")) . }",true
281,Which is the birth place of Keisuke Mizuno?," X1-be-is-null,X2-which-Which-null,X4-Keisuke Mizuno-Keisuke-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Keisuke Mizuno,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Keisuke Mizuno-Keisuke-null, X1-subj-X2,X1-obj-X3,X4-has_name-Keisuke Mizuno,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Keisuke Mizuno, Keisuke, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Keisuke Mizuno, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Keisuke Mizuno, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Keisuke Mizuno"",""i"")) . }",true
282,Which is the birth place of Keith Martin?," X1-be-is-null,X2-which-Which-null,X4-Keith Martin-Keith-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Keith Martin,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Keith Martin-Keith-null, X1-subj-X2,X1-obj-X3,X4-has_name-Keith Martin,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Keith Martin, Keith, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Keith Martin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Keith Martin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Keith Martin"",""i"")) . }",true
283,Which is the birth place of Ken Gonzales-Day?," X1-be-is-null,X2-which-Which-null,X4-Ken Gonzales-Ken-null,X3-birth place Day-birth place-the, X1-subj-X2,X4-has_name-Ken Gonzales,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place Day-birth place-the,X4-Ken Gonzales-Ken-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ken Gonzales,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ken Gonzales, Ken, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place Day, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ken Gonzales, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ken Gonzales, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place Day, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 2]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ken Gonzales"",""i"")) . }",true
284,Which is the birth place of Ken Graves?," X1-be-is-null,X2-which-Which-null,X4-Ken Grave-Ken-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ken Grave,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ken Grave-Ken-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ken Grave,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ken Grave, Ken, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ken Grave, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ken Grave, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ken Grave"",""i"")) . }",true
285,Which is the birth place of Kenneth C. Holmes?," X1-be-is-null,X2-which-Which-null,X4-Kenneth C. Holmes-Kenneth-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Kenneth C. Holmes,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Kenneth C. Holmes-Kenneth-null, X1-subj-X2,X1-obj-X3,X4-has_name-Kenneth C. Holmes,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Kenneth C. Holmes, Kenneth, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Kenneth C. Holmes, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Kenneth C. Holmes, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Kenneth C\\. Holmes"",""i"")) . }",true
286,Which is the birth place of L. A. Shafer?," X1-be-is-null,X2-which-Which-null,X4-L. A. Shafer-L.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-L. A. Shafer,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-L. A. Shafer-L.-null, X1-subj-X2,X1-obj-X3,X4-has_name-L. A. Shafer,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, L. A. Shafer, L., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, L. A. Shafer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, L. A. Shafer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""L\\. A\\. Shafer"",""i"")) . }",true
287,Which is the birth place of L.J. Roberts?," X1-be-is-null,X2-which-Which-null,X4-L.J. Roberts-L.J.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-L.J. Roberts,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-L.J. Roberts-L.J.-null, X1-subj-X2,X1-obj-X3,X4-has_name-L.J. Roberts,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, L.J. Roberts, L.J., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, L.J. Roberts, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, L.J. Roberts, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""L\\.J\\. Roberts"",""i"")) . }",true
288,Which is the birth place of Laddie John Dill?," X1-be-is-null,X2-which-Which-null,X4-Laddie John Dill-Laddie-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Laddie John Dill,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Laddie John Dill-Laddie-null, X1-subj-X2,X1-obj-X3,X4-has_name-Laddie John Dill,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Laddie John Dill, Laddie, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Laddie John Dill, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Laddie John Dill, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Laddie John Dill"",""i"")) . }",true
289,Which is the birth place of Larry Thomas?," X1-be-is-null,X2-which-Which-null,X4-Larry Thomas-Larry-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Larry Thomas,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Larry Thomas-Larry-null, X1-subj-X2,X1-obj-X3,X4-has_name-Larry Thomas,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Larry Thomas, Larry, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Larry Thomas, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Larry Thomas, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Larry Thomas"",""i"")) . }",true
290,Which is the birth place of LeRoy Neiman?," X1-be-is-null,X2-which-Which-null,X4-LeRoy Neiman-LeRoy-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-LeRoy Neiman,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-LeRoy Neiman-LeRoy-null, X1-subj-X2,X1-obj-X3,X4-has_name-LeRoy Neiman,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, LeRoy Neiman, LeRoy, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, LeRoy Neiman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, LeRoy Neiman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""LeRoy Neiman"",""i"")) . }",true
291,Which is the birth place of Leon Kelly?," X1-be-is-null,X2-which-Which-null,X4-Leon Kelly-Leon-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Leon Kelly,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Leon Kelly-Leon-null, X1-subj-X2,X1-obj-X3,X4-has_name-Leon Kelly,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Leon Kelly, Leon, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Leon Kelly, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Leon Kelly, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Leon Kelly"",""i"")) . }",true
292,Which is the birth place of Leonard Maurer?," X1-be-is-null,X2-which-Which-null,X4-Leonard Maurer-Leonard-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Leonard Maurer,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Leonard Maurer-Leonard-null, X1-subj-X2,X1-obj-X3,X4-has_name-Leonard Maurer,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Leonard Maurer, Leonard, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Leonard Maurer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Leonard Maurer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Leonard Maurer"",""i"")) . }",true
293,Which is the birth place of Lester Beall?," X1-be-is-null,X2-which-Which-null,X4-Lester Beall-Lester-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Lester Beall,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Lester Beall-Lester-null, X1-subj-X2,X1-obj-X3,X4-has_name-Lester Beall,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Lester Beall, Lester, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Lester Beall, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Lester Beall, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lester Beall"",""i"")) . }",true
294,Which is the birth place of Lester E. Varian?," X1-be-is-null,X2-which-Which-null,X4-Lester E. Varian-Lester-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Lester E. Varian,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Lester E. Varian-Lester-null, X1-subj-X2,X1-obj-X3,X4-has_name-Lester E. Varian,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Lester E. Varian, Lester, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Lester E. Varian, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Lester E. Varian, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lester E\\. Varian"",""i"")) . }",true
295,Which is the birth place of Lewis W. Hine?," X1-be-is-null,X2-which-Which-null,X4-Lewis W. Hine-Lewis-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Lewis W. Hine,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Lewis W. Hine-Lewis-null, X1-subj-X2,X1-obj-X3,X4-has_name-Lewis W. Hine,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Lewis W. Hine, Lewis, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Lewis W. Hine, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Lewis W. Hine, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lewis W\\. Hine"",""i"")) . }",true
296,Which is the birth place of Lilo Raymond?," X1-be-is-null,X2-which-Which-null,X4-Lilo Raymond-Lilo-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Lilo Raymond,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Lilo Raymond-Lilo-null, X1-subj-X2,X1-obj-X3,X4-has_name-Lilo Raymond,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Lilo Raymond, Lilo, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Lilo Raymond, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Lilo Raymond, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lilo Raymond"",""i"")) . }",true
297,Which is the birth place of Lisette Model?," X1-be-is-null,X2-which-Which-null,X4-Lisette Model-Lisette Model-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Lisette Model,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Lisette Model-Lisette Model-null, X1-subj-X2,X1-obj-X3,X4-has_name-Lisette Model,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Lisette Model, Lisette Model, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Lisette Model, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Lisette Model, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lisette Model"",""i"")) . }",true
298,Which is the birth place of Lloyd C. Foltz?," X1-be-is-null,X2-which-Which-null,X4-Lloyd C. Foltz-Lloyd-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Lloyd C. Foltz,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Lloyd C. Foltz-Lloyd-null, X1-subj-X2,X1-obj-X3,X4-has_name-Lloyd C. Foltz,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Lloyd C. Foltz, Lloyd, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Lloyd C. Foltz, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Lloyd C. Foltz, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lloyd C\\. Foltz"",""i"")) . }",true
299,Which is the birth place of Lois M. Johnson?," X1-be-is-null,X2-which-Which-null,X4-Lois M. Johnson-Lois-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Lois M. Johnson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Lois M. Johnson-Lois-null, X1-subj-X2,X1-obj-X3,X4-has_name-Lois M. Johnson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Lois M. Johnson, Lois, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Lois M. Johnson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Lois M. Johnson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lois M\\. Johnson"",""i"")) . }",true
300,Which is the birth place of Lori Nix?," X1-be-is-null,X2-which-Which-null,X4-Lori Nix-Lori-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Lori Nix,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Lori Nix-Lori-null, X1-subj-X2,X1-obj-X3,X4-has_name-Lori Nix,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Lori Nix, Lori, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Lori Nix, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Lori Nix, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lori Nix"",""i"")) . }",true
301,Which is the birth place of Louis Abel Truchet?," X1-be-is-null,X2-which-Which-null,X4-Louis Abel Truchet-Louis-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Louis Abel Truchet,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Louis Abel Truchet-Louis-null, X1-subj-X2,X1-obj-X3,X4-has_name-Louis Abel Truchet,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Louis Abel Truchet, Louis, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Louis Abel Truchet, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Louis Abel Truchet, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Louis Abel Truchet"",""i"")) . }",true
302,Which is the birth place of Louis M. Eilshemius?," X1-be-is-null,X2-which-Which-null,X4-Louis M. Eilshemius-Louis-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Louis M. Eilshemius,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Louis M. Eilshemius-Louis-null, X1-subj-X2,X1-obj-X3,X4-has_name-Louis M. Eilshemius,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Louis M. Eilshemius, Louis, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Louis M. Eilshemius, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Louis M. Eilshemius, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Louis M\\. Eilshemius"",""i"")) . }",true
303,Which is the birth place of Lucio Pozzi?," X1-be-is-null,X2-which-Which-null,X4-Lucio Pozzi-Lucio-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Lucio Pozzi,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Lucio Pozzi-Lucio-null, X1-subj-X2,X1-obj-X3,X4-has_name-Lucio Pozzi,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Lucio Pozzi, Lucio, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Lucio Pozzi, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Lucio Pozzi, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lucio Pozzi"",""i"")) . }",true
304,Which is the birth place of Ludolf Backhuysen?," X1-be-is-null,X2-which-Which-null,X4-Ludolf Backhuysen-Ludolf-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ludolf Backhuysen,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ludolf Backhuysen-Ludolf-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ludolf Backhuysen,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ludolf Backhuysen, Ludolf, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ludolf Backhuysen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ludolf Backhuysen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ludolf Backhuysen"",""i"")) . }",true
305,Which is the birth place of Luigi Rist?," X1-be-is-null,X2-which-Which-null,X4-Luigi Rist-Luigi-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Luigi Rist,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Luigi Rist-Luigi-null, X1-subj-X2,X1-obj-X3,X4-has_name-Luigi Rist,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Luigi Rist, Luigi, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Luigi Rist, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Luigi Rist, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Luigi Rist"",""i"")) . }",true
306,Which is the birth place of Luis Cruz Azaceta?," X1-be-is-null,X2-which-Which-null,X4-Luis Cruz Azaceta-Luis-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Luis Cruz Azaceta,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Luis Cruz Azaceta-Luis-null, X1-subj-X2,X1-obj-X3,X4-has_name-Luis Cruz Azaceta,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Luis Cruz Azaceta, Luis, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Luis Cruz Azaceta, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Luis Cruz Azaceta, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Luis Cruz Azaceta"",""i"")) . }",true
307,Which is the birth place of Lydia Field Emmet?,,Incorrect Stanza Parsing,null,null
308,Which is the birth place of Lynda Benglis?," X1-be-is-null,X2-which-Which-null,X4-Lynda Benglis-Lynda-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Lynda Benglis,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Lynda Benglis-Lynda-null, X1-subj-X2,X1-obj-X3,X4-has_name-Lynda Benglis,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Lynda Benglis, Lynda, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Lynda Benglis, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Lynda Benglis, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lynda Benglis"",""i"")) . }",true
309,Which is the birth place of Léo Laporte Blairsy?," X1-be-is-null,X2-which-Which-null,X4-Léo Laporte Blairsy-Léo-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Léo Laporte Blairsy,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Léo Laporte Blairsy-Léo-null, X1-subj-X2,X1-obj-X3,X4-has_name-Léo Laporte Blairsy,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Léo Laporte Blairsy, Léo, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Léo Laporte Blairsy, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Léo Laporte Blairsy, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Léo Laporte Blairsy"",""i"")) . }",true
310,Which is the birth place of M. A. Honeywell?," X1-be-is-null,X2-which-Which-null,X4-M. A. Honeywell-M.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-M. A. Honeywell,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-M. A. Honeywell-M.-null, X1-subj-X2,X1-obj-X3,X4-has_name-M. A. Honeywell,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, M. A. Honeywell, M., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, M. A. Honeywell, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, M. A. Honeywell, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""M\\. A\\. Honeywell"",""i"")) . }",true
311,Which is the birth place of M. W. Hopkins?," X1-be-is-null,X2-which-Which-null,X4-M. W. Hopkins-M.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-M. W. Hopkins,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-M. W. Hopkins-M.-null, X1-subj-X2,X1-obj-X3,X4-has_name-M. W. Hopkins,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, M. W. Hopkins, M., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, M. W. Hopkins, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, M. W. Hopkins, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""M\\. W\\. Hopkins"",""i"")) . }",true
312,Which is the birth place of Macowin Tuttle?," X1-be-is-null,X2-which-Which-null,X4-Macowin Tuttle-Macowin-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Macowin Tuttle,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Macowin Tuttle-Macowin-null, X1-subj-X2,X1-obj-X3,X4-has_name-Macowin Tuttle,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Macowin Tuttle, Macowin, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Macowin Tuttle, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Macowin Tuttle, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Macowin Tuttle"",""i"")) . }",true
313,Which is the birth place of Marc Swanson?," X1-be-is-null,X2-which-Which-null,X4-Marc Swanson-Marc-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Marc Swanson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Marc Swanson-Marc-null, X1-subj-X2,X1-obj-X3,X4-has_name-Marc Swanson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Marc Swanson, Marc, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Marc Swanson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Marc Swanson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Marc Swanson"",""i"")) . }",true
314,Which is the birth place of Margaret Foley?," X1-be-is-null,X2-which-Which-null,X4-Margaret Foley-Margaret-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Margaret Foley,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Margaret Foley-Margaret-null, X1-subj-X2,X1-obj-X3,X4-has_name-Margaret Foley,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Margaret Foley, Margaret, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Margaret Foley, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Margaret Foley, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Margaret Foley"",""i"")) . }",true
315,Which is the birth place of Margaret H. Wright?," X1-be-is-null,X2-which-Which-null,X4-Margaret H. Wright-Margaret-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Margaret H. Wright,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Margaret H. Wright-Margaret-null, X1-subj-X2,X1-obj-X3,X4-has_name-Margaret H. Wright,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Margaret H. Wright, Margaret, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Margaret H. Wright, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Margaret H. Wright, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Margaret H\\. Wright"",""i"")) . }",true
316,Which is the birth place of Margaret Hluch?," X1-be-is-null,X2-which-Which-null,X4-Margaret Hluch-Margaret-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Margaret Hluch,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Margaret Hluch-Margaret-null, X1-subj-X2,X1-obj-X3,X4-has_name-Margaret Hluch,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Margaret Hluch, Margaret, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Margaret Hluch, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Margaret Hluch, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Margaret Hluch"",""i"")) . }",true
317,Which is the birth place of Margo Hoff?," X1-be-is-null,X2-which-Which-null,X4-Margo Hoff-Margo-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Margo Hoff,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Margo Hoff-Margo-null, X1-subj-X2,X1-obj-X3,X4-has_name-Margo Hoff,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Margo Hoff, Margo, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Margo Hoff, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Margo Hoff, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Margo Hoff"",""i"")) . }",true
318,Which is the birth place of Maria Martinez?," X1-be-is-null,X2-which-Which-null,X4-Maria Martinez-Maria-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Maria Martinez,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Maria Martinez-Maria-null, X1-subj-X2,X1-obj-X3,X4-has_name-Maria Martinez,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Maria Martinez, Maria, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Maria Martinez, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Maria Martinez, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Maria Martinez"",""i"")) . }",true
319,Which is the birth place of Mario Carreno?," X1-be-is-null,X2-which-Which-null,X4-Mario Carreno-Mario-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Mario Carreno,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Mario Carreno-Mario-null, X1-subj-X2,X1-obj-X3,X4-has_name-Mario Carreno,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Mario Carreno, Mario, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Mario Carreno, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Mario Carreno, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mario Carreno"",""i"")) . }",true
320,Which is the birth place of Marion A. Epting?," X1-be-is-null,X2-which-Which-null,X4-Marion A. Epting-Marion-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Marion A. Epting,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Marion A. Epting-Marion-null, X1-subj-X2,X1-obj-X3,X4-has_name-Marion A. Epting,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Marion A. Epting, Marion, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Marion A. Epting, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Marion A. Epting, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Marion A\\. Epting"",""i"")) . }",true
321,Which is the birth place of Marion Hildebrandt?," X1-be-is-null,X2-which-Which-null,X4-Marion Hildebrandt-Marion-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Marion Hildebrandt,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Marion Hildebrandt-Marion-null, X1-subj-X2,X1-obj-X3,X4-has_name-Marion Hildebrandt,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Marion Hildebrandt, Marion, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Marion Hildebrandt, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Marion Hildebrandt, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Marion Hildebrandt"",""i"")) . }",true
322,Which is the birth place of Mark Burns?," X1-be-is-null,X2-which-Which-null,X4-Mark Burns-Mark-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Mark Burns,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Mark Burns-Mark-null, X1-subj-X2,X1-obj-X3,X4-has_name-Mark Burns,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Mark Burns, Mark, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Mark Burns, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Mark Burns, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mark Burns"",""i"")) . }",true
323,Which is the birth place of Mark Rothko?," X1-be-is-null,X2-which-Which-null,X4-Mark Rothko-Mark-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Mark Rothko,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Mark Rothko-Mark-null, X1-subj-X2,X1-obj-X3,X4-has_name-Mark Rothko,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Mark Rothko, Mark, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Mark Rothko, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Mark Rothko, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mark Rothko"",""i"")) . }",true
324,Which is the birth place of Martin Johnson Heade?," X1-be-is-null,X2-which-Which-null,X4-Martin Johnson Heade-Martin-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Martin Johnson Heade,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Martin Johnson Heade-Martin-null, X1-subj-X2,X1-obj-X3,X4-has_name-Martin Johnson Heade,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Martin Johnson Heade, Martin, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Martin Johnson Heade, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Martin Johnson Heade, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Martin Johnson Heade"",""i"")) . }",true
325,Which is the birth place of Martin Stupich?," X1-be-is-null,X2-which-Which-null,X4-Martin Stupich-Martin-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Martin Stupich,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Martin Stupich-Martin-null, X1-subj-X2,X1-obj-X3,X4-has_name-Martin Stupich,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Martin Stupich, Martin, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Martin Stupich, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Martin Stupich, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Martin Stupich"",""i"")) . }",true
326,Which is the birth place of Mary Carroll?," X1-be-is-null,X2-which-Which-null,X4-Mary Carroll-Mary-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Mary Carroll,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Mary Carroll-Mary-null, X1-subj-X2,X1-obj-X3,X4-has_name-Mary Carroll,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Mary Carroll, Mary, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Mary Carroll, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Mary Carroll, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mary Carroll"",""i"")) . }",true
327,Which is the birth place of Mary Douglas?," X1-be-is-null,X2-which-Which-null,X4-Mary Douglas-Mary-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Mary Douglas,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Mary Douglas-Mary-null, X1-subj-X2,X1-obj-X3,X4-has_name-Mary Douglas,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Mary Douglas, Mary, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Mary Douglas, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Mary Douglas, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mary Douglas"",""i"")) . }",true
328,Which is the birth place of Mary Grigoriadis?," X1-be-is-null,X2-which-Which-null,X4-Mary Grigoriadis-Mary-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Mary Grigoriadis,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Mary Grigoriadis-Mary-null, X1-subj-X2,X1-obj-X3,X4-has_name-Mary Grigoriadis,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Mary Grigoriadis, Mary, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Mary Grigoriadis, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Mary Grigoriadis, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mary Grigoriadis"",""i"")) . }",true
329,Which is the birth place of Mary Mullineux?," X1-be-is-null,X2-which-Which-null,X4-Mary Mullineux-Mary-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Mary Mullineux,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Mary Mullineux-Mary-null, X1-subj-X2,X1-obj-X3,X4-has_name-Mary Mullineux,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Mary Mullineux, Mary, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Mary Mullineux, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Mary Mullineux, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mary Mullineux"",""i"")) . }",true
330,Which is the birth place of Mary Roehm?," X1-be-is-null,X2-which-Which-null,X4-Mary Roehm-Mary-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Mary Roehm,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Mary Roehm-Mary-null, X1-subj-X2,X1-obj-X3,X4-has_name-Mary Roehm,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Mary Roehm, Mary, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Mary Roehm, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Mary Roehm, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mary Roehm"",""i"")) . }",true
331,Which is the birth place of Mary Shaffer?," X1-be-is-null,X2-which-Which-null,X4-Mary Shaffer-Mary-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Mary Shaffer,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Mary Shaffer-Mary-null, X1-subj-X2,X1-obj-X3,X4-has_name-Mary Shaffer,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Mary Shaffer, Mary, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Mary Shaffer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Mary Shaffer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mary Shaffer"",""i"")) . }",true
332,Which is the birth place of Mary Van Cline?," X1-be-is-null,X2-which-Which-null,X4-Mary Van Cline-Mary-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Mary Van Cline,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Mary Van Cline-Mary-null, X1-subj-X2,X1-obj-X3,X4-has_name-Mary Van Cline,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Mary Van Cline, Mary, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Mary Van Cline, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Mary Van Cline, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mary Van Cline"",""i"")) . }",true
333,Which is the birth place of María Martínez-Cañas?," X1-be-is-null,X2-which-Which-null,X4-María Martínez-María-null,X3-birth place Cañas-birth place-the, X1-subj-X2,X4-has_name-María Martínez,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place Cañas-birth place-the,X4-María Martínez-María-null, X1-subj-X2,X1-obj-X3,X4-has_name-María Martínez,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, María Martínez, María, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place Cañas, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, María Martínez, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, María Martínez, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place Cañas, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 2]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""María Martínez"",""i"")) . }",true
334,Which is the birth place of Masuo Ikeda?," X1-be-is-null,X2-which-Which-null,X4-Masuo Ikeda-Masuo-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Masuo Ikeda,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Masuo Ikeda-Masuo-null, X1-subj-X2,X1-obj-X3,X4-has_name-Masuo Ikeda,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Masuo Ikeda, Masuo, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Masuo Ikeda, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Masuo Ikeda, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Masuo Ikeda"",""i"")) . }",true
335,Which is the birth place of Masuo Ojima?," X1-be-is-null,X2-which-Which-null,X4-Masuo Ojima-Masuo-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Masuo Ojima,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Masuo Ojima-Masuo-null, X1-subj-X2,X1-obj-X3,X4-has_name-Masuo Ojima,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Masuo Ojima, Masuo, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Masuo Ojima, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Masuo Ojima, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Masuo Ojima"",""i"")) . }",true
336,Which is the birth place of Matsumi Kanemitsu?," X1-be-is-null,X2-which-Which-null,X4-Matsumi Kanemitsu-Matsumi-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Matsumi Kanemitsu,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Matsumi Kanemitsu-Matsumi-null, X1-subj-X2,X1-obj-X3,X4-has_name-Matsumi Kanemitsu,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Matsumi Kanemitsu, Matsumi, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Matsumi Kanemitsu, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Matsumi Kanemitsu, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Matsumi Kanemitsu"",""i"")) . }",true
337,Which is the birth place of Mattie Lou O'Kelley?," X1-be-is-null,X2-which-Which-null,X4-Mattie Lou O'Kelley-Mattie-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Mattie Lou O'Kelley,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Mattie Lou O'Kelley-Mattie-null, X1-subj-X2,X1-obj-X3,X4-has_name-Mattie Lou O'Kelley,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Mattie Lou O'Kelley, Mattie, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Mattie Lou O'Kelley, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Mattie Lou O'Kelley, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mattie Lou O\\'Kelley"",""i"")) . }",true
338,Which is the birth place of Maurice Golubov?," X1-be-is-null,X2-which-Which-null,X4-Maurice Golubov-Maurice-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Maurice Golubov,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Maurice Golubov-Maurice-null, X1-subj-X2,X1-obj-X3,X4-has_name-Maurice Golubov,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Maurice Golubov, Maurice, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Maurice Golubov, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Maurice Golubov, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Maurice Golubov"",""i"")) . }",true
339,Which is the birth place of Max Bachofen?," X1-be-is-null,X2-which-Which-null,X4-Max Bachofen-Max-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Max Bachofen,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Max Bachofen-Max-null, X1-subj-X2,X1-obj-X3,X4-has_name-Max Bachofen,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Max Bachofen, Max, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Max Bachofen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Max Bachofen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Max Bachofen"",""i"")) . }",true
340,Which is the birth place of Max Weber?," X1-be-is-null,X2-which-Which-null,X4-Max Weber-Max-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Max Weber,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Max Weber-Max-null, X1-subj-X2,X1-obj-X3,X4-has_name-Max Weber,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Max Weber, Max, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Max Weber, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Max Weber, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Max Weber"",""i"")) . }",true
341,Which is the birth place of Maximilian Rainer Facklam?," X1-be-is-null,X2-which-Which-null,X4-Maximilian Rainer Facklam-Maximilian-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Maximilian Rainer Facklam,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Maximilian Rainer Facklam-Maximilian-null, X1-subj-X2,X1-obj-X3,X4-has_name-Maximilian Rainer Facklam,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Maximilian Rainer Facklam, Maximilian, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Maximilian Rainer Facklam, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Maximilian Rainer Facklam, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Maximilian Rainer Facklam"",""i"")) . }",true
342,Which is the birth place of May Gearhart?," X1-be-is-null,X2-which-Which-null,X4-May Gearhart-May-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-May Gearhart,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-May Gearhart-May-null, X1-subj-X2,X1-obj-X3,X4-has_name-May Gearhart,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, May Gearhart, May, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, May Gearhart, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, May Gearhart, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""May Gearhart"",""i"")) . }",false
343,Which is the birth place of Maybelle Stamper?," X1-be-is-null,X2-which-Which-null,X4-Maybelle Stamper-Maybelle-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Maybelle Stamper,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Maybelle Stamper-Maybelle-null, X1-subj-X2,X1-obj-X3,X4-has_name-Maybelle Stamper,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Maybelle Stamper, Maybelle, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Maybelle Stamper, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Maybelle Stamper, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Maybelle Stamper"",""i"")) . }",true
344,Which is the birth place of Mel Ramos?," X1-be-is-null,X2-which-Which-null,X4-Mel Ramos-Mel-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Mel Ramos,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Mel Ramos-Mel-null, X1-subj-X2,X1-obj-X3,X4-has_name-Mel Ramos,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Mel Ramos, Mel, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Mel Ramos, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Mel Ramos, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mel Ramos"",""i"")) . }",true
345,Which is the birth place of Melissa Mayer Galbraith?," X1-be-is-null,X2-which-Which-null,X4-Melissa Mayer Galbraith-Melissa-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Melissa Mayer Galbraith,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Melissa Mayer Galbraith-Melissa-null, X1-subj-X2,X1-obj-X3,X4-has_name-Melissa Mayer Galbraith,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Melissa Mayer Galbraith, Melissa, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Melissa Mayer Galbraith, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Melissa Mayer Galbraith, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Melissa Mayer Galbraith"",""i"")) . }",true
346,Which is the birth place of Merry Moor Winnett?," X1-be-is-null,X2-which-Which-null,X4-merry Moor Winnett-Merry-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-merry Moor Winnett,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-merry Moor Winnett-Merry-null, X1-subj-X2,X1-obj-X3,X4-has_name-merry Moor Winnett,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, merry Moor Winnett, Merry, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, merry Moor Winnett, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, merry Moor Winnett, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""merry Moor Winnett"",""i"")) . }",true
347,Which is the birth place of Meyer Wolfe?," X1-be-is-null,X2-which-Which-null,X4-Meyer Wolfe-Meyer-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Meyer Wolfe,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Meyer Wolfe-Meyer-null, X1-subj-X2,X1-obj-X3,X4-has_name-Meyer Wolfe,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Meyer Wolfe, Meyer, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Meyer Wolfe, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Meyer Wolfe, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Meyer Wolfe"",""i"")) . }",true
348,Which is the birth place of Michael Davis?," X1-be-is-null,X2-which-Which-null,X4-Michael Davis-Michael-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Michael Davis,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Michael Davis-Michael-null, X1-subj-X2,X1-obj-X3,X4-has_name-Michael Davis,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Michael Davis, Michael, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Michael Davis, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Michael Davis, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Michael Davis"",""i"")) . }",true
349,Which is the birth place of Michael Lantz?," X1-be-is-null,X2-which-Which-null,X4-Michael Lantz-Michael-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Michael Lantz,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Michael Lantz-Michael-null, X1-subj-X2,X1-obj-X3,X4-has_name-Michael Lantz,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Michael Lantz, Michael, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Michael Lantz, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Michael Lantz, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Michael Lantz"",""i"")) . }",true
350,Which is the birth place of Michelle Grabner?," X1-be-is-null,X2-which-Which-null,X4-Michelle Grabner-Michelle-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Michelle Grabner,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Michelle Grabner-Michelle-null, X1-subj-X2,X1-obj-X3,X4-has_name-Michelle Grabner,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Michelle Grabner, Michelle, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Michelle Grabner, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Michelle Grabner, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Michelle Grabner"",""i"")) . }",true
351,Which is the birth place of Milton Avery?," X1-be-is-null,X2-which-Which-null,X4-Milton Avery-Milton-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Milton Avery,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Milton Avery-Milton-null, X1-subj-X2,X1-obj-X3,X4-has_name-Milton Avery,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Milton Avery, Milton, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Milton Avery, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Milton Avery, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Milton Avery"",""i"")) . }",true
352,Which is the birth place of Minnette Lehmann?," X1-be-is-null,X2-which-Which-null,X4-Minnette Lehmann-Minnette-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Minnette Lehmann,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Minnette Lehmann-Minnette-null, X1-subj-X2,X1-obj-X3,X4-has_name-Minnette Lehmann,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Minnette Lehmann, Minnette, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Minnette Lehmann, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Minnette Lehmann, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Minnette Lehmann"",""i"")) . }",true
353,Which is the birth place of Mitchell Jamieson?," X1-be-is-null,X2-which-Which-null,X4-Mitchell Jamieson-Mitchell-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Mitchell Jamieson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Mitchell Jamieson-Mitchell-null, X1-subj-X2,X1-obj-X3,X4-has_name-Mitchell Jamieson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Mitchell Jamieson, Mitchell, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Mitchell Jamieson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Mitchell Jamieson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mitchell Jamieson"",""i"")) . }",true
354,Which is the birth place of Mong Q. Lee?," X1-be-is-null,X2-which-Which-null,X4-Mong Q. Lee-Mong-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Mong Q. Lee,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Mong Q. Lee-Mong-null, X1-subj-X2,X1-obj-X3,X4-has_name-Mong Q. Lee,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Mong Q. Lee, Mong, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Mong Q. Lee, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Mong Q. Lee, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mong Q\\. Lee"",""i"")) . }",true
355,Which is the birth place of Morris Henry Hobbs?," X1-be-is-null,X2-which-Which-null,X4-Morris Henry Hobbs-Morris-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Morris Henry Hobbs,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Morris Henry Hobbs-Morris-null, X1-subj-X2,X1-obj-X3,X4-has_name-Morris Henry Hobbs,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Morris Henry Hobbs, Morris, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Morris Henry Hobbs, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Morris Henry Hobbs, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Morris Henry Hobbs"",""i"")) . }",true
356,Which is the birth place of Morton Kaish?," X1-be-is-null,X2-which-Which-null,X4-Morton Kaish-Morton-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Morton Kaish,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Morton Kaish-Morton-null, X1-subj-X2,X1-obj-X3,X4-has_name-Morton Kaish,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Morton Kaish, Morton, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Morton Kaish, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Morton Kaish, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Morton Kaish"",""i"")) . }",true
357,Which is the birth place of Nan Watson?," X1-be-is-null,X2-which-Which-null,X4-Nan Watson-Nan-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Nan Watson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Nan Watson-Nan-null, X1-subj-X2,X1-obj-X3,X4-has_name-Nan Watson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Nan Watson, Nan, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Nan Watson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Nan Watson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Nan Watson"",""i"")) . }",true
358,Which is the birth place of Nicholas Africano?," X1-be-is-null,X2-which-Which-null,X4-Nicholas Africano-Nicholas-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Nicholas Africano,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Nicholas Africano-Nicholas-null, X1-subj-X2,X1-obj-X3,X4-has_name-Nicholas Africano,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Nicholas Africano, Nicholas, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Nicholas Africano, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Nicholas Africano, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Nicholas Africano"",""i"")) . }",true
359,Which is the birth place of Niels Borch Jensen?," X1-be-is-null,X2-which-Which-null,X4-Niels Borch Jensen-Niels-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Niels Borch Jensen,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Niels Borch Jensen-Niels-null, X1-subj-X2,X1-obj-X3,X4-has_name-Niels Borch Jensen,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Niels Borch Jensen, Niels, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Niels Borch Jensen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Niels Borch Jensen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Niels Borch Jensen"",""i"")) . }",true
360,Which is the birth place of Niles Spencer?," X1-be-is-null,X2-which-Which-null,X4-Niles Spencer-Niles-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Niles Spencer,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Niles Spencer-Niles-null, X1-subj-X2,X1-obj-X3,X4-has_name-Niles Spencer,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Niles Spencer, Niles, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Niles Spencer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Niles Spencer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Niles Spencer"",""i"")) . }",true
361,Which is the birth place of Norio Azuma?," X1-be-is-null,X2-which-Which-null,X4-Norio Azuma-Norio-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Norio Azuma,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Norio Azuma-Norio-null, X1-subj-X2,X1-obj-X3,X4-has_name-Norio Azuma,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Norio Azuma, Norio, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Norio Azuma, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Norio Azuma, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Norio Azuma"",""i"")) . }",true
362,Which is the birth place of Norman Kohlhepp?," X1-be-is-null,X2-which-Which-null,X4-Norman Kohlhepp-Norman-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Norman Kohlhepp,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Norman Kohlhepp-Norman-null, X1-subj-X2,X1-obj-X3,X4-has_name-Norman Kohlhepp,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Norman Kohlhepp, Norman, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Norman Kohlhepp, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Norman Kohlhepp, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Norman Kohlhepp"",""i"")) . }",true
363,Which is the birth place of Nura?," X1-be-is-null,X2-which-Which-null,X4-Nura-Nura-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Nura,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Nura-Nura-null, X1-subj-X2,X1-obj-X3,X4-has_name-Nura,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Nura, Nura, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Nura, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Nura, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Nura"",""i"")) . }",true
364,Which is the birth place of O. Louis Guglielmi?," X1-be-is-null,X2-which-Which-null,X4-O. Louis Guglielmi-O.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-O. Louis Guglielmi,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-O. Louis Guglielmi-O.-null, X1-subj-X2,X1-obj-X3,X4-has_name-O. Louis Guglielmi,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, O. Louis Guglielmi, O., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, O. Louis Guglielmi, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, O. Louis Guglielmi, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""O\\. Louis Guglielmi"",""i"")) . }",true
365,Which is the birth place of Olin Dows?," X1-be-is-null,X2-which-Which-null,X4-Olin Dows-Olin Dows-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Olin Dows,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Olin Dows-Olin Dows-null, X1-subj-X2,X1-obj-X3,X4-has_name-Olin Dows,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Olin Dows, Olin Dows, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Olin Dows, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Olin Dows, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Olin Dows"",""i"")) . }",true
366,Which is the birth place of Oscar R. Castillo?," X1-be-is-null,X2-which-Which-null,X4-Oscar R. Castillo-Oscar-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Oscar R. Castillo,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Oscar R. Castillo-Oscar-null, X1-subj-X2,X1-obj-X3,X4-has_name-Oscar R. Castillo,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Oscar R. Castillo, Oscar, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Oscar R. Castillo, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Oscar R. Castillo, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Oscar R\\. Castillo"",""i"")) . }",true
367,Which is the birth place of Otis Dozier?," X1-be-is-null,X2-which-Which-null,X4-Otis Dozier-Otis-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Otis Dozier,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Otis Dozier-Otis-null, X1-subj-X2,X1-obj-X3,X4-has_name-Otis Dozier,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Otis Dozier, Otis, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Otis Dozier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Otis Dozier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Otis Dozier"",""i"")) . }",true
368,Which is the birth place of Otto Natzler?," X1-be-is-null,X2-which-Which-null,X4-Otto Natzler-Otto-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Otto Natzler,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Otto Natzler-Otto-null, X1-subj-X2,X1-obj-X3,X4-has_name-Otto Natzler,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Otto Natzler, Otto, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Otto Natzler, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Otto Natzler, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Otto Natzler"",""i"")) . }",true
369,Which is the birth place of Owen Garde?," X1-be-is-null,X2-which-Which-null,X4-Owen Garde-Owen-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Owen Garde,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Owen Garde-Owen-null, X1-subj-X2,X1-obj-X3,X4-has_name-Owen Garde,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Owen Garde, Owen, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Owen Garde, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Owen Garde, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Owen Garde"",""i"")) . }",true
370,Which is the birth place of Oyvind Fahlstrom?," X1-be-is-null,X2-which-Which-null,X4-Oyvind Fahlstrom-Oyvind-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Oyvind Fahlstrom,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Oyvind Fahlstrom-Oyvind-null, X1-subj-X2,X1-obj-X3,X4-has_name-Oyvind Fahlstrom,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Oyvind Fahlstrom, Oyvind, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Oyvind Fahlstrom, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Oyvind Fahlstrom, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Oyvind Fahlstrom"",""i"")) . }",true
371,Which is the birth place of P. E. Stroëhling?," X1-be-is-null,X2-which-Which-null,X4-P. E. Stroëhling-P.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-P. E. Stroëhling,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-P. E. Stroëhling-P.-null, X1-subj-X2,X1-obj-X3,X4-has_name-P. E. Stroëhling,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, P. E. Stroëhling, P., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, P. E. Stroëhling, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, P. E. Stroëhling, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""P\\. E\\. Stroëhling"",""i"")) . }",true
372,Which is the birth place of Pamela Colman Smith?," X1-be-is-null,X2-which-Which-null,X4-Pamela Colman Smith-Pamela-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Pamela Colman Smith,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Pamela Colman Smith-Pamela-null, X1-subj-X2,X1-obj-X3,X4-has_name-Pamela Colman Smith,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Pamela Colman Smith, Pamela, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Pamela Colman Smith, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Pamela Colman Smith, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Pamela Colman Smith"",""i"")) . }",true
373,Which is the birth place of Pat Steir?," X1-be-is-null,X2-which-Which-null,X4-Pat Steir-Pat-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Pat Steir,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Pat Steir-Pat-null, X1-subj-X2,X1-obj-X3,X4-has_name-Pat Steir,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Pat Steir, Pat, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Pat Steir, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Pat Steir, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Pat Steir"",""i"")) . }",true
374,Which is the birth place of Patricia Nix?," X1-be-is-null,X2-which-Which-null,X4-Patricia Nix-Patricia-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Patricia Nix,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Patricia Nix-Patricia-null, X1-subj-X2,X1-obj-X3,X4-has_name-Patricia Nix,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Patricia Nix, Patricia, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Patricia Nix, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Patricia Nix, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Patricia Nix"",""i"")) . }",true
375,Which is the birth place of Patricia Tobacco Forrester?," X1-be-is-null,X2-which-Which-null,X4-Patricia Tobacco Forrester-Patricia-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Patricia Tobacco Forrester,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Patricia Tobacco Forrester-Patricia-null, X1-subj-X2,X1-obj-X3,X4-has_name-Patricia Tobacco Forrester,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Patricia Tobacco Forrester, Patricia, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Patricia Tobacco Forrester, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Patricia Tobacco Forrester, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Patricia Tobacco Forrester"",""i"")) . }",true
376,Which is the birth place of Paul Albert Baudouin?," X1-be-is-null,X2-which-Which-null,X4-Paul Albert Baudouin-Paul-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Paul Albert Baudouin,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Paul Albert Baudouin-Paul-null, X1-subj-X2,X1-obj-X3,X4-has_name-Paul Albert Baudouin,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Paul Albert Baudouin, Paul, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Paul Albert Baudouin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Paul Albert Baudouin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Paul Albert Baudouin"",""i"")) . }",true
377,Which is the birth place of Paul Chabas?," X1-be-is-null,X2-which-Which-null,X4-Paul Chabas-Paul-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Paul Chabas,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Paul Chabas-Paul-null, X1-subj-X2,X1-obj-X3,X4-has_name-Paul Chabas,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Paul Chabas, Paul, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Paul Chabas, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Paul Chabas, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Paul Chabas"",""i"")) . }",true
378,Which is the birth place of Paul Heald?," X1-be-is-null,X2-which-Which-null,X4-Paul Heald-Paul-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Paul Heald,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Paul Heald-Paul-null, X1-subj-X2,X1-obj-X3,X4-has_name-Paul Heald,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Paul Heald, Paul, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Paul Heald, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Paul Heald, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Paul Heald"",""i"")) . }",true
379,Which is the birth place of Paul J. Grellert?," X1-be-is-null,X2-which-Which-null,X4-Paul J. Grellert-Paul-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Paul J. Grellert,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Paul J. Grellert-Paul-null, X1-subj-X2,X1-obj-X3,X4-has_name-Paul J. Grellert,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Paul J. Grellert, Paul, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Paul J. Grellert, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Paul J. Grellert, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Paul J\\. Grellert"",""i"")) . }",true
380,Which is the birth place of Paul Kelpe?," X1-be-is-null,X2-which-Which-null,X4-Paul Kelpe-Paul-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Paul Kelpe,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Paul Kelpe-Paul-null, X1-subj-X2,X1-obj-X3,X4-has_name-Paul Kelpe,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Paul Kelpe, Paul, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Paul Kelpe, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Paul Kelpe, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Paul Kelpe"",""i"")) . }",true
381,Which is the birth place of Paul Laessle?," X1-be-is-null,X2-which-Which-null,X4-Paul Laessle-Paul-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Paul Laessle,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Paul Laessle-Paul-null, X1-subj-X2,X1-obj-X3,X4-has_name-Paul Laessle,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Paul Laessle, Paul, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Paul Laessle, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Paul Laessle, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Paul Laessle"",""i"")) . }",true
382,Which is the birth place of Paul McCarthy?," X1-be-is-null,X2-which-Which-null,X4-Paul McCarthy-Paul-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Paul McCarthy,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Paul McCarthy-Paul-null, X1-subj-X2,X1-obj-X3,X4-has_name-Paul McCarthy,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Paul McCarthy, Paul, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Paul McCarthy, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Paul McCarthy, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Paul McCarthy"",""i"")) . }",true
383,Which is the birth place of Phil Brown?," X1-be-is-null,X2-which-Which-null,X4-Phil Brown-Phil-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Phil Brown,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Phil Brown-Phil-null, X1-subj-X2,X1-obj-X3,X4-has_name-Phil Brown,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Phil Brown, Phil, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Phil Brown, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Phil Brown, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Phil Brown"",""i"")) . }",true
384,Which is the birth place of Pierre Troubetzkoy?," X1-be-is-null,X2-which-Which-null,X4-Pierre Troubetzkoy-Pierre-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Pierre Troubetzkoy,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Pierre Troubetzkoy-Pierre-null, X1-subj-X2,X1-obj-X3,X4-has_name-Pierre Troubetzkoy,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Pierre Troubetzkoy, Pierre, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Pierre Troubetzkoy, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Pierre Troubetzkoy, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Pierre Troubetzkoy"",""i"")) . }",true
385,Which is the birth place of Pino Janni?," X1-be-is-null,X2-which-Which-null,X4-Pino Janni-Pino-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Pino Janni,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Pino Janni-Pino-null, X1-subj-X2,X1-obj-X3,X4-has_name-Pino Janni,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Pino Janni, Pino, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Pino Janni, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Pino Janni, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Pino Janni"",""i"")) . }",true
386,Which is the birth place of Priscilla Roberts?," X1-be-is-null,X2-which-Which-null,X4-Priscilla Roberts-Priscilla-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Priscilla Roberts,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Priscilla Roberts-Priscilla-null, X1-subj-X2,X1-obj-X3,X4-has_name-Priscilla Roberts,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Priscilla Roberts, Priscilla, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Priscilla Roberts, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Priscilla Roberts, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Priscilla Roberts"",""i"")) . }",true
387,Which is the birth place of Ralph E. Eckerstrom?," X1-be-is-null,X2-which-Which-null,X4-Ralph E. Eckerstrom-Ralph-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ralph E. Eckerstrom,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ralph E. Eckerstrom-Ralph-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ralph E. Eckerstrom,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ralph E. Eckerstrom, Ralph, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ralph E. Eckerstrom, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ralph E. Eckerstrom, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ralph E\\. Eckerstrom"",""i"")) . }",true
388,Which is the birth place of Ramón José López?," X1-be-is-null,X2-which-Which-null,X4-Ramón José López-Ramón-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ramón José López,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ramón José López-Ramón-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ramón José López,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ramón José López, Ramón, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ramón José López, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ramón José López, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ramón José López"",""i"")) . }",true
389,Which is the birth place of Randy J. Johnston?," X1-be-is-null,X2-which-Which-null,X4-Randy J. Johnston-Randy-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Randy J. Johnston,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Randy J. Johnston-Randy-null, X1-subj-X2,X1-obj-X3,X4-has_name-Randy J. Johnston,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Randy J. Johnston, Randy, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Randy J. Johnston, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Randy J. Johnston, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Randy J\\. Johnston"",""i"")) . }",true
390,Which is the birth place of Ray E. George?," X1-be-is-null,X2-which-Which-null,X4-Ray E. George-Ray-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ray E. George,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ray E. George-Ray-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ray E. George,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ray E. George, Ray, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ray E. George, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ray E. George, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ray E\\. George"",""i"")) . }",true
391,Which is the birth place of Ray H. French?," X1-be-is-null,X2-which-Which-null,X4-Ray H. French-Ray-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ray H. French,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ray H. French-Ray-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ray H. French,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ray H. French, Ray, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ray H. French, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ray H. French, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ray H\\. French"",""i"")) . }",true
392,Which is the birth place of Ray K. Metzker?," X1-be-is-null,X2-which-Which-null,X4-Ray K. Metzker-Ray-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ray K. Metzker,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ray K. Metzker-Ray-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ray K. Metzker,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ray K. Metzker, Ray, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ray K. Metzker, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ray K. Metzker, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ray K\\. Metzker"",""i"")) . }",true
393,Which is the birth place of Red Weldon Sandlin?," X1-be-is-null,X2-which-Which-null,X4-Red Weldon Sandlin-Red-null,X3-birth place-birth place-the, X1-subj-X2,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Red Weldon Sandlin-Red-null, X1-subj-X2,X1-obj-X3,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Red Weldon Sandlin, Red, ADJ, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Red Weldon Sandlin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 1
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]", PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. },false
394,Which is the birth place of Rembrandt Peale?," X1-be-is-null,X2-which-Which-null,X4-Rembrandt Peale-Rembrandt-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Rembrandt Peale,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Rembrandt Peale-Rembrandt-null, X1-subj-X2,X1-obj-X3,X4-has_name-Rembrandt Peale,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Rembrandt Peale, Rembrandt, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Rembrandt Peale, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Rembrandt Peale, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Rembrandt Peale"",""i"")) . }",true
395,Which is the birth place of Renee Margolin?," X1-be-is-null,X2-which-Which-null,X4-Renee Margolin-Renee-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Renee Margolin,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Renee Margolin-Renee-null, X1-subj-X2,X1-obj-X3,X4-has_name-Renee Margolin,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Renee Margolin, Renee, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Renee Margolin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Renee Margolin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Renee Margolin"",""i"")) . }",true
396,Which is the birth place of Rex Clawson?," X1-be-is-null,X2-which-Which-null,X4-Rex Clawson-Rex-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Rex Clawson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Rex Clawson-Rex-null, X1-subj-X2,X1-obj-X3,X4-has_name-Rex Clawson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Rex Clawson, Rex, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Rex Clawson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Rex Clawson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Rex Clawson"",""i"")) . }",true
397,Which is the birth place of Richard George Mathews?," X1-be-is-null,X2-which-Which-null,X4-Richard George Mathew-Richard-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Richard George Mathew,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Richard George Mathew-Richard-null, X1-subj-X2,X1-obj-X3,X4-has_name-Richard George Mathew,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Richard George Mathew, Richard, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Richard George Mathew, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Richard George Mathew, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Richard George Mathew"",""i"")) . }",true
398,Which is the birth place of Richard Landis?," X1-be-is-null,X2-which-Which-null,X4-Richard Landis-Richard-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Richard Landis,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Richard Landis-Richard-null, X1-subj-X2,X1-obj-X3,X4-has_name-Richard Landis,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Richard Landis, Richard, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Richard Landis, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Richard Landis, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Richard Landis"",""i"")) . }",true
399,Which is the birth place of Rick Wrigley?," X1-be-is-null,X2-which-Which-null,X4-Rick Wrigley-Rick-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Rick Wrigley,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Rick Wrigley-Rick-null, X1-subj-X2,X1-obj-X3,X4-has_name-Rick Wrigley,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Rick Wrigley, Rick, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Rick Wrigley, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Rick Wrigley, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Rick Wrigley"",""i"")) . }",true
400,Which is the birth place of Robert A. Nelson?," X1-be-is-null,X2-which-Which-null,X4-Robert A. Nelson-Robert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Robert A. Nelson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Robert A. Nelson-Robert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Robert A. Nelson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Robert A. Nelson, Robert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Robert A. Nelson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Robert A. Nelson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert A\\. Nelson"",""i"")) . }",true
401,Which is the birth place of Robert Cato?," X1-be-is-null,X2-which-Which-null,X4-Robert Cato-Robert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Robert Cato,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Robert Cato-Robert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Robert Cato,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Robert Cato, Robert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Robert Cato, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Robert Cato, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert Cato"",""i"")) . }",true
402,Which is the birth place of Robert Disraeli?," X1-be-is-null,X2-which-Which-null,X4-Robert Disraeli-Robert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Robert Disraeli,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Robert Disraeli-Robert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Robert Disraeli,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Robert Disraeli, Robert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Robert Disraeli, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Robert Disraeli, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert Disraeli"",""i"")) . }",true
403,Which is the birth place of Robert Feke?," X1-be-is-null,X2-which-Which-null,X4-Robert Feke-Robert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Robert Feke,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Robert Feke-Robert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Robert Feke,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Robert Feke, Robert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Robert Feke, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Robert Feke, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert Feke"",""i"")) . }",true
404,Which is the birth place of Robert Goodnough?," X1-be-is-null,X2-which-Which-null,X4-Robert Goodnough-Robert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Robert Goodnough,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Robert Goodnough-Robert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Robert Goodnough,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Robert Goodnough, Robert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Robert Goodnough, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Robert Goodnough, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert Goodnough"",""i"")) . }",true
405,"Which is the birth place of Robert Havell, Jr.?"," X1-be-is-null,X2-which-Which-null,X4-Robert Havell Jr.-Robert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Robert Havell Jr.,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Robert Havell Jr.-Robert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Robert Havell Jr.,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Robert Havell Jr., Robert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Robert Havell Jr., propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Robert Havell Jr., propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert Havell Jr\\."",""i"")) . }",false
406,Which is the birth place of Robert Indiana?," X1-be-is-null,X2-which-Which-null,X4-Robert Indiana-Robert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Robert Indiana,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Robert Indiana-Robert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Robert Indiana,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Robert Indiana, Robert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Robert Indiana, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Robert Indiana, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert Indiana"",""i"")) . }",true
407,Which is the birth place of Robert Ladbrooke?," X1-be-is-null,X2-which-Which-null,X4-Robert Ladbrooke-Robert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Robert Ladbrooke,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Robert Ladbrooke-Robert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Robert Ladbrooke,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Robert Ladbrooke, Robert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Robert Ladbrooke, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Robert Ladbrooke, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert Ladbrooke"",""i"")) . }",true
408,Which is the birth place of Robert Lee Eskridge?," X1-be-is-null,X2-which-Which-null,X4-Robert Lee Eskridge-Robert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Robert Lee Eskridge,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Robert Lee Eskridge-Robert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Robert Lee Eskridge,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Robert Lee Eskridge, Robert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Robert Lee Eskridge, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Robert Lee Eskridge, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert Lee Eskridge"",""i"")) . }",true
409,Which is the birth place of Robert ParkeHarrison?," X1-be-is-null,X2-which-Which-null,X4-Robert ParkeHarrison-Robert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Robert ParkeHarrison,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Robert ParkeHarrison-Robert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Robert ParkeHarrison,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Robert ParkeHarrison, Robert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Robert ParkeHarrison, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Robert ParkeHarrison, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert ParkeHarrison"",""i"")) . }",true
410,Which is the birth place of Robert Reid?," X1-be-is-null,X2-which-Which-null,X4-Robert Reid-Robert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Robert Reid,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Robert Reid-Robert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Robert Reid,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Robert Reid, Robert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Robert Reid, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Robert Reid, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert Reid"",""i"")) . }",true
411,Which is the birth place of Roger D. Corsaw?," X1-be-is-null,X2-which-Which-null,X4-Roger D. Corsaw-Roger-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Roger D. Corsaw,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Roger D. Corsaw-Roger-null, X1-subj-X2,X1-obj-X3,X4-has_name-Roger D. Corsaw,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Roger D. Corsaw, Roger, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Roger D. Corsaw, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Roger D. Corsaw, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Roger D\\. Corsaw"",""i"")) . }",true
412,Which is the birth place of Romuald Kraus?," X1-be-is-null,X2-which-Which-null,X4-Romuald Kraus-Romuald-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Romuald Kraus,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Romuald Kraus-Romuald-null, X1-subj-X2,X1-obj-X3,X4-has_name-Romuald Kraus,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Romuald Kraus, Romuald, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Romuald Kraus, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Romuald Kraus, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Romuald Kraus"",""i"")) . }",true
413,Which is the birth place of Ron Davis?," X1-be-is-null,X2-which-Which-null,X4-Ron Davis-Ron-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ron Davis,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ron Davis-Ron-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ron Davis,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ron Davis, Ron, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ron Davis, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ron Davis, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ron Davis"",""i"")) . }",true
414,Which is the birth place of Ronald Bladen?," X1-be-is-null,X2-which-Which-null,X4-Ronald Bladen-Ronald-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ronald Bladen,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ronald Bladen-Ronald-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ronald Bladen,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ronald Bladen, Ronald, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ronald Bladen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ronald Bladen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ronald Bladen"",""i"")) . }",true
415,Which is the birth place of Rosa Bonheur?," X1-be-is-null,X2-which-Which-null,X4-Rosa Bonheur-Rosa-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Rosa Bonheur,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Rosa Bonheur-Rosa-null, X1-subj-X2,X1-obj-X3,X4-has_name-Rosa Bonheur,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Rosa Bonheur, Rosa, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Rosa Bonheur, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Rosa Bonheur, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Rosa Bonheur"",""i"")) . }",true
416,Which is the birth place of Rudy Ayoroa?," X1-be-is-null,X2-which-Which-null,X4-Rudy Ayoroa-Rudy-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Rudy Ayoroa,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Rudy Ayoroa-Rudy-null, X1-subj-X2,X1-obj-X3,X4-has_name-Rudy Ayoroa,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Rudy Ayoroa, Rudy, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Rudy Ayoroa, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Rudy Ayoroa, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Rudy Ayoroa"",""i"")) . }",true
417,Which is the birth place of Rupert D. Turnbull?," X1-be-is-null,X2-which-Which-null,X4-Rupert D. Turnbull-Rupert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Rupert D. Turnbull,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Rupert D. Turnbull-Rupert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Rupert D. Turnbull,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Rupert D. Turnbull, Rupert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Rupert D. Turnbull, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Rupert D. Turnbull, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Rupert D\\. Turnbull"",""i"")) . }",true
418,Which is the birth place of Russell Smoky Brown?,,Incorrect Stanza Parsing,null,null
419,Which is the birth place of Ruth Chaney?," X1-be-is-null,X2-which-Which-null,X4-Ruth Chaney-Ruth-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ruth Chaney,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ruth Chaney-Ruth-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ruth Chaney,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ruth Chaney, Ruth, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ruth Chaney, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ruth Chaney, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ruth Chaney"",""i"")) . }",true
420,Which is the birth place of Ruth Eckstein?," X1-be-is-null,X2-which-Which-null,X4-Ruth Eckstein-Ruth-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ruth Eckstein,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ruth Eckstein-Ruth-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ruth Eckstein,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ruth Eckstein, Ruth, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ruth Eckstein, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ruth Eckstein, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ruth Eckstein"",""i"")) . }",true
421,Which is the birth place of Ruth Grotenrath?," X1-be-is-null,X2-which-Which-null,X4-Ruth Grotenrath-Ruth-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ruth Grotenrath,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ruth Grotenrath-Ruth-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ruth Grotenrath,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ruth Grotenrath, Ruth, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ruth Grotenrath, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ruth Grotenrath, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ruth Grotenrath"",""i"")) . }",true
422,Which is the birth place of Ruth Starr Rose?," X1-be-is-null,X2-which-Which-null,X4-Ruth Starr Rose-Ruth-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ruth Starr Rose,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ruth Starr Rose-Ruth-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ruth Starr Rose,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ruth Starr Rose, Ruth, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ruth Starr Rose, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ruth Starr Rose, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ruth Starr Rose"",""i"")) . }",true
423,Which is the birth place of Régis François Gignoux?," X1-be-is-null,X2-which-Which-null,X4-Régis François Gignoux-Régis-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Régis François Gignoux,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Régis François Gignoux-Régis-null, X1-subj-X2,X1-obj-X3,X4-has_name-Régis François Gignoux,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Régis François Gignoux, Régis, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Régis François Gignoux, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Régis François Gignoux, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Régis François Gignoux"",""i"")) . }",true
424,Which is the birth place of S. C. Baker?," X1-be-is-null,X2-which-Which-null,X4-S. C. Baker-S.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-S. C. Baker,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-S. C. Baker-S.-null, X1-subj-X2,X1-obj-X3,X4-has_name-S. C. Baker,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, S. C. Baker, S., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, S. C. Baker, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, S. C. Baker, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""S\\. C\\. Baker"",""i"")) . }",true
425,Which is the birth place of Sallie Curb Arnold?," X1-be-is-null,X2-which-Which-null,X4-Sallie Curb Arnold-Sallie-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Sallie Curb Arnold,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Sallie Curb Arnold-Sallie-null, X1-subj-X2,X1-obj-X3,X4-has_name-Sallie Curb Arnold,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Sallie Curb Arnold, Sallie, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Sallie Curb Arnold, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Sallie Curb Arnold, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Sallie Curb Arnold"",""i"")) . }",true
426,Which is the birth place of Sam Gilliam?," X1-be-is-null,X2-which-Which-null,X4-Sam Gilliam-Sam-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Sam Gilliam,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Sam Gilliam-Sam-null, X1-subj-X2,X1-obj-X3,X4-has_name-Sam Gilliam,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Sam Gilliam, Sam, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Sam Gilliam, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Sam Gilliam, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Sam Gilliam"",""i"")) . }",true
427,Which is the birth place of Samuel Halpert?," X1-be-is-null,X2-which-Which-null,X4-Samuel Halpert-Samuel-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Samuel Halpert,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Samuel Halpert-Samuel-null, X1-subj-X2,X1-obj-X3,X4-has_name-Samuel Halpert,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Samuel Halpert, Samuel, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Samuel Halpert, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Samuel Halpert, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Samuel Halpert"",""i"")) . }",true
428,Which is the birth place of Samuel M. Green?," X1-be-is-null,X2-which-Which-null,X4-Samuel M. Green-Samuel-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Samuel M. Green,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Samuel M. Green-Samuel-null, X1-subj-X2,X1-obj-X3,X4-has_name-Samuel M. Green,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Samuel M. Green, Samuel, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Samuel M. Green, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Samuel M. Green, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Samuel M\\. Green"",""i"")) . }",true
429,Which is the birth place of Samuel Valentine Hunt?," X1-be-is-null,X2-which-Which-null,X4-Samuel Valentine Hunt-Samuel-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Samuel Valentine Hunt,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Samuel Valentine Hunt-Samuel-null, X1-subj-X2,X1-obj-X3,X4-has_name-Samuel Valentine Hunt,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Samuel Valentine Hunt, Samuel, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Samuel Valentine Hunt, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Samuel Valentine Hunt, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Samuel Valentine Hunt"",""i"")) . }",true
430,Which is the birth place of Sarah Berman?," X1-be-is-null,X2-which-Which-null,X4-Sarah Berman-Sarah-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Sarah Berman,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Sarah Berman-Sarah-null, X1-subj-X2,X1-obj-X3,X4-has_name-Sarah Berman,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Sarah Berman, Sarah, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Sarah Berman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Sarah Berman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Sarah Berman"",""i"")) . }",true
431,Which is the birth place of Sarah Charlesworth?," X1-be-is-null,X2-which-Which-null,X4-Sarah Charlesworth-Sarah-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Sarah Charlesworth,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Sarah Charlesworth-Sarah-null, X1-subj-X2,X1-obj-X3,X4-has_name-Sarah Charlesworth,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Sarah Charlesworth, Sarah, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Sarah Charlesworth, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Sarah Charlesworth, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Sarah Charlesworth"",""i"")) . }",true
432,Which is the birth place of Sarah Goodridge?," X1-be-is-null,X2-which-Which-null,X4-Sarah Goodridge-Sarah-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Sarah Goodridge,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Sarah Goodridge-Sarah-null, X1-subj-X2,X1-obj-X3,X4-has_name-Sarah Goodridge,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Sarah Goodridge, Sarah, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Sarah Goodridge, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Sarah Goodridge, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Sarah Goodridge"",""i"")) . }",true
433,Which is the birth place of Saul Berman?," X1-be-is-null,X2-which-Which-null,X4-Saul Berman-Saul-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Saul Berman,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Saul Berman-Saul-null, X1-subj-X2,X1-obj-X3,X4-has_name-Saul Berman,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Saul Berman, Saul, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Saul Berman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Saul Berman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Saul Berman"",""i"")) . }",true
434,Which is the birth place of Scott Hyde?," X1-be-is-null,X2-which-Which-null,X4-Scott Hyde-Scott-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Scott Hyde,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Scott Hyde-Scott-null, X1-subj-X2,X1-obj-X3,X4-has_name-Scott Hyde,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Scott Hyde, Scott, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Scott Hyde, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Scott Hyde, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Scott Hyde"",""i"")) . }",true
435,Which is the birth place of Sean Scully?," X1-be-is-null,X2-which-Which-null,X4-Sean Scully-Sean-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Sean Scully,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Sean Scully-Sean-null, X1-subj-X2,X1-obj-X3,X4-has_name-Sean Scully,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Sean Scully, Sean, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Sean Scully, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Sean Scully, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Sean Scully"",""i"")) . }",true
436,Which is the birth place of Simon Sparrow?," X1-be-is-null,X2-which-Which-null,X4-Simon Sparrow-Simon-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Simon Sparrow,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Simon Sparrow-Simon-null, X1-subj-X2,X1-obj-X3,X4-has_name-Simon Sparrow,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Simon Sparrow, Simon, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Simon Sparrow, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Simon Sparrow, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Simon Sparrow"",""i"")) . }",true
437,Which is the birth place of Sir John Watson Gordon?," X1-be-is-null,X2-which-Which-null,X4-Sir John Watson Gordon-Sir John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Sir John Watson Gordon,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Sir John Watson Gordon-Sir John-null, X1-subj-X2,X1-obj-X3,X4-has_name-Sir John Watson Gordon,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Sir John Watson Gordon, Sir John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Sir John Watson Gordon, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Sir John Watson Gordon, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Sir John Watson Gordon"",""i"")) . }",true
438,Which is the birth place of Stanley Edwards?," X1-be-is-null,X2-which-Which-null,X4-Stanley Edwards-Stanley-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Stanley Edwards,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Stanley Edwards-Stanley-null, X1-subj-X2,X1-obj-X3,X4-has_name-Stanley Edwards,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Stanley Edwards, Stanley, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Stanley Edwards, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Stanley Edwards, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Stanley Edwards"",""i"")) . }",true
439,Which is the birth place of Steve Ashby?," X1-be-is-null,X2-which-Which-null,X4-Steve Ashby-Steve-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Steve Ashby,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Steve Ashby-Steve-null, X1-subj-X2,X1-obj-X3,X4-has_name-Steve Ashby,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Steve Ashby, Steve, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Steve Ashby, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Steve Ashby, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Steve Ashby"",""i"")) . }",true
440,Which is the birth place of Steve Szabo?," X1-be-is-null,X2-which-Which-null,X4-Steve Szabo-Steve-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Steve Szabo,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Steve Szabo-Steve-null, X1-subj-X2,X1-obj-X3,X4-has_name-Steve Szabo,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Steve Szabo, Steve, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Steve Szabo, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Steve Szabo, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Steve Szabo"",""i"")) . }",true
441,Which is the birth place of Steven K. Roberts?," X1-be-is-null,X2-which-Which-null,X4-Steven K. Roberts-Steven-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Steven K. Roberts,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Steven K. Roberts-Steven-null, X1-subj-X2,X1-obj-X3,X4-has_name-Steven K. Roberts,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Steven K. Roberts, Steven, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Steven K. Roberts, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Steven K. Roberts, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Steven K\\. Roberts"",""i"")) . }",true
442,Which is the birth place of Suzanne Klotz?," X1-be-is-null,X2-which-Which-null,X4-Suzanne Klotz-Suzanne-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Suzanne Klotz,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Suzanne Klotz-Suzanne-null, X1-subj-X2,X1-obj-X3,X4-has_name-Suzanne Klotz,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Suzanne Klotz, Suzanne, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Suzanne Klotz, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Suzanne Klotz, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Suzanne Klotz"",""i"")) . }",true
443,Which is the birth place of T. L. Solien?," X1-be-is-null,X2-which-Which-null,X4-T. L. Solien-T.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-T. L. Solien,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-T. L. Solien-T.-null, X1-subj-X2,X1-obj-X3,X4-has_name-T. L. Solien,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, T. L. Solien, T., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, T. L. Solien, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, T. L. Solien, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""T\\. L\\. Solien"",""i"")) . }",true
444,Which is the birth place of Tami Kegley?," X1-be-is-null,X2-which-Which-null,X4-Tami Kegley-Tami-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Tami Kegley,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Tami Kegley-Tami-null, X1-subj-X2,X1-obj-X3,X4-has_name-Tami Kegley,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Tami Kegley, Tami, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Tami Kegley, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Tami Kegley, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Tami Kegley"",""i"")) . }",true
445,Which is the birth place of Tamiji Kitagawa?," X1-be-is-null,X2-which-Which-null,X4-Tamiji Kitagawa-Tamiji-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Tamiji Kitagawa,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Tamiji Kitagawa-Tamiji-null, X1-subj-X2,X1-obj-X3,X4-has_name-Tamiji Kitagawa,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Tamiji Kitagawa, Tamiji, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Tamiji Kitagawa, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Tamiji Kitagawa, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Tamiji Kitagawa"",""i"")) . }",true
446,Which is the birth place of Ted Kuykendall?," X1-be-is-null,X2-which-Which-null,X4-Ted Kuykendall-Ted-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ted Kuykendall,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ted Kuykendall-Ted-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ted Kuykendall,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ted Kuykendall, Ted, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ted Kuykendall, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ted Kuykendall, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ted Kuykendall"",""i"")) . }",true
447,Which is the birth place of Terry Evans?," X1-be-is-null,X2-which-Which-null,X4-Terry Evans-Terry-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Terry Evans,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Terry Evans-Terry-null, X1-subj-X2,X1-obj-X3,X4-has_name-Terry Evans,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Terry Evans, Terry, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Terry Evans, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Terry Evans, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Terry Evans"",""i"")) . }",true
448,Which is the birth place of Terry Gips?," X1-be-is-null,X2-which-Which-null,X4-Terry Gip-Terry-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Terry Gip,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Terry Gip-Terry-null, X1-subj-X2,X1-obj-X3,X4-has_name-Terry Gip,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Terry Gip, Terry, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Terry Gip, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Terry Gip, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Terry Gip"",""i"")) . }",true
449,Which is the birth place of Theo Hios?," X1-be-is-null,X2-which-Which-null,X4-Theo Hio-Theo-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Theo Hio,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Theo Hio-Theo-null, X1-subj-X2,X1-obj-X3,X4-has_name-Theo Hio,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Theo Hio, Theo, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Theo Hio, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Theo Hio, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Theo Hio"",""i"")) . }",true
450,Which is the birth place of Theodore Augustus Mills?," X1-be-is-null,X2-which-Which-null,X4-Theodore Augustus Mills-Theodore-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Theodore Augustus Mills,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Theodore Augustus Mills-Theodore-null, X1-subj-X2,X1-obj-X3,X4-has_name-Theodore Augustus Mills,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Theodore Augustus Mills, Theodore, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Theodore Augustus Mills, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Theodore Augustus Mills, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Theodore Augustus Mills"",""i"")) . }",true
451,Which is the birth place of Thomas Austen Brown?," X1-be-is-null,X2-which-Which-null,X4-Thomas Austen Brown-Thomas-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Thomas Austen Brown,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Thomas Austen Brown-Thomas-null, X1-subj-X2,X1-obj-X3,X4-has_name-Thomas Austen Brown,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Thomas Austen Brown, Thomas, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Thomas Austen Brown, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Thomas Austen Brown, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Thomas Austen Brown"",""i"")) . }",true
452,Which is the birth place of Thomas Ball?," X1-be-is-null,X2-which-Which-null,X4-Thomas Ball-Thomas-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Thomas Ball,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Thomas Ball-Thomas-null, X1-subj-X2,X1-obj-X3,X4-has_name-Thomas Ball,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Thomas Ball, Thomas, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Thomas Ball, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Thomas Ball, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Thomas Ball"",""i"")) . }",true
453,Which is the birth place of Thomas Barker?," X1-be-is-null,X2-which-Which-null,X4-Thomas Barker-Thomas-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Thomas Barker,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Thomas Barker-Thomas-null, X1-subj-X2,X1-obj-X3,X4-has_name-Thomas Barker,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Thomas Barker, Thomas, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Thomas Barker, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Thomas Barker, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Thomas Barker"",""i"")) . }",true
454,Which is the birth place of Thomas D. Rogers?," X1-be-is-null,X2-which-Which-null,X4-Thomas D. Rogers-Thomas-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Thomas D. Rogers,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Thomas D. Rogers-Thomas-null, X1-subj-X2,X1-obj-X3,X4-has_name-Thomas D. Rogers,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Thomas D. Rogers, Thomas, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Thomas D. Rogers, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Thomas D. Rogers, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Thomas D\\. Rogers"",""i"")) . }",true
455,Which is the birth place of Thomas Gainsborough?," X1-be-is-null,X2-which-Which-null,X4-Thomas Gainsborough-Thomas-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Thomas Gainsborough,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Thomas Gainsborough-Thomas-null, X1-subj-X2,X1-obj-X3,X4-has_name-Thomas Gainsborough,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Thomas Gainsborough, Thomas, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Thomas Gainsborough, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Thomas Gainsborough, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Thomas Gainsborough"",""i"")) . }",true
456,Which is the birth place of Thomas Hewes Hinckley?," X1-be-is-null,X2-which-Which-null,X4-Thomas Hewes Hinckley-Thomas-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Thomas Hewes Hinckley,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Thomas Hewes Hinckley-Thomas-null, X1-subj-X2,X1-obj-X3,X4-has_name-Thomas Hewes Hinckley,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Thomas Hewes Hinckley, Thomas, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Thomas Hewes Hinckley, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Thomas Hewes Hinckley, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Thomas Hewes Hinckley"",""i"")) . }",true
457,Which is the birth place of Thomas Hicks?," X1-be-is-null,X2-which-Which-null,X4-Thomas Hick-Thomas-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Thomas Hick,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Thomas Hick-Thomas-null, X1-subj-X2,X1-obj-X3,X4-has_name-Thomas Hick,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Thomas Hick, Thomas, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Thomas Hick, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Thomas Hick, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Thomas Hick"",""i"")) . }",true
458,Which is the birth place of Thomas Michael Savage?," X1-be-is-null,X2-which-Which-null,X4-Thomas Michael Savage-Thomas-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Thomas Michael Savage,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Thomas Michael Savage-Thomas-null, X1-subj-X2,X1-obj-X3,X4-has_name-Thomas Michael Savage,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Thomas Michael Savage, Thomas, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Thomas Michael Savage, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Thomas Michael Savage, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Thomas Michael Savage"",""i"")) . }",true
459,Which is the birth place of Thomas S. Baker?," X1-be-is-null,X2-which-Which-null,X4-Thomas S. Baker-Thomas-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Thomas S. Baker,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Thomas S. Baker-Thomas-null, X1-subj-X2,X1-obj-X3,X4-has_name-Thomas S. Baker,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Thomas S. Baker, Thomas, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Thomas S. Baker, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Thomas S. Baker, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Thomas S\\. Baker"",""i"")) . }",true
460,Which is the birth place of Théo Kerg?," X1-be-is-null,X2-which-Which-null,X4-Théo Kerg-Théo-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Théo Kerg,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Théo Kerg-Théo-null, X1-subj-X2,X1-obj-X3,X4-has_name-Théo Kerg,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Théo Kerg, Théo, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Théo Kerg, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Théo Kerg, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Théo Kerg"",""i"")) . }",true
461,Which is the birth place of Todd Walker?," X1-be-is-null,X2-which-Which-null,X4-Todd Walker-Todd-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Todd Walker,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Todd Walker-Todd-null, X1-subj-X2,X1-obj-X3,X4-has_name-Todd Walker,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Todd Walker, Todd, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Todd Walker, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Todd Walker, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Todd Walker"",""i"")) . }",true
462,Which is the birth place of Tom Green?," X1-be-is-null,X2-which-Which-null,X4-Tom Green-Tom-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Tom Green,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Tom Green-Tom-null, X1-subj-X2,X1-obj-X3,X4-has_name-Tom Green,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Tom Green, Tom, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Tom Green, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Tom Green, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Tom Green"",""i"")) . }",true
463,Which is the birth place of Tom Joyce?," X1-be-is-null,X2-which-Which-null,X4-Tom Joyce-Tom-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Tom Joyce,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Tom Joyce-Tom-null, X1-subj-X2,X1-obj-X3,X4-has_name-Tom Joyce,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Tom Joyce, Tom, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Tom Joyce, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Tom Joyce, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Tom Joyce"",""i"")) . }",true
464,Which is the birth place of Tom Millea?," X1-be-is-null,X2-which-Which-null,X4-Tom Millea-Tom-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Tom Millea,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Tom Millea-Tom-null, X1-subj-X2,X1-obj-X3,X4-has_name-Tom Millea,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Tom Millea, Tom, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Tom Millea, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Tom Millea, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Tom Millea"",""i"")) . }",true
465,Which is the birth place of Tom Patti?," X1-be-is-null,X2-which-Which-null,X4-Tom Patti-Tom-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Tom Patti,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Tom Patti-Tom-null, X1-subj-X2,X1-obj-X3,X4-has_name-Tom Patti,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Tom Patti, Tom, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Tom Patti, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Tom Patti, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Tom Patti"",""i"")) . }",true
466,Which is the birth place of Tony Berlant?," X1-be-is-null,X2-which-Which-null,X4-Tony Berlant-Tony-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Tony Berlant,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Tony Berlant-Tony-null, X1-subj-X2,X1-obj-X3,X4-has_name-Tony Berlant,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Tony Berlant, Tony, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Tony Berlant, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Tony Berlant, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Tony Berlant"",""i"")) . }",true
467,Which is the birth place of Tony Carretta?," X1-be-is-null,X2-which-Which-null,X4-Tony Carretta-Tony-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Tony Carretta,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Tony Carretta-Tony-null, X1-subj-X2,X1-obj-X3,X4-has_name-Tony Carretta,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Tony Carretta, Tony, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Tony Carretta, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Tony Carretta, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Tony Carretta"",""i"")) . }",true
468,Which is the birth place of Torin Richards?," X1-be-is-null,X2-which-Which-null,X4-Torin Richards-Torin-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Torin Richards,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Torin Richards-Torin-null, X1-subj-X2,X1-obj-X3,X4-has_name-Torin Richards,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Torin Richards, Torin, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Torin Richards, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Torin Richards, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Torin Richards"",""i"")) . }",true
469,Which is the birth place of Townend Glover?," X1-be-is-null,X2-which-Which-null,X4-Townend Glover-Townend-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Townend Glover,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Townend Glover-Townend-null, X1-subj-X2,X1-obj-X3,X4-has_name-Townend Glover,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Townend Glover, Townend, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Townend Glover, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Townend Glover, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Townend Glover"",""i"")) . }",true
470,Which is the birth place of Truman Howe Bartlett?," X1-be-is-null,X2-which-Which-null,X4-Truman Howe Bartlett-Truman-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Truman Howe Bartlett,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Truman Howe Bartlett-Truman-null, X1-subj-X2,X1-obj-X3,X4-has_name-Truman Howe Bartlett,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Truman Howe Bartlett, Truman, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Truman Howe Bartlett, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Truman Howe Bartlett, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Truman Howe Bartlett"",""i"")) . }",true
471,Which is the birth place of Vera Klement?," X1-be-is-null,X2-which-Which-null,X4-Vera Klement-Vera-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Vera Klement,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Vera Klement-Vera-null, X1-subj-X2,X1-obj-X3,X4-has_name-Vera Klement,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Vera Klement, Vera, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Vera Klement, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Vera Klement, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Vera Klement"",""i"")) . }",true
472,Which is the birth place of Victor Justice Evans?," X1-be-is-null,X2-which-Which-null,X4-Victor Justice Evans-Victor Justice-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Victor Justice Evans,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Victor Justice Evans-Victor Justice-null, X1-subj-X2,X1-obj-X3,X4-has_name-Victor Justice Evans,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Victor Justice Evans, Victor Justice, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Victor Justice Evans, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Victor Justice Evans, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Victor Justice Evans"",""i"")) . }",true
473,Which is the birth place of Virginia R. Harris?," X1-be-is-null,X2-which-Which-null,X4-Virginia R. Harris-Virginia-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Virginia R. Harris,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Virginia R. Harris-Virginia-null, X1-subj-X2,X1-obj-X3,X4-has_name-Virginia R. Harris,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Virginia R. Harris, Virginia, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Virginia R. Harris, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Virginia R. Harris, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Virginia R\\. Harris"",""i"")) . }",true
474,Which is the birth place of Wade Hampton McVay?," X1-be-is-null,X2-which-Which-null,X4-Wade Hampton McVay-Wade-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Wade Hampton McVay,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Wade Hampton McVay-Wade-null, X1-subj-X2,X1-obj-X3,X4-has_name-Wade Hampton McVay,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Wade Hampton McVay, Wade, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Wade Hampton McVay, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Wade Hampton McVay, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Wade Hampton McVay"",""i"")) . }",true
475,Which is the birth place of Walter Beach Humphrey?,,Incorrect Stanza Parsing,null,null
476,Which is the birth place of Walter Beck?," X1-be-is-null,X2-which-Which-null,X4-Walter Beck-Walter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Walter Beck,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Walter Beck-Walter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Walter Beck,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Walter Beck, Walter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Walter Beck, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Walter Beck, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Walter Beck"",""i"")) . }",true
477,Which is the birth place of Walter Granville-Smith?," X1-be-is-null,X2-which-Which-null,X4-Walter Granville-Walter-null,X3-birth place Smith-birth place-the, X1-subj-X2,X4-has_name-Walter Granville,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place Smith-birth place-the,X4-Walter Granville-Walter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Walter Granville,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Walter Granville, Walter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place Smith, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Walter Granville, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Walter Granville, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place Smith, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 2]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Walter Granville"",""i"")) . }",true
478,Which is the birth place of Walter Ingalls?," X1-be-is-null,X2-which-Which-null,X4-Walter Ingall-Walter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Walter Ingall,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Walter Ingall-Walter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Walter Ingall,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Walter Ingall, Walter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Walter Ingall, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Walter Ingall, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Walter Ingall"",""i"")) . }",true
479,Which is the birth place of Walter Robertson?," X1-be-is-null,X2-which-Which-null,X4-Walter Robertson-Walter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Walter Robertson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Walter Robertson-Walter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Walter Robertson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Walter Robertson, Walter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Walter Robertson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Walter Robertson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Walter Robertson"",""i"")) . }",true
480,Which is the birth place of Walter Ufer?," X1-be-is-null,X2-which-Which-null,X4-Walter Ufer-Walter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Walter Ufer,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Walter Ufer-Walter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Walter Ufer,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Walter Ufer, Walter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Walter Ufer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Walter Ufer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Walter Ufer"",""i"")) . }",true
481,Which is the birth place of Wanda Gág?," X1-be-is-null,X2-which-Which-null,X4-Wanda Gág-Wanda-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Wanda Gág,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Wanda Gág-Wanda-null, X1-subj-X2,X1-obj-X3,X4-has_name-Wanda Gág,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Wanda Gág, Wanda, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Wanda Gág, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Wanda Gág, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Wanda Gág"",""i"")) . }",true
482,Which is the birth place of Wayne Healy?," X1-be-is-null,X2-which-Which-null,X4-Wayne Healy-Wayne-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Wayne Healy,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Wayne Healy-Wayne-null, X1-subj-X2,X1-obj-X3,X4-has_name-Wayne Healy,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Wayne Healy, Wayne, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Wayne Healy, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Wayne Healy, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Wayne Healy"",""i"")) . }",true
483,Which is the birth place of Werner Groshans?," X1-be-is-null,X2-which-Which-null,X4-Werner Groshan-Werner-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Werner Groshan,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Werner Groshan-Werner-null, X1-subj-X2,X1-obj-X3,X4-has_name-Werner Groshan,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Werner Groshan, Werner, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Werner Groshan, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Werner Groshan, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Werner Groshan"",""i"")) . }",true
484,Which is the birth place of Wilfrid Zogbaum?," X1-be-is-null,X2-which-Which-null,X4-Wilfrid Zogbaum-Wilfrid-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Wilfrid Zogbaum,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Wilfrid Zogbaum-Wilfrid-null, X1-subj-X2,X1-obj-X3,X4-has_name-Wilfrid Zogbaum,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Wilfrid Zogbaum, Wilfrid, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Wilfrid Zogbaum, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Wilfrid Zogbaum, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Wilfrid Zogbaum"",""i"")) . }",true
485,Which is the birth place of Will Barnet?," X1-be-is-null,X2-which-Which-null,X4-Will Barnet-Will-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Will Barnet,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Will Barnet-Will-null, X1-subj-X2,X1-obj-X3,X4-has_name-Will Barnet,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Will Barnet, Will, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Will Barnet, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Will Barnet, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Will Barnet"",""i"")) . }",true
486,Which is the birth place of William Bache?," X1-be-is-null,X2-which-Which-null,X4-William Bache-William-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-William Bache,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-William Bache-William-null, X1-subj-X2,X1-obj-X3,X4-has_name-William Bache,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, William Bache, William, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, William Bache, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, William Bache, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William Bache"",""i"")) . }",true
487,Which is the birth place of William Bailey?," X1-be-is-null,X2-which-Which-null,X4-William Bailey-William-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-William Bailey,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-William Bailey-William-null, X1-subj-X2,X1-obj-X3,X4-has_name-William Bailey,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, William Bailey, William, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, William Bailey, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, William Bailey, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William Bailey"",""i"")) . }",true
488,Which is the birth place of William Charles?," X1-be-is-null,X2-which-Which-null,X4-William Charles-William-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-William Charles,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-William Charles-William-null, X1-subj-X2,X1-obj-X3,X4-has_name-William Charles,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, William Charles, William, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, William Charles, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, William Charles, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William Charles"",""i"")) . }",true
489,Which is the birth place of William Eggleston?," X1-be-is-null,X2-which-Which-null,X4-William Eggleston-William-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-William Eggleston,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-William Eggleston-William-null, X1-subj-X2,X1-obj-X3,X4-has_name-William Eggleston,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, William Eggleston, William, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, William Eggleston, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, William Eggleston, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William Eggleston"",""i"")) . }",true
490,Which is the birth place of William Gebhardt?," X1-be-is-null,X2-which-Which-null,X4-William Gebhardt-William-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-William Gebhardt,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-William Gebhardt-William-null, X1-subj-X2,X1-obj-X3,X4-has_name-William Gebhardt,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, William Gebhardt, William, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, William Gebhardt, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, William Gebhardt, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William Gebhardt"",""i"")) . }",true
491,Which is the birth place of William H. Jackson?," X1-be-is-null,X2-which-Which-null,X4-William H. Jackson-William-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-William H. Jackson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-William H. Jackson-William-null, X1-subj-X2,X1-obj-X3,X4-has_name-William H. Jackson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, William H. Jackson, William, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, William H. Jackson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, William H. Jackson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William H\\. Jackson"",""i"")) . }",true
492,Which is the birth place of William K. Greiner?," X1-be-is-null,X2-which-Which-null,X4-William K. Greiner-William-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-William K. Greiner,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-William K. Greiner-William-null, X1-subj-X2,X1-obj-X3,X4-has_name-William K. Greiner,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, William K. Greiner, William, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, William K. Greiner, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, William K. Greiner, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William K\\. Greiner"",""i"")) . }",true
493,Which is the birth place of William L. Garver?," X1-be-is-null,X2-which-Which-null,X4-William L. Garver-William-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-William L. Garver,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-William L. Garver-William-null, X1-subj-X2,X1-obj-X3,X4-has_name-William L. Garver,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, William L. Garver, William, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, William L. Garver, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, William L. Garver, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William L\\. Garver"",""i"")) . }",true
494,Which is the birth place of William Langenheim?," X1-be-is-null,X2-which-Which-null,X4-William Langenheim-William-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-William Langenheim,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-William Langenheim-William-null, X1-subj-X2,X1-obj-X3,X4-has_name-William Langenheim,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, William Langenheim, William, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, William Langenheim, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, William Langenheim, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William Langenheim"",""i"")) . }",true
495,Which is the birth place of William Leslie?," X1-be-is-null,X2-which-Which-null,X4-William Leslie-William-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-William Leslie,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-William Leslie-William-null, X1-subj-X2,X1-obj-X3,X4-has_name-William Leslie,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, William Leslie, William, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, William Leslie, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, William Leslie, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William Leslie"",""i"")) . }",true
496,Which is the birth place of William Wellstood?," X1-be-is-null,X2-which-Which-null,X4-William Wellstood-William-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-William Wellstood,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-William Wellstood-William-null, X1-subj-X2,X1-obj-X3,X4-has_name-William Wellstood,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, William Wellstood, William, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, William Wellstood, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, William Wellstood, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William Wellstood"",""i"")) . }",true
497,Which is the birth place of Xavier González?," X1-be-is-null,X2-which-Which-null,X4-Xavier González-Xavier-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Xavier González,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Xavier González-Xavier-null, X1-subj-X2,X1-obj-X3,X4-has_name-Xavier González,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Xavier González, Xavier, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Xavier González, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Xavier González, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Xavier González"",""i"")) . }",true
498,Which is the birth place of Xavier Martinez?," X1-be-is-null,X2-which-Which-null,X4-Xavier Martinez-Xavier-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Xavier Martinez,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Xavier Martinez-Xavier-null, X1-subj-X2,X1-obj-X3,X4-has_name-Xavier Martinez,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Xavier Martinez, Xavier, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Xavier Martinez, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Xavier Martinez, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Xavier Martinez"",""i"")) . }",true
499,Which is the birth place of Yun Gee?," X1-be-is-null,X2-which-Which-null,X4-Yun Gee-Yun-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Yun Gee,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Yun Gee-Yun-null, X1-subj-X2,X1-obj-X3,X4-has_name-Yun Gee,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Yun Gee, Yun, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Yun Gee, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Yun Gee, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Yun Gee"",""i"")) . }",true
500,Which is the birth place of Yusaku Kamekura?," X1-be-is-null,X2-which-Which-null,X4-Yusaku Kamekura-Yusaku-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Yusaku Kamekura,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Yusaku Kamekura-Yusaku-null, X1-subj-X2,X1-obj-X3,X4-has_name-Yusaku Kamekura,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Yusaku Kamekura, Yusaku, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Yusaku Kamekura, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Yusaku Kamekura, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Yusaku Kamekura"",""i"")) . }",true
