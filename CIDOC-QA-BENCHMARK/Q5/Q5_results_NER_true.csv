Id,Question,partialDRS,Solution,Gen Query,Gen.contains(Man)
1,Which is the birth place of ADÁL?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""ADÁL"",""i"")) . }",true
2,Which is the birth place of Aden E. Miller?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Aden E\\. Miller"",""i"")) . }",true
3,Which is the birth place of Adolf Benca?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Adolf Benca"",""i"")) . }",true
4,Which is the birth place of Adolf Schreyer?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Adolf Schreyer"",""i"")) . }",true
5,Which is the birth place of Adriaen Brouwer?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Adriaen Brouwer"",""i"")) . }",true
6,Which is the birth place of Aghassi George Aghassian?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Aghassi George Aghassian"",""i"")) . }",true
7,Which is the birth place of Agnes E. Lyall?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Agnes E\\. Lyall"",""i"")) . }",true
8,Which is the birth place of Alan Cohen?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alan Cohen"",""i"")) . }",true
9,Which is the birth place of Albert Gregory Hull?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Albert Gregory Hull"",""i"")) . }",true
10,Which is the birth place of Albert Heckman?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Albert Heckman"",""i"")) . }",true
11,Which is the birth place of Albert Pinkham Ryder?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Albert Pinkham Ryder"",""i"")) . }",true
12,Which is the birth place of Alcopley?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alcopley"",""i"")) . }",true
13,Which is the birth place of Aldro T. Hibbard?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Aldro T\\. Hibbard"",""i"")) . }",true
14,Which is the birth place of Alexander Kachinsky?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alexander Kachinsky"",""i"")) . }",true
15,Which is the birth place of Alexander Robertson?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alexander Robertson"",""i"")) . }",true
16,Which is the birth place of Alexandrina Robertson Harris?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alexandrina Robertson Harris"",""i"")) . }",true
17,Which is the birth place of Alfred Sessler?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alfred Sessler"",""i"")) . }",true
18,Which is the birth place of Allen Appel?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Allen Appel"",""i"")) . }",true
19,Which is the birth place of Alonzo Earl Foringer?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alonzo Earl Foringer"",""i"")) . }",true
20,Which is the birth place of Alphonse Jongers?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alphonse Jongers"",""i"")) . }",true
21,Which is the birth place of Alton Tobey?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alton Tobey"",""i"")) . }",true
22,Which is the birth place of Alvan Fisher?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alvan Fisher"",""i"")) . }",true
23,Which is the birth place of Amy Cutler?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Amy Cutler"",""i"")) . }",true
24,Which is the birth place of Antonio Barone?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Antonio Barone"",""i"")) . }",true
25,Which is the birth place of Antonio Jacobsen?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Antonio Jacobsen"",""i"")) . }",true
26,Which is the birth place of Aristidis Kyriazis?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Aristidis Kyriazis"",""i"")) . }",true
27,Which is the birth place of Armin Landeck?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Armin Landeck"",""i"")) . }",true
28,Which is the birth place of Art Green?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Art Green"",""i"")) . }",true
29,Which is the birth place of Arthur Durston?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Arthur Durston"",""i"")) . }",true
30,Which is the birth place of Arthur Ollman?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Arthur Ollman"",""i"")) . }",true
31,Which is the birth place of Arthur W. Hall?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Arthur W\\. Hall"",""i"")) . }",true
32,Which is the birth place of Attilio Salemme?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Attilio Salemme"",""i"")) . }",true
33,Which is the birth place of B. W. Kilburn?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""B\\. W\\. Kilburn"",""i"")) . }",true
34,Which is the birth place of Barbara Hashimoto?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Barbara Hashimoto"",""i"")) . }",true
35,Which is the birth place of Barbara Tisserat?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Barbara Tisserat"",""i"")) . }",true
36,Which is the birth place of Basil Ede?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Basil Ede"",""i"")) . }",true
37,Which is the birth place of Baychar?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Baychar"",""i"")) . }",true
38,Which is the birth place of Ben Foster?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ben Foster"",""i"")) . }",true
39,Which is the birth place of Benjamin Blythe?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Benjamin Blythe"",""i"")) . }",true
40,Which is the birth place of Benjamin H. Frayser?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Benjamin H\\. Frayser"",""i"")) . }",true
41,Which is the birth place of Benjamin Kopman?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Benjamin Kopman"",""i"")) . }",true
42,Which is the birth place of Benoit Audran I?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Benoit Audran I"",""i"")) . }",true
43,Which is the birth place of Bernard Arnest?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Bernard Arnest"",""i"")) . }",true
44,Which is the birth place of Bernard Greenwald?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Bernard Greenwald"",""i"")) . }",true
45,Which is the birth place of Bernard Leach?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Bernard Leach"",""i"")) . }",true
46,Which is the birth place of Bernard Schardt?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Bernard Schardt"",""i"")) . }",true
47,Which is the birth place of Betty Scarpino?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Betty Scarpino"",""i"")) . }",true
48,Which is the birth place of Betty Spindler?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Betty Spindler"",""i"")) . }",true
49,Which is the birth place of Bill Beckley?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Bill Beckley"",""i"")) . }",true
50,Which is the birth place of Billy Al Bengston?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Billy Al Bengston"",""i"")) . }",true
51,Which is the birth place of Bjorn Egeli?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Bjorn Egeli"",""i"")) . }",true
52,Which is the birth place of Blanche Grambs?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Blanche Grambs"",""i"")) . }",true
53,Which is the birth place of Bob Freimark?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Bob Freimark"",""i"")) . }",true
54,Which is the birth place of Bob Thompson?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Bob Thompson"",""i"")) . }",true
55,Which is the birth place of Bob Winston?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Bob Winston"",""i"")) . }",true
56,Which is the birth place of Boris Gorelick?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Boris Gorelick"",""i"")) . }",true
57,Which is the birth place of Brother Thomas Bezanson?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Brother Thomas Bezanson"",""i"")) . }",true
58,Which is the birth place of Buenaventura Salesa?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Buenaventura Salesa"",""i"")) . }",true
59,Which is the birth place of C. K. Chatterton?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""C\\. K\\. Chatterton"",""i"")) . }",true
60,Which is the birth place of CHRISTIAN MARCLAY (NEA)?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""CHRISTIAN MARCLAY \\(NEA\\)"",""i"")) . }",true
61,Which is the birth place of Carl Dern?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Carl Dern"",""i"")) . }",true
62,Which is the birth place of Carl Holty?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Carl Holty"",""i"")) . }",true
63,Which is the birth place of Carl Van Vechten?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Carl Van Vechten"",""i"")) . }",true
64,Which is the birth place of Carlos Alfonzo?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Carlos Alfonzo"",""i"")) . }",true
65,Which is the birth place of Carlos López?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Carlos López"",""i"")) . }",true
66,Which is the birth place of Carlos Santistevan?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Carlos Santistevan"",""i"")) . }",true
67,Which is the birth place of Charles Anton Kaeselau?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charles Anton Kaeselau"",""i"")) . }",true
68,Which is the birth place of Charles François Lacroix de Marseille?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charles François Lacroix de Marseille"",""i"")) . }",true
69,Which is the birth place of Charles Fraser?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charles Fraser"",""i"")) . }",true
70,Which is the birth place of Charles Merrick Capps?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charles Merrick Capps"",""i"")) . }",true
71,Which is the birth place of Charles Mottram?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charles Mottram"",""i"")) . }",true
72,Which is the birth place of Charles Pollock?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charles Pollock"",""i"")) . }",true
73,Which is the birth place of Charles Roscoe Savage?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charles Roscoe Savage"",""i"")) . }",true
74,Which is the birth place of Charles W. Hawthorne?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charles W\\. Hawthorne"",""i"")) . }",true
75,Which is the birth place of Charles W. Ward?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charles W\\. Ward"",""i"")) . }",true
76,Which is the birth place of Charlie Willeto?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charlie Willeto"",""i"")) . }",true
77,Which is the birth place of Chauncey Frederick Korten?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Chauncey Frederick Korten"",""i"")) . }",true
78,Which is the birth place of Chester Leich?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Chester Leich"",""i"")) . }",true
79,Which is the birth place of Chiura Obata?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Chiura Obata"",""i"")) . }",true
80,Which is the birth place of Chou Pang-Ling?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Chou Pang\\-Ling"",""i"")) . }",true
81,Which is the birth place of Chris Irick?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Chris Irick"",""i"")) . }",true
82,Which is the birth place of Christo?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Christo"",""i"")) . }",true
83,Which is the birth place of Christoffel Wüst?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Christoffel Wüst"",""i"")) . }",true
84,Which is the birth place of Chuck Hindes?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Chuck Hindes"",""i"")) . }",true
85,Which is the birth place of Chuck Ramirez?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Chuck Ramirez"",""i"")) . }",true
86,Which is the birth place of Clara Fasano?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Clara Fasano"",""i"")) . }",true
87,Which is the birth place of Clay Grigsby?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Clay Grigsby"",""i"")) . }",true
88,Which is the birth place of Clinton Adams?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Clinton Adams"",""i"")) . }",true
89,Which is the birth place of Clyde F. Jenkins?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Clyde F\\. Jenkins"",""i"")) . }",true
90,Which is the birth place of Clyde Lynds?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Clyde Lynds"",""i"")) . }",true
91,Which is the birth place of Crystal K. D. Huie?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Crystal K\\. D\\. Huie"",""i"")) . }",true
92,Which is the birth place of Da Loria Norman?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Da Loria Norman"",""i"")) . }",true
93,Which is the birth place of Dan Graham?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Dan Graham"",""i"")) . }",true
94,Which is the birth place of David Beck?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David Beck"",""i"")) . }",true
95,Which is the birth place of David Blue Lamm?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David Blue Lamm"",""i"")) . }",true
96,Which is the birth place of David Burliuk?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David Burliuk"",""i"")) . }",true
97,Which is the birth place of David Glines?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David Glines"",""i"")) . }",true
98,Which is the birth place of David McCosh?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David McCosh"",""i"")) . }",true
99,Which is the birth place of David Meaders?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David Meaders"",""i"")) . }",true
100,Which is the birth place of David Ruddell?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David Ruddell"",""i"")) . }",true
101,Which is the birth place of David Sengel?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David Sengel"",""i"")) . }",true
102,Which is the birth place of David Stromeyer?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David Stromeyer"",""i"")) . }",true
103,Which is the birth place of David T. Hanson?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David T\\. Hanson"",""i"")) . }",true
104,Which is the birth place of David Underwood?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David Underwood"",""i"")) . }",true
105,Which is the birth place of David W. Humphrey?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David W\\. Humphrey"",""i"")) . }",true
106,Which is the birth place of David White?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David White"",""i"")) . }",true
107,Which is the birth place of De Lancey Gill?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""De Lancey Gill"",""i"")) . }",true
108,Which is the birth place of Debbie Fleming Caffery?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Debbie Fleming Caffery"",""i"")) . }",true
109,Which is the birth place of Delilah Montoya?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Delilah Montoya"",""i"")) . }",true
110,Which is the birth place of Delwyn Herbert?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Delwyn Herbert"",""i"")) . }",true
111,Which is the birth place of Didi Suydam?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Didi Suydam"",""i"")) . }",true
112,"Which is the birth place of Don Doll, S. J.?"," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Don Doll\\, S\\. J\\."",""i"")) . }",true
113,Which is the birth place of Donal Hord?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Donal Hord"",""i"")) . }",true
114,Which is the birth place of Doris Rosenthal?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Doris Rosenthal"",""i"")) . }",true
115,Which is the birth place of Dorothy Gill Barnes?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Dorothy Gill Barnes"",""i"")) . }",true
116,Which is the birth place of Dotty Attie?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Dotty Attie"",""i"")) . }",true
117,Which is the birth place of Douglas Kenney?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Douglas Kenney"",""i"")) . }",true
118,Which is the birth place of Douglas Paul Finkel?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Douglas Paul Finkel"",""i"")) . }",true
119,Which is the birth place of Douglas Warfield Warner?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Douglas Warfield Warner"",""i"")) . }",true
120,Which is the birth place of Duncan McCosker?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Duncan McCosker"",""i"")) . }",true
121,Which is the birth place of E. J. Bellocq?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""E\\. J\\. Bellocq"",""i"")) . }",true
122,Which is the birth place of Earl Pardon?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Earl Pardon"",""i"")) . }",true
123,Which is the birth place of Edgar Melville Ward?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Edgar Melville Ward"",""i"")) . }",true
124,Which is the birth place of Edmond Casarella?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Edmond Casarella"",""i"")) . }",true
125,Which is the birth place of Edward B. Webster?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Edward B\\. Webster"",""i"")) . }",true
126,Which is the birth place of Edward Goodall?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Edward Goodall"",""i"")) . }",true
127,Which is the birth place of Edward Kienholz?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Edward Kienholz"",""i"")) . }",true
128,Which is the birth place of Edward Lambert?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Edward Lambert"",""i"")) . }",true
129,Which is the birth place of Edwin Boyd Johnson?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Edwin Boyd Johnson"",""i"")) . }",true
130,Which is the birth place of Elaine de Kooning?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Elaine de Kooning"",""i"")) . }",true
131,Which is the birth place of Elisabetta Sirani?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Elisabetta Sirani"",""i"")) . }",true
132,Which is the birth place of Elizabeth Saltonstall?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Elizabeth Saltonstall"",""i"")) . }",true
133,Which is the birth place of Ellen Sharples?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ellen Sharples"",""i"")) . }",true
134,Which is the birth place of Elliott Thompson?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Elliott Thompson"",""i"")) . }",true
135,Which is the birth place of Ellsworth Young?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ellsworth Young"",""i"")) . }",true
136,Which is the birth place of Eluid Levi Martinez?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Eluid Levi Martinez"",""i"")) . }",true
137,Which is the birth place of Emile Auguste Carolus-Duran?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Emile Auguste Carolus\\-Duran"",""i"")) . }",true
138,Which is the birth place of Emile Gallé?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Emile Gallé"",""i"")) . }",true
139,Which is the birth place of Emmett Edwards?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Emmett Edwards"",""i"")) . }",true
140,Which is the birth place of Enrico Glicenstein?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Enrico Glicenstein"",""i"")) . }",true
141,Which is the birth place of Erik Gronborg?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Erik Gronborg"",""i"")) . }",true
142,Which is the birth place of Ernest Briggs?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ernest Briggs"",""i"")) . }",true
143,Which is the birth place of Ernest D. Roth?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ernest D\\. Roth"",""i"")) . }",true
144,Which is the birth place of Ernest Fiene?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ernest Fiene"",""i"")) . }",true
145,Which is the birth place of Ernst Halberstadt?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ernst Halberstadt"",""i"")) . }",true
146,Which is the birth place of Esther Blaikie MacKinnon?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Esther Blaikie MacKinnon"",""i"")) . }",true
147,Which is the birth place of Esther Louise Peck Newton?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Esther Louise Peck Newton"",""i"")) . }",true
148,Which is the birth place of Ethelyn Cosby Stewart?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ethelyn Cosby Stewart"",""i"")) . }",true
149,Which is the birth place of Eugene C. Fitsch?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Eugene C\\. Fitsch"",""i"")) . }",true
150,Which is the birth place of Eugene James Faber?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Eugene James Faber"",""i"")) . }",true
151,Which is the birth place of Eugenio Landesio?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Eugenio Landesio"",""i"")) . }",true
152,Which is the birth place of Eyre de Lanux?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Eyre de Lanux"",""i"")) . }",true
153,Which is the birth place of F. Luis Mora?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""F\\. Luis Mora"",""i"")) . }",true
154,Which is the birth place of Fay Chong?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Fay Chong"",""i"")) . }",true
155,Which is the birth place of Ferdinand Pettrich?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ferdinand Pettrich"",""i"")) . }",true
156,Which is the birth place of Ferol Sibley Warthen?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ferol Sibley Warthen"",""i"")) . }",true
157,Which is the birth place of Frances Felten?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frances Felten"",""i"")) . }",true
158,Which is the birth place of Frances H. Gearhart?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frances H\\. Gearhart"",""i"")) . }",true
159,Which is the birth place of Frances Higgins?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frances Higgins"",""i"")) . }",true
160,Which is the birth place of Francis Kearny?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Francis Kearny"",""i"")) . }",true
161,Which is the birth place of Francis Scott King?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Francis Scott King"",""i"")) . }",true
162,Which is the birth place of Francois Vivares?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Francois Vivares"",""i"")) . }",true
163,Which is the birth place of Frank Armstrong?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frank Armstrong"",""i"")) . }",true
164,Which is the birth place of Frank Bergman?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frank Bergman"",""i"")) . }",true
165,Which is the birth place of Frank French?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frank French"",""i"")) . }",true
166,Which is the birth place of Frank Stella?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frank Stella"",""i"")) . }",true
167,Which is the birth place of Frans Wildenhain?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frans Wildenhain"",""i"")) . }",true
168,Which is the birth place of Françoise Grossen?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Françoise Grossen"",""i"")) . }",true
169,Which is the birth place of Fred Genis?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Fred Genis"",""i"")) . }",true
170,Which is the birth place of Fred Shane?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Fred Shane"",""i"")) . }",true
171,Which is the birth place of Frederic Marvin?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frederic Marvin"",""i"")) . }",true
172,Which is the birth place of Frederick Franck?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frederick Franck"",""i"")) . }",true
173,Which is the birth place of Frederick Langenheim?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frederick Langenheim"",""i"")) . }",true
174,Which is the birth place of Frederick W. Harer?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frederick W\\. Harer"",""i"")) . }",true
175,Which is the birth place of Félix López?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Félix López"",""i"")) . }",true
176,Which is the birth place of Gayleen Aiken?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Gayleen Aiken"",""i"")) . }",true
177,Which is the birth place of Genichiro Inokuma?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Genichiro Inokuma"",""i"")) . }",true
178,Which is the birth place of George A. Tice?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""George A\\. Tice"",""i"")) . }",true
179,Which is the birth place of George Fuller?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""George Fuller"",""i"")) . }",true
180,Which is the birth place of George Inness?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""George Inness"",""i"")) . }",true
181,Which is the birth place of George Rickey?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""George Rickey"",""i"")) . }",true
182,Which is the birth place of George Snow Hill?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""George Snow Hill"",""i"")) . }",true
183,Which is the birth place of George T. Morgan?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""George T\\. Morgan"",""i"")) . }",true
184,"Which is the birth place of Giacomo Palma, the younger?"," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Giacomo Palma\\, the younger"",""i"")) . }",true
185,Which is the birth place of Gil Smith?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Gil Smith"",""i"")) . }",true
186,Which is the birth place of Gilbert Gaul?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Gilbert Gaul"",""i"")) . }",true
187,Which is the birth place of Gilbert Stuart Newton?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Gilbert Stuart Newton"",""i"")) . }",true
188,Which is the birth place of Giuseppe Cesari?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Giuseppe Cesari"",""i"")) . }",true
189,Which is the birth place of Grant Mudford?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Grant Mudford"",""i"")) . }",true
190,Which is the birth place of Gregory Conniff?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Gregory Conniff"",""i"")) . }",true
191,Which is the birth place of Gustave Baumann?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Gustave Baumann"",""i"")) . }",true
192,Which is the birth place of Gustave Klumpp?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Gustave Klumpp"",""i"")) . }",true
193,Which is the birth place of Gwendolyn A. Magee?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Gwendolyn A\\. Magee"",""i"")) . }",true
194,Which is the birth place of Gwendolyn A. Magee?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Gwendolyn A\\. Magee"",""i"")) . }",true
195,Which is the birth place of H. Willard Ortlip?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""H\\. Willard Ortlip"",""i"")) . }",true
196,Which is the birth place of Hans Haacke?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Hans Haacke"",""i"")) . }",true
197,Which is the birth place of Hans Jelinek?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Hans Jelinek"",""i"")) . }",true
198,Which is the birth place of Harold Emerson Keeler?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Harold Emerson Keeler"",""i"")) . }",true
199,Which is the birth place of Harold Faye?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Harold Faye"",""i"")) . }",true
200,Which is the birth place of Harry W. Scheuch?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Harry W\\. Scheuch"",""i"")) . }",true
201,Which is the birth place of Haskell Coffin?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Haskell Coffin"",""i"")) . }",true
202,Which is the birth place of Helen Gerardia?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Helen Gerardia"",""i"")) . }",true
203,Which is the birth place of Helen West Heller?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Helen West Heller"",""i"")) . }",true
204,Which is the birth place of Helene Sardeau?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Helene Sardeau"",""i"")) . }",true
205,Which is the birth place of Henner Schröder?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Henner Schröder"",""i"")) . }",true
206,Which is the birth place of Henri Martin?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Henri Martin"",""i"")) . }",true
207,Which is the birth place of Henry Colton Shumway?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Henry Colton Shumway"",""i"")) . }",true
208,Which is the birth place of Henry Otto Wix?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Henry Otto Wix"",""i"")) . }",true
209,Which is the birth place of Herbert Singleton?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Herbert Singleton"",""i"")) . }",true
210,Which is the birth place of Hermann Herzog?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Hermann Herzog"",""i"")) . }",true
211,Which is the birth place of Hermann J. Meyer?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Hermann J\\. Meyer"",""i"")) . }",true
212,Which is the birth place of Herschel Elarth?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Herschel Elarth"",""i"")) . }",true
213,Which is the birth place of Hideaki Miyamura?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Hideaki Miyamura"",""i"")) . }",true
214,Which is the birth place of Hildegarde Haas?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Hildegarde Haas"",""i"")) . }",true
215,Which is the birth place of Hollis Holbrook?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Hollis Holbrook"",""i"")) . }",true
216,Which is the birth place of Horace Pippin?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Horace Pippin"",""i"")) . }",true
217,Which is the birth place of Hyman Katz?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Hyman Katz"",""i"")) . }",true
218,Which is the birth place of Ida Kohlmeyer?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ida Kohlmeyer"",""i"")) . }",true
219,Which is the birth place of Ilah Marian Kibbey?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ilah Marian Kibbey"",""i"")) . }",true
220,Which is the birth place of Ingeborg Gerdes?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ingeborg Gerdes"",""i"")) . }",true
221,Which is the birth place of J. Paul Fennell?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""J\\. Paul Fennell"",""i"")) . }",true
222,Which is the birth place of Jackson Pollock?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jackson Pollock"",""i"")) . }",true
223,Which is the birth place of Jacob Frymire?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jacob Frymire"",""i"")) . }",true
224,Which is the birth place of Jacob van Strij?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jacob van Strij"",""i"")) . }",true
225,Which is the birth place of Jacquelyn Rice?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jacquelyn Rice"",""i"")) . }",true
226,Which is the birth place of James Auchiah?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James Auchiah"",""i"")) . }",true
227,Which is the birth place of James D. Butler?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James D\\. Butler"",""i"")) . }",true
228,Which is the birth place of James Forbes?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James Forbes"",""i"")) . }",true
229,Which is the birth place of James Gill?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James Gill"",""i"")) . }",true
230,Which is the birth place of James Hamilton?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James Hamilton"",""i"")) . }",true
231,Which is the birth place of James Holmes?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James Holmes"",""i"")) . }",true
232,Which is the birth place of James L. Enyeart?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James L\\. Enyeart"",""i"")) . }",true
233,Which is the birth place of James Lawton?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James Lawton"",""i"")) . }",true
234,Which is the birth place of James M. Haughey?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James M\\. Haughey"",""i"")) . }",true
235,Which is the birth place of James W. Williams?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James W\\. Williams"",""i"")) . }",true
236,Which is the birth place of James Wallace Buchman?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James Wallace Buchman"",""i"")) . }",true
237,Which is the birth place of James Wellstood?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James Wellstood"",""i"")) . }",true
238,Which is the birth place of Jane Marie Logemann?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jane Marie Logemann"",""i"")) . }",true
239,Which is the birth place of Janet E. Turner?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Janet E\\. Turner"",""i"")) . }",true
240,Which is the birth place of Jay S. Dunitz?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jay S\\. Dunitz"",""i"")) . }",true
241,Which is the birth place of Jay Wilson?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jay Wilson"",""i"")) . }",true
242,Which is the birth place of Jean Paul Laurens?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jean Paul Laurens"",""i"")) . }",true
243,Which is the birth place of Jeffrey Clancy?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jeffrey Clancy"",""i"")) . }",true
244,Which is the birth place of Jennifer McCurdy?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jennifer McCurdy"",""i"")) . }",true
245,Which is the birth place of Jennifer Trask?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jennifer Trask"",""i"")) . }",true
246,Which is the birth place of Jesús Moroles?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jesús Moroles"",""i"")) . }",true
247,Which is the birth place of Jody Klein?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jody Klein"",""i"")) . }",true
248,Which is the birth place of Johann Leonhard Appold?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Johann Leonhard Appold"",""i"")) . }",true
249,Which is the birth place of John Adams Elder?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Adams Elder"",""i"")) . }",true
250,Which is the birth place of John C. Johansen?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John C\\. Johansen"",""i"")) . }",true
251,Which is the birth place of John Crookshanks King?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Crookshanks King"",""i"")) . }",true
252,Which is the birth place of John Grazier?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Grazier"",""i"")) . }",true
253,Which is the birth place of John Iversen?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Iversen"",""i"")) . }",true
254,Which is the birth place of John Leighton?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Leighton"",""i"")) . }",true
255,Which is the birth place of John Saccaro?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Saccaro"",""i"")) . }",true
256,Which is the birth place of John Salt?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Salt"",""i"")) . }",true
257,Which is the birth place of John Samuel Agar?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Samuel Agar"",""i"")) . }",true
258,Which is the birth place of John Satterfield?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Satterfield"",""i"")) . }",true
259,Which is the birth place of John Scott?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Scott"",""i"")) . }",true
260,Which is the birth place of John Sebastien Miller?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Sebastien Miller"",""i"")) . }",true
261,Which is the birth place of John T. Bowen?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John T\\. Bowen"",""i"")) . }",true
262,Which is the birth place of John William Gear?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John William Gear"",""i"")) . }",true
263,Which is the birth place of John Woodin?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Woodin"",""i"")) . }",true
264,Which is the birth place of Josef Israëls?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Josef Israëls"",""i"")) . }",true
265,Which is the birth place of Joseph Binder?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Joseph Binder"",""i"")) . }",true
266,Which is the birth place of Joseph Kantor?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Joseph Kantor"",""i"")) . }",true
267,Which is the birth place of Joseph Konzal?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Joseph Konzal"",""i"")) . }",true
268,Which is the birth place of Joyce Kozloff?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Joyce Kozloff"",""i"")) . }",true
269,Which is the birth place of Juan Buckingham Wandesforde?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Juan Buckingham Wandesforde"",""i"")) . }",true
270,Which is the birth place of Juan Downey?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Juan Downey"",""i"")) . }",true
271,Which is the birth place of Jules Dupré?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jules Dupré"",""i"")) . }",true
272,Which is the birth place of Jules Edouard Roiné?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jules Edouard Roiné"",""i"")) . }",true
273,Which is the birth place of Jules Lion?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jules Lion"",""i"")) . }",true
274,Which is the birth place of K. Lee Manuel?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""K\\. Lee Manuel"",""i"")) . }",true
275,Which is the birth place of Karin Birch?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Karin Birch"",""i"")) . }",true
276,Which is the birth place of Karl Kelpe?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Karl Kelpe"",""i"")) . }",true
277,Which is the birth place of Katherine Merrill?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Katherine Merrill"",""i"")) . }",true
278,Which is the birth place of Katja Oxman?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Katja Oxman"",""i"")) . }",true
279,Which is the birth place of Kazuko?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Kazuko"",""i"")) . }",true
280,Which is the birth place of Kee-Ho Yuen?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Kee\\-Ho Yuen"",""i"")) . }",true
281,Which is the birth place of Keisuke Mizuno?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Keisuke Mizuno"",""i"")) . }",true
282,Which is the birth place of Keith Martin?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Keith Martin"",""i"")) . }",true
283,Which is the birth place of Ken Gonzales-Day?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ken Gonzales\\-Day"",""i"")) . }",true
284,Which is the birth place of Ken Graves?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ken Graves"",""i"")) . }",true
285,Which is the birth place of Kenneth C. Holmes?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Kenneth C\\. Holmes"",""i"")) . }",true
286,Which is the birth place of L. A. Shafer?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""L\\. A\\. Shafer"",""i"")) . }",true
287,Which is the birth place of L.J. Roberts?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""L\\.J\\. Roberts"",""i"")) . }",true
288,Which is the birth place of Laddie John Dill?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Laddie John Dill"",""i"")) . }",true
289,Which is the birth place of Larry Thomas?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Larry Thomas"",""i"")) . }",true
290,Which is the birth place of LeRoy Neiman?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""LeRoy Neiman"",""i"")) . }",true
291,Which is the birth place of Leon Kelly?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Leon Kelly"",""i"")) . }",true
292,Which is the birth place of Leonard Maurer?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Leonard Maurer"",""i"")) . }",true
293,Which is the birth place of Lester Beall?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lester Beall"",""i"")) . }",true
294,Which is the birth place of Lester E. Varian?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lester E\\. Varian"",""i"")) . }",true
295,Which is the birth place of Lewis W. Hine?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lewis W\\. Hine"",""i"")) . }",true
296,Which is the birth place of Lilo Raymond?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lilo Raymond"",""i"")) . }",true
297,Which is the birth place of Lisette Model?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lisette Model"",""i"")) . }",true
298,Which is the birth place of Lloyd C. Foltz?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lloyd C\\. Foltz"",""i"")) . }",true
299,Which is the birth place of Lois M. Johnson?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lois M\\. Johnson"",""i"")) . }",true
300,Which is the birth place of Lori Nix?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lori Nix"",""i"")) . }",true
301,Which is the birth place of Louis Abel Truchet?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Louis Abel Truchet"",""i"")) . }",true
302,Which is the birth place of Louis M. Eilshemius?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Louis M\\. Eilshemius"",""i"")) . }",true
303,Which is the birth place of Lucio Pozzi?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lucio Pozzi"",""i"")) . }",true
304,Which is the birth place of Ludolf Backhuysen?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ludolf Backhuysen"",""i"")) . }",true
305,Which is the birth place of Luigi Rist?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Luigi Rist"",""i"")) . }",true
306,Which is the birth place of Luis Cruz Azaceta?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Luis Cruz Azaceta"",""i"")) . }",true
307,Which is the birth place of Lydia Field Emmet?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lydia Field Emmet"",""i"")) . }",true
308,Which is the birth place of Lynda Benglis?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lynda Benglis"",""i"")) . }",true
309,Which is the birth place of Léo Laporte Blairsy?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Léo Laporte Blairsy"",""i"")) . }",true
310,Which is the birth place of M. A. Honeywell?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""M\\. A\\. Honeywell"",""i"")) . }",true
311,Which is the birth place of M. W. Hopkins?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""M\\. W\\. Hopkins"",""i"")) . }",true
312,Which is the birth place of Macowin Tuttle?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Macowin Tuttle"",""i"")) . }",true
313,Which is the birth place of Marc Swanson?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Marc Swanson"",""i"")) . }",true
314,Which is the birth place of Margaret Foley?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Margaret Foley"",""i"")) . }",true
315,Which is the birth place of Margaret H. Wright?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Margaret H\\. Wright"",""i"")) . }",true
316,Which is the birth place of Margaret Hluch?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Margaret Hluch"",""i"")) . }",true
317,Which is the birth place of Margo Hoff?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Margo Hoff"",""i"")) . }",true
318,Which is the birth place of Maria Martinez?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Maria Martinez"",""i"")) . }",true
319,Which is the birth place of Mario Carreno?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mario Carreno"",""i"")) . }",true
320,Which is the birth place of Marion A. Epting?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Marion A\\. Epting"",""i"")) . }",true
321,Which is the birth place of Marion Hildebrandt?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Marion Hildebrandt"",""i"")) . }",true
322,Which is the birth place of Mark Burns?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mark Burns"",""i"")) . }",true
323,Which is the birth place of Mark Rothko?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mark Rothko"",""i"")) . }",true
324,Which is the birth place of Martin Johnson Heade?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Martin Johnson Heade"",""i"")) . }",true
325,Which is the birth place of Martin Stupich?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Martin Stupich"",""i"")) . }",true
326,Which is the birth place of Mary Carroll?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mary Carroll"",""i"")) . }",true
327,Which is the birth place of Mary Douglas?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mary Douglas"",""i"")) . }",true
328,Which is the birth place of Mary Grigoriadis?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mary Grigoriadis"",""i"")) . }",true
329,Which is the birth place of Mary Mullineux?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mary Mullineux"",""i"")) . }",true
330,Which is the birth place of Mary Roehm?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mary Roehm"",""i"")) . }",true
331,Which is the birth place of Mary Shaffer?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mary Shaffer"",""i"")) . }",true
332,Which is the birth place of Mary Van Cline?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mary Van Cline"",""i"")) . }",true
333,Which is the birth place of María Martínez-Cañas?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""María Martínez\\-Cañas"",""i"")) . }",true
334,Which is the birth place of Masuo Ikeda?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Masuo Ikeda"",""i"")) . }",true
335,Which is the birth place of Masuo Ojima?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Masuo Ojima"",""i"")) . }",true
336,Which is the birth place of Matsumi Kanemitsu?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Matsumi Kanemitsu"",""i"")) . }",true
337,Which is the birth place of Mattie Lou O'Kelley?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mattie Lou O\\'Kelley"",""i"")) . }",true
338,Which is the birth place of Maurice Golubov?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Maurice Golubov"",""i"")) . }",true
339,Which is the birth place of Max Bachofen?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Max Bachofen"",""i"")) . }",true
340,Which is the birth place of Max Weber?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Max Weber"",""i"")) . }",true
341,Which is the birth place of Maximilian Rainer Facklam?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Maximilian Rainer Facklam"",""i"")) . }",true
342,Which is the birth place of May Gearhart?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""May Gearhart"",""i"")) . }",true
343,Which is the birth place of Maybelle Stamper?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Maybelle Stamper"",""i"")) . }",true
344,Which is the birth place of Mel Ramos?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mel Ramos"",""i"")) . }",true
345,Which is the birth place of Melissa Mayer Galbraith?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Melissa Mayer Galbraith"",""i"")) . }",true
346,Which is the birth place of Merry Moor Winnett?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Merry Moor Winnett"",""i"")) . }",true
347,Which is the birth place of Meyer Wolfe?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Meyer Wolfe"",""i"")) . }",true
348,Which is the birth place of Michael Davis?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Michael Davis"",""i"")) . }",true
349,Which is the birth place of Michael Lantz?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Michael Lantz"",""i"")) . }",true
350,Which is the birth place of Michelle Grabner?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Michelle Grabner"",""i"")) . }",true
351,Which is the birth place of Milton Avery?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Milton Avery"",""i"")) . }",true
352,Which is the birth place of Minnette Lehmann?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Minnette Lehmann"",""i"")) . }",true
353,Which is the birth place of Mitchell Jamieson?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mitchell Jamieson"",""i"")) . }",true
354,Which is the birth place of Mong Q. Lee?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mong Q\\. Lee"",""i"")) . }",true
355,Which is the birth place of Morris Henry Hobbs?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Morris Henry Hobbs"",""i"")) . }",true
356,Which is the birth place of Morton Kaish?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Morton Kaish"",""i"")) . }",true
357,Which is the birth place of Nan Watson?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Nan Watson"",""i"")) . }",true
358,Which is the birth place of Nicholas Africano?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Nicholas Africano"",""i"")) . }",true
359,Which is the birth place of Niels Borch Jensen?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Niels Borch Jensen"",""i"")) . }",true
360,Which is the birth place of Niles Spencer?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Niles Spencer"",""i"")) . }",true
361,Which is the birth place of Norio Azuma?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Norio Azuma"",""i"")) . }",true
362,Which is the birth place of Norman Kohlhepp?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Norman Kohlhepp"",""i"")) . }",true
363,Which is the birth place of Nura?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Nura"",""i"")) . }",true
364,Which is the birth place of O. Louis Guglielmi?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""O\\. Louis Guglielmi"",""i"")) . }",true
365,Which is the birth place of Olin Dows?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Olin Dows"",""i"")) . }",true
366,Which is the birth place of Oscar R. Castillo?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Oscar R\\. Castillo"",""i"")) . }",true
367,Which is the birth place of Otis Dozier?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Otis Dozier"",""i"")) . }",true
368,Which is the birth place of Otto Natzler?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Otto Natzler"",""i"")) . }",true
369,Which is the birth place of Owen Garde?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Owen Garde"",""i"")) . }",true
370,Which is the birth place of Oyvind Fahlstrom?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Oyvind Fahlstrom"",""i"")) . }",true
371,Which is the birth place of P. E. Stroëhling?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""P\\. E\\. Stroëhling"",""i"")) . }",true
372,Which is the birth place of Pamela Colman Smith?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Pamela Colman Smith"",""i"")) . }",true
373,Which is the birth place of Pat Steir?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Pat Steir"",""i"")) . }",true
374,Which is the birth place of Patricia Nix?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Patricia Nix"",""i"")) . }",true
375,Which is the birth place of Patricia Tobacco Forrester?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Patricia Tobacco Forrester"",""i"")) . }",true
376,Which is the birth place of Paul Albert Baudouin?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Paul Albert Baudouin"",""i"")) . }",true
377,Which is the birth place of Paul Chabas?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Paul Chabas"",""i"")) . }",true
378,Which is the birth place of Paul Heald?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Paul Heald"",""i"")) . }",true
379,Which is the birth place of Paul J. Grellert?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Paul J\\. Grellert"",""i"")) . }",true
380,Which is the birth place of Paul Kelpe?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Paul Kelpe"",""i"")) . }",true
381,Which is the birth place of Paul Laessle?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Paul Laessle"",""i"")) . }",true
382,Which is the birth place of Paul McCarthy?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Paul McCarthy"",""i"")) . }",true
383,Which is the birth place of Phil Brown?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Phil Brown"",""i"")) . }",true
384,Which is the birth place of Pierre Troubetzkoy?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Pierre Troubetzkoy"",""i"")) . }",true
385,Which is the birth place of Pino Janni?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Pino Janni"",""i"")) . }",true
386,Which is the birth place of Priscilla Roberts?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Priscilla Roberts"",""i"")) . }",true
387,Which is the birth place of Ralph E. Eckerstrom?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ralph E\\. Eckerstrom"",""i"")) . }",true
388,Which is the birth place of Ramón José López?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ramón José López"",""i"")) . }",true
389,Which is the birth place of Randy J. Johnston?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Randy J\\. Johnston"",""i"")) . }",true
390,Which is the birth place of Ray E. George?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ray E\\. George"",""i"")) . }",true
391,Which is the birth place of Ray H. French?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ray H\\. French"",""i"")) . }",true
392,Which is the birth place of Ray K. Metzker?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ray K\\. Metzker"",""i"")) . }",true
393,Which is the birth place of Red Weldon Sandlin?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Red Weldon Sandlin"",""i"")) . }",true
394,Which is the birth place of Rembrandt Peale?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Rembrandt Peale"",""i"")) . }",true
395,Which is the birth place of Renee Margolin?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Renee Margolin"",""i"")) . }",true
396,Which is the birth place of Rex Clawson?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Rex Clawson"",""i"")) . }",true
397,Which is the birth place of Richard George Mathews?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Richard George Mathews"",""i"")) . }",true
398,Which is the birth place of Richard Landis?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Richard Landis"",""i"")) . }",true
399,Which is the birth place of Rick Wrigley?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Rick Wrigley"",""i"")) . }",true
400,Which is the birth place of Robert A. Nelson?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert A\\. Nelson"",""i"")) . }",true
401,Which is the birth place of Robert Cato?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert Cato"",""i"")) . }",true
402,Which is the birth place of Robert Disraeli?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert Disraeli"",""i"")) . }",true
403,Which is the birth place of Robert Feke?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert Feke"",""i"")) . }",true
404,Which is the birth place of Robert Goodnough?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert Goodnough"",""i"")) . }",true
405,"Which is the birth place of Robert Havell, Jr.?"," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert Havell\\, Jr\\."",""i"")) . }",true
406,Which is the birth place of Robert Indiana?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert Indiana"",""i"")) . }",true
407,Which is the birth place of Robert Ladbrooke?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert Ladbrooke"",""i"")) . }",true
408,Which is the birth place of Robert Lee Eskridge?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert Lee Eskridge"",""i"")) . }",true
409,Which is the birth place of Robert ParkeHarrison?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert ParkeHarrison"",""i"")) . }",true
410,Which is the birth place of Robert Reid?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert Reid"",""i"")) . }",true
411,Which is the birth place of Roger D. Corsaw?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Roger D\\. Corsaw"",""i"")) . }",true
412,Which is the birth place of Romuald Kraus?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Romuald Kraus"",""i"")) . }",true
413,Which is the birth place of Ron Davis?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ron Davis"",""i"")) . }",true
414,Which is the birth place of Ronald Bladen?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ronald Bladen"",""i"")) . }",true
415,Which is the birth place of Rosa Bonheur?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Rosa Bonheur"",""i"")) . }",true
416,Which is the birth place of Rudy Ayoroa?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Rudy Ayoroa"",""i"")) . }",true
417,Which is the birth place of Rupert D. Turnbull?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Rupert D\\. Turnbull"",""i"")) . }",true
418,Which is the birth place of Russell Smoky Brown?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Russell Smoky Brown"",""i"")) . }",true
419,Which is the birth place of Ruth Chaney?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ruth Chaney"",""i"")) . }",true
420,Which is the birth place of Ruth Eckstein?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ruth Eckstein"",""i"")) . }",true
421,Which is the birth place of Ruth Grotenrath?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ruth Grotenrath"",""i"")) . }",true
422,Which is the birth place of Ruth Starr Rose?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ruth Starr Rose"",""i"")) . }",true
423,Which is the birth place of Régis François Gignoux?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Régis François Gignoux"",""i"")) . }",true
424,Which is the birth place of S. C. Baker?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""S\\. C\\. Baker"",""i"")) . }",true
425,Which is the birth place of Sallie Curb Arnold?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Sallie Curb Arnold"",""i"")) . }",true
426,Which is the birth place of Sam Gilliam?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Sam Gilliam"",""i"")) . }",true
427,Which is the birth place of Samuel Halpert?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Samuel Halpert"",""i"")) . }",true
428,Which is the birth place of Samuel M. Green?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Samuel M\\. Green"",""i"")) . }",true
429,Which is the birth place of Samuel Valentine Hunt?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Samuel Valentine Hunt"",""i"")) . }",true
430,Which is the birth place of Sarah Berman?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Sarah Berman"",""i"")) . }",true
431,Which is the birth place of Sarah Charlesworth?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Sarah Charlesworth"",""i"")) . }",true
432,Which is the birth place of Sarah Goodridge?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Sarah Goodridge"",""i"")) . }",true
433,Which is the birth place of Saul Berman?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Saul Berman"",""i"")) . }",true
434,Which is the birth place of Scott Hyde?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Scott Hyde"",""i"")) . }",true
435,Which is the birth place of Sean Scully?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Sean Scully"",""i"")) . }",true
436,Which is the birth place of Simon Sparrow?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Simon Sparrow"",""i"")) . }",true
437,Which is the birth place of Sir John Watson Gordon?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Sir John Watson Gordon"",""i"")) . }",true
438,Which is the birth place of Stanley Edwards?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Stanley Edwards"",""i"")) . }",true
439,Which is the birth place of Steve Ashby?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Steve Ashby"",""i"")) . }",true
440,Which is the birth place of Steve Szabo?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Steve Szabo"",""i"")) . }",true
441,Which is the birth place of Steven K. Roberts?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Steven K\\. Roberts"",""i"")) . }",true
442,Which is the birth place of Suzanne Klotz?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Suzanne Klotz"",""i"")) . }",true
443,Which is the birth place of T. L. Solien?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""T\\. L\\. Solien"",""i"")) . }",true
444,Which is the birth place of Tami Kegley?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Tami Kegley"",""i"")) . }",true
445,Which is the birth place of Tamiji Kitagawa?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Tamiji Kitagawa"",""i"")) . }",true
446,Which is the birth place of Ted Kuykendall?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ted Kuykendall"",""i"")) . }",true
447,Which is the birth place of Terry Evans?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Terry Evans"",""i"")) . }",true
448,Which is the birth place of Terry Gips?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Terry Gips"",""i"")) . }",true
449,Which is the birth place of Theo Hios?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Theo Hios"",""i"")) . }",true
450,Which is the birth place of Theodore Augustus Mills?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Theodore Augustus Mills"",""i"")) . }",true
451,Which is the birth place of Thomas Austen Brown?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Thomas Austen Brown"",""i"")) . }",true
452,Which is the birth place of Thomas Ball?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Thomas Ball"",""i"")) . }",true
453,Which is the birth place of Thomas Barker?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Thomas Barker"",""i"")) . }",true
454,Which is the birth place of Thomas D. Rogers?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Thomas D\\. Rogers"",""i"")) . }",true
455,Which is the birth place of Thomas Gainsborough?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Thomas Gainsborough"",""i"")) . }",true
456,Which is the birth place of Thomas Hewes Hinckley?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Thomas Hewes Hinckley"",""i"")) . }",true
457,Which is the birth place of Thomas Hicks?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Thomas Hicks"",""i"")) . }",true
458,Which is the birth place of Thomas Michael Savage?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Thomas Michael Savage"",""i"")) . }",true
459,Which is the birth place of Thomas S. Baker?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Thomas S\\. Baker"",""i"")) . }",true
460,Which is the birth place of Théo Kerg?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Théo Kerg"",""i"")) . }",true
461,Which is the birth place of Todd Walker?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Todd Walker"",""i"")) . }",true
462,Which is the birth place of Tom Green?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Tom Green"",""i"")) . }",true
463,Which is the birth place of Tom Joyce?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Tom Joyce"",""i"")) . }",true
464,Which is the birth place of Tom Millea?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Tom Millea"",""i"")) . }",true
465,Which is the birth place of Tom Patti?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Tom Patti"",""i"")) . }",true
466,Which is the birth place of Tony Berlant?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Tony Berlant"",""i"")) . }",true
467,Which is the birth place of Tony Carretta?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Tony Carretta"",""i"")) . }",true
468,Which is the birth place of Torin Richards?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Torin Richards"",""i"")) . }",true
469,Which is the birth place of Townend Glover?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Townend Glover"",""i"")) . }",true
470,Which is the birth place of Truman Howe Bartlett?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Truman Howe Bartlett"",""i"")) . }",true
471,Which is the birth place of Vera Klement?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Vera Klement"",""i"")) . }",true
472,Which is the birth place of Victor Justice Evans?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Victor Justice Evans"",""i"")) . }",true
473,Which is the birth place of Virginia R. Harris?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Virginia R\\. Harris"",""i"")) . }",true
474,Which is the birth place of Wade Hampton McVay?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Wade Hampton McVay"",""i"")) . }",true
475,Which is the birth place of Walter Beach Humphrey?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Walter Beach Humphrey"",""i"")) . }",true
476,Which is the birth place of Walter Beck?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Walter Beck"",""i"")) . }",true
477,Which is the birth place of Walter Granville-Smith?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Walter Granville\\-Smith"",""i"")) . }",true
478,Which is the birth place of Walter Ingalls?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Walter Ingalls"",""i"")) . }",true
479,Which is the birth place of Walter Robertson?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Walter Robertson"",""i"")) . }",true
480,Which is the birth place of Walter Ufer?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Walter Ufer"",""i"")) . }",true
481,Which is the birth place of Wanda Gág?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Wanda Gág"",""i"")) . }",true
482,Which is the birth place of Wayne Healy?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Wayne Healy"",""i"")) . }",true
483,Which is the birth place of Werner Groshans?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Werner Groshans"",""i"")) . }",true
484,Which is the birth place of Wilfrid Zogbaum?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Wilfrid Zogbaum"",""i"")) . }",true
485,Which is the birth place of Will Barnet?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Will Barnet"",""i"")) . }",true
486,Which is the birth place of William Bache?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William Bache"",""i"")) . }",true
487,Which is the birth place of William Bailey?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William Bailey"",""i"")) . }",true
488,Which is the birth place of William Charles?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William Charles"",""i"")) . }",true
489,Which is the birth place of William Eggleston?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William Eggleston"",""i"")) . }",true
490,Which is the birth place of William Gebhardt?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William Gebhardt"",""i"")) . }",true
491,Which is the birth place of William H. Jackson?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William H\\. Jackson"",""i"")) . }",true
492,Which is the birth place of William K. Greiner?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William K\\. Greiner"",""i"")) . }",true
493,Which is the birth place of William L. Garver?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William L\\. Garver"",""i"")) . }",true
494,Which is the birth place of William Langenheim?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William Langenheim"",""i"")) . }",true
495,Which is the birth place of William Leslie?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William Leslie"",""i"")) . }",true
496,Which is the birth place of William Wellstood?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William Wellstood"",""i"")) . }",true
497,Which is the birth place of Xavier González?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Xavier González"",""i"")) . }",true
498,Which is the birth place of Xavier Martinez?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Xavier Martinez"",""i"")) . }",true
499,Which is the birth place of Yun Gee?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Yun Gee"",""i"")) . }",true
500,Which is the birth place of Yusaku Kamekura?," X1-be-is-null,X2-which-Which-null,X4-Peter-Peter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Yusaku Kamekura"",""i"")) . }",true
