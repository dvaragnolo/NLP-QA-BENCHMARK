Id," ""Who is the creator of Last Tree?"""," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Last Tree"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
1,Question,partialDRS,Solution,Gen Query,Gen.contains(Man)
2,Who is the creator of A Delightful Evening?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""A Delightful Evening"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
3,Who is the creator of A Homeless Victim of War?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""A Homeless Victim of War"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
4,Who is the creator of A Hunger Fantasy?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""A Hunger Fantasy"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
5,Who is the creator of A New England Scene?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""A New England Scene"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
6,Who is the creator of A Note in Pattern?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""A Note in Pattern"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
7,Who is the creator of A Pine Tree?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""A Pine Tree"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
8,Who is the creator of A Reading?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""A Reading"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
9,Who is the creator of A Song?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""A Song"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
10,Who is the creator of A Southerly Wind?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""A Southerly Wind"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
11,Who is the creator of A Straight Betwixt Two?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""A Straight Betwixt Two"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
12,Who is the creator of A Tribute to Julius Forstmann?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""A Tribute to Julius Forstmann"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
13,Who is the creator of A. Laurason?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""A\\. Laurason"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
14,Who is the creator of AUDIO ANDRE TUXEDO STYLED?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""AUDIO ANDRE TUXEDO STYLED"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
15,Who is the creator of Aanakin?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Aanakin"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
16,Who is the creator of Abstract Still Life?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Abstract Still Life"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
17,Who is the creator of Acteon?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Acteon"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
18,Who is the creator of Adieu?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Adieu"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
19,Who is the creator of Aerodynamics?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Aerodynamics"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
20,Who is the creator of African Head Carving?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""African Head Carving"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
21,Who is the creator of After Dinner?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""After Dinner"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
22,Who is the creator of After Titian?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""After Titian"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
23,Who is the creator of After the Bath?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""After the Bath"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
24,Who is the creator of Ak Sar Ben?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Ak Sar Ben"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
25,Who is the creator of Allegro?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Allegro"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
26,Who is the creator of American Panther and Cubs?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""American Panther and Cubs"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
27,Who is the creator of Amish Family?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Amish Family"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
28,"Who is the creator of Amsterdam Avenue, New York?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Amsterdam Avenue\\, New York"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
29,Who is the creator of Angel Concert?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Angel Concert"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
30,"Who is the creator of Angry Waves, State I?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Angry Waves\\, State I"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
31,Who is the creator of Animal Music for the Spheres?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Animal Music for the Spheres"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
32,Who is the creator of Animal Studies?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Animal Studies"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
33,Who is the creator of Annecy?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Annecy"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
34,"Who is the creator of Aphrodite, reverse?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Aphrodite\\, reverse"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
35,Who is the creator of Apocalypse?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Apocalypse"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
36,Who is the creator of Appian Wall?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Appian Wall"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
37,Who is the creator of Arachne?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Arachne"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
38,Who is the creator of Arrow Makers?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Arrow Makers"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
39,Who is the creator of Artists on WPA?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Artists on WPA"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
40,Who is the creator of Ash Leaf Maple?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Ash Leaf Maple"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
41,Who is the creator of Ashes in the Wind?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Ashes in the Wind"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
42,"Who is the creator of At the Battery, New York?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""At the Battery\\, New York"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
43,Who is the creator of At the Beach?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""At the Beach"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
44,Who is the creator of August Memories?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""August Memories"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
45,Who is the creator of Baldwin's Folly?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Baldwin\\'s Folly"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
46,Who is the creator of Ball Play (La Crosse)?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Ball Play \\(La Crosse\\)"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
47,"Who is the creator of Bangor, Pennsylvania?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Bangor\\, Pennsylvania"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
48,Who is the creator of Bearded Kneeling Male Nude?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Bearded Kneeling Male Nude"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
49,Who is the creator of Beatrice?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Beatrice"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
50,Who is the creator of Bee Mine?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Bee Mine"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
51,Who is the creator of Bel Echo Gruyere?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Bel Echo Gruyere"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
52,Who is the creator of Belt with Jade Carving?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Belt with Jade Carving"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
53,Who is the creator of Beni Hasan?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Beni Hasan"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
54,Who is the creator of Betsy Goodridge?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Betsy Goodridge"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
55,Who is the creator of Between Poses?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Between Poses"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
56,Who is the creator of Beulah Appleton?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Beulah Appleton"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
57,Who is the creator of Bill and Boob McNutt?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Bill and Boob McNutt"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
58,Who is the creator of Black and Grey Toaster?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Black and Grey Toaster"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
59,Who is the creator of Blue Crabs?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Blue Crabs"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
60,Who is the creator of Boat Houses?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Boat Houses"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
61,Who is the creator of Bookkeeper?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Bookkeeper"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
62,"Who is the creator of Boudoir, Chateau de Chaalis?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Boudoir\\, Chateau de Chaalis"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
63,Who is the creator of Bouncing Golf Ball?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Bouncing Golf Ball"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
64,Who is the creator of Bowl (gold)?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Bowl \\(gold\\)"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
65,"Who is the creator of Boxcar, Yellow and Black?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Boxcar\\, Yellow and Black"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
66,Who is the creator of Bricklayer?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Bricklayer"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
67,Who is the creator of Brittany Landscape?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Brittany Landscape"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
68,Who is the creator of Broad Street?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Broad Street"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
69,Who is the creator of Brother Brown?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Brother Brown"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
70,"Who is the creator of Buffalo, Gulf of Nicomedia?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Buffalo\\, Gulf of Nicomedia"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
71,Who is the creator of Bulls?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Bulls"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
72,Who is the creator of Burlesque Show?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Burlesque Show"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
73,Who is the creator of C.W.A. Worker at Key Bridge?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""C\\.W\\.A\\. Worker at Key Bridge"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
74,"Who is the creator of Cake Seller, Constantinople?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Cake Seller\\, Constantinople"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
75,"Who is the creator of Canada, U.S.A., Mexico?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Canada\\, U\\.S\\.A\\.\\, Mexico"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
76,Who is the creator of Canary Yellow?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Canary Yellow"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
77,Who is the creator of Candle in a Vortex of Water?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Candle in a Vortex of Water"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
78,Who is the creator of Captain John Grant?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Captain John Grant"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
79,Who is the creator of Cast of Characters?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Cast of Characters"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
80,Who is the creator of Cast thy Anchor in Heaven?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Cast thy Anchor in Heaven"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
81,Who is the creator of Castle of Corfu?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Castle of Corfu"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
82,Who is the creator of Cathedral of the Redwoods?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Cathedral of the Redwoods"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
83,Who is the creator of Celestial Muse of Ping Pong?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Celestial Muse of Ping Pong"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
84,Who is the creator of Cement Mixer?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Cement Mixer"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
85,Who is the creator of Champ Clark?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Champ Clark"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
86,Who is the creator of Charles White?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Charles White"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
87,"Who is the creator of Chestnut Tree, West Virginia?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Chestnut Tree\\, West Virginia"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
88,Who is the creator of Christmas in Paris?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Christmas in Paris"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
89,Who is the creator of Church on a Hill?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Church on a Hill"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
90,Who is the creator of Cibelle?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Cibelle"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
91,Who is the creator of Classical Landscape?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Classical Landscape"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
92,"Who is the creator of Coast at Monterey, California?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Coast at Monterey\\, California"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
93,"Who is the creator of Cockfight, Santo Domingo?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Cockfight\\, Santo Domingo"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
94,Who is the creator of Cold Day on Cherry Street?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Cold Day on Cherry Street"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
95,Who is the creator of Collecting with Rudi?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Collecting with Rudi"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
96,Who is the creator of Collection of Curious Spoons?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Collection of Curious Spoons"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
97,Who is the creator of Colonel Sanders?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Colonel Sanders"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
98,Who is the creator of Color Needles?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Color Needles"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
99,Who is the creator of Column of Leaves?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Column of Leaves"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
100,Who is the creator of Concord?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Concord"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
101,Who is the creator of Coon Alley?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Coon Alley"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
102,Who is the creator of Cordella?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Cordella"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
103,Who is the creator of Corner of House--Malta?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Corner of House\\-\\-Malta"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
104,Who is the creator of Cosmic Colonies?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Cosmic Colonies"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
105,Who is the creator of Cotopaxi?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Cotopaxi"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
106,"Who is the creator of Couple Dancing, New York?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Couple Dancing\\, New York"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
107,Who is the creator of Crowd?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Crowd"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
108,Who is the creator of Crystal City?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Crystal City"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
109,Who is the creator of Cubist Analysis?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Cubist Analysis"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
110,Who is the creator of Cubist Still Life?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Cubist Still Life"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
111,Who is the creator of Cupric Movement?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Cupric Movement"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
112,Who is the creator of Dag Hammarskjold College?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Dag Hammarskjold College"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
113,Who is the creator of Damascus Costume?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Damascus Costume"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
114,Who is the creator of Dancing Male Figure?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Dancing Male Figure"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
115,"Who is the creator of Danube, an Old Mill?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Danube\\, an Old Mill"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
116,Who is the creator of Dark Blue and Red?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Dark Blue and Red"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
117,Who is the creator of Dark Fold?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Dark Fold"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
118,Who is the creator of Dawn Boy?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Dawn Boy"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
119,"Who is the creator of Deadwood, South Dakota?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Deadwood\\, South Dakota"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
120,Who is the creator of Deep Six?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Deep Six"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
121,Who is the creator of Deserted Well?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Deserted Well"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
122,Who is the creator of Devil Jug?," X1-be-is-null,X2-who-Who-null,X4-Devil Jug-Devil Jug-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Devil Jug,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Devil Jug-Devil Jug-null, X1-subj-X2,X1-obj-X3,X4-has_name-Devil Jug,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Devil Jug, Devil Jug, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Devil Jug, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Devil Jug, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Devil Jug"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
123,Who is the creator of Distant Provincetown?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Distant Provincetown"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
124,Who is the creator of Domed Building with Flags?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Domed Building with Flags"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
125,Who is the creator of Don and Cathy?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Don and Cathy"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
126,Who is the creator of Door at San Michele?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Door at San Michele"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
127,Who is the creator of Down to the Sea Again?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Down to the Sea Again"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
128,Who is the creator of Drake Mallard?," X1-be-is-null,X2-who-Who-null,X4-Drake Mallard-Drake-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Drake Mallard,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Drake Mallard-Drake-null, X1-subj-X2,X1-obj-X3,X4-has_name-Drake Mallard,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Drake Mallard, Drake, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Drake Mallard, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Drake Mallard, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Drake Mallard"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
129,Who is the creator of Drawing Houses?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Drawing Houses"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
130,Who is the creator of Dream Woman?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Dream Woman"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
131,Who is the creator of Dress for Success?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Dress for Success"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
132,Who is the creator of Driver's Seat?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Driver\\'s Seat"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
133,Who is the creator of Dulce?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Dulce"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
134,Who is the creator of Dwight Tryon's Studio?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Dwight Tryon\\'s Studio"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
135,Who is the creator of Eagle Peak Trail?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Eagle Peak Trail"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
136,"Who is the creator of East Gate, Damascus?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""East Gate\\, Damascus"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
137,"Who is the creator of Ed. Hubbard, American South?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Ed\\. Hubbard\\, American South"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
138,Who is the creator of Eddyville?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Eddyville"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
139,Who is the creator of Elihu Root?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Elihu Root"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
140,Who is the creator of Elsie Clough Street?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Elsie Clough Street"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
141,Who is the creator of Elysian Fields?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Elysian Fields"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
142,Who is the creator of Emily Smiley Snowden?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Emily Smiley Snowden"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
143,Who is the creator of Emperor of Norfolk?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Emperor of Norfolk"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
144,Who is the creator of Erratic and Snow?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Erratic and Snow"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
145,Who is the creator of Expanding Universe?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Expanding Universe"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
146,Who is the creator of Family Doctor?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Family Doctor"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
147,Who is the creator of Fat and Stylish?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Fat and Stylish"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
148,Who is the creator of Feast Day: San Juan Pueblo?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Feast Day\\: San Juan Pueblo"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
149,Who is the creator of Feeder?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Feeder"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
150,"Who is the creator of Female Nude, Back View?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Female Nude\\, Back View"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
151,Who is the creator of Fiat Vita?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Fiat Vita"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
152,Who is the creator of Field Sketch of Rocky Canyon?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Field Sketch of Rocky Canyon"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
153,Who is the creator of Filling Station?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Filling Station"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
154,Who is the creator of Firelight?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Firelight"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
155,"Who is the creator of Fjord Sketch, Norway?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Fjord Sketch\\, Norway"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
156,Who is the creator of Forest (In the Forest)?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Forest \\(In the Forest\\)"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
157,Who is the creator of Fragment of a Cloud?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Fragment of a Cloud"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
158,Who is the creator of Francesca Di Rimini?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Francesca Di Rimini"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
159,Who is the creator of Franklin (half-scale model)?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Franklin \\(half\\-scale model\\)"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
160,Who is the creator of Freedom of Worship?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Freedom of Worship"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
161,Who is the creator of French Grandmother?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""French Grandmother"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
162,Who is the creator of French Money?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""French Money"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
163,"Who is the creator of Friendly Corner, Albi?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Friendly Corner\\, Albi"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
164,Who is the creator of Frisky Day?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Frisky Day"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
165,Who is the creator of Frozen Harbor?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Frozen Harbor"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
166,Who is the creator of Fruit Trees and Mountains?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Fruit Trees and Mountains"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
167,Who is the creator of Furbelows?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Furbelows"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
168,Who is the creator of Game Fish?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Game Fish"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
169,"Who is the creator of Gas Mask, Lower East Side?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Gas Mask\\, Lower East Side"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
170,Who is the creator of Gathering of black men?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Gathering of black men"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
171,"Who is the creator of Glove and Shoe, New York?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Glove and Shoe\\, New York"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
172,Who is the creator of Going Home?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Going Home"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
173,Who is the creator of Golf?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Golf"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
174,Who is the creator of Graf Zeppelin?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Graf Zeppelin"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
175,Who is the creator of Great White Heron?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Great White Heron"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
176,"Who is the creator of Greek Lady, Brusa?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Greek Lady\\, Brusa"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
177,Who is the creator of Green Village?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Green Village"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
178,Who is the creator of Grizzly Madonna?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Grizzly Madonna"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
179,Who is the creator of Harbor Derricks?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Harbor Derricks"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
180,Who is the creator of Harlem Church?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Harlem Church"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
181,Who is the creator of Harlem Nightclub Dancers?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Harlem Nightclub Dancers"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
182,Who is the creator of Hats On?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Hats On"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
183,Who is the creator of Hay Ride?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Hay Ride"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
184,Who is the creator of Haystack?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Haystack"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
185,Who is the creator of Head of a Gentleman?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Head of a Gentleman"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
186,Who is the creator of Hedges?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Hedges"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
187,Who is the creator of Hercules Gets Cerberus?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Hercules Gets Cerberus"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
188,Who is the creator of High Bridge?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""High Bridge"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
189,"Who is the creator of Horeb, Egypt?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Horeb\\, Egypt"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
190,Who is the creator of Horses and Men?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Horses and Men"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
191,Who is the creator of Hot Dog Stand?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Hot Dog Stand"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
192,Who is the creator of Ideas?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Ideas"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
193,Who is the creator of Ikarus?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Ikarus"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
194,Who is the creator of Illuminated Evangelists?," X1-be-is-null,X2-who-Who-null,X4-Evangelist-Evangelists-null,X3-creator-creator-the, X1-subj-X2,X4-illuminate-true,X4-has_name-Evangelist,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X4-Evangelist-Evangelists-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Illuminated,X4-has_name-Evangelist,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X4-Illuminated Evangelists-Illuminated Evangelists-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Illuminated Evangelists,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Evangelist-Evangelists-null, X1-subj-X2,X1-obj-X3,X4-illuminate-true,X4-has_name-Evangelist,X1-obl_of-X4, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Evangelist-Evangelists-null, X1-subj-X2,X1-obj-X3,X4-has_name-Illuminated,X4-has_name-Evangelist,X1-obl_of-X4, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Illuminated Evangelists-Illuminated Evangelists-null, X1-subj-X2,X1-obj-X3,X4-has_name-Illuminated Evangelists,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Evangelist, Evangelists, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, illuminate, true, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_name, Evangelist, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Evangelist, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Evangelist"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
195,Who is the creator of Impediment?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Impediment"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
196,Who is the creator of In Morning?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""In Morning"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
197,Who is the creator of In These Troubled Times?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""In These Troubled Times"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
198,Who is the creator of In the Meadows at Windsor?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""In the Meadows at Windsor"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
199,Who is the creator of In the Park?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""In the Park"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
200,Who is the creator of Indecision?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Indecision"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
201,Who is the creator of Indestructible Object?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Indestructible Object"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
202,Who is the creator of Indian Boy and Pony?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Indian Boy and Pony"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
203,Who is the creator of Indianapolis?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Indianapolis"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
204,Who is the creator of Industrial Cottage?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Industrial Cottage"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
205,Who is the creator of Industrial Plant?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Industrial Plant"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
206,Who is the creator of Innocent Age?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Innocent Age"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
207,Who is the creator of Interception?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Interception"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
208,Who is the creator of Interior with Three Pears?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Interior with Three Pears"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
209,Who is the creator of Interlocked Forms?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Interlocked Forms"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
210,Who is the creator of Into the Light?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Into the Light"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
211,Who is the creator of Into the Magic?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Into the Magic"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
212,Who is the creator of Isaac Praul?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Isaac Praul"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
213,Who is the creator of Island in Moonlight?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Island in Moonlight"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
214,Who is the creator of Jackie Wags His Tail?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Jackie Wags His Tail"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
215,Who is the creator of Jean de Nievelles?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Jean de Nievelles"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
216,Who is the creator of Jesus Christ Our Savior?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Jesus Christ Our Savior"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
217,Who is the creator of Jim and Dodge Power Van?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Jim and Dodge Power Van"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
218,Who is the creator of Joe or The Miner's Son?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Joe or The Miner\\'s Son"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
219,Who is the creator of John Quincy Adams Ward?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""John Quincy Adams Ward"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
220,Who is the creator of John Swanwick?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""John Swanwick"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
221,Who is the creator of Josh White?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Josh White"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
222,Who is the creator of Journeys?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Journeys"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
223,Who is the creator of Joven criolla?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Joven criolla"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
224,Who is the creator of Kate Deering Ridgely?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Kate Deering Ridgely"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
225,Who is the creator of Kentucky Barnyard?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Kentucky Barnyard"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
226,Who is the creator of Kermit?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Kermit"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
227,Who is the creator of King's Folly?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""King\\'s Folly"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
228,Who is the creator of La Maison?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""La Maison"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
229,Who is the creator of La Vierge?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""La Vierge"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
230,Who is the creator of Landscape with Clouds?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Landscape with Clouds"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
231,Who is the creator of Landscape with Houses?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Landscape with Houses"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
232,Who is the creator of Landscape with Perspective?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Landscape with Perspective"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
233,Who is the creator of Landscape with a Farmhouse?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Landscape with a Farmhouse"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
234,"Who is the creator of Laon Cathedral, France?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Laon Cathedral\\, France"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
235,Who is the creator of Larry Levan (snake)?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Larry Levan \\(snake\\)"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
236,Who is the creator of Lawrence Barrett As Cassius?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Lawrence Barrett As Cassius"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
237,Who is the creator of Leda and the Necrophilic Swan?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Leda and the Necrophilic Swan"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
238,"Who is the creator of Lemon Slices, Glass and Cup?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Lemon Slices\\, Glass and Cup"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
239,"Who is the creator of Les Moulins Stucky, Venice?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Les Moulins Stucky\\, Venice"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
240,Who is the creator of Les Poilus?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Les Poilus"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
241,Who is the creator of Les Six?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Les Six"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
242,Who is the creator of Life Go On?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Life Go On"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
243,Who is the creator of Little Peasant Girl?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Little Peasant Girl"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
244,Who is the creator of Little Town by Moonlight?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Little Town by Moonlight"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
245,"Who is the creator of Livingston, Montana?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Livingston\\, Montana"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
246,"Who is the creator of Loading Lemons, Palermo?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Loading Lemons\\, Palermo"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
247,Who is the creator of Lotus?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Lotus"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
248,Who is the creator of Loulie's Hand?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Loulie\\'s Hand"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
249,Who is the creator of Lounge Chair?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Lounge Chair"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
250,Who is the creator of Low Bowl?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Low Bowl"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
251,Who is the creator of Man with Wheelbarrow?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Man with Wheelbarrow"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
252,Who is the creator of Mandalas?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Mandalas"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
253,Who is the creator of Maquette for Chorale?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Maquette for Chorale"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
254,Who is the creator of Maquette for Ripples?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Maquette for Ripples"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
255,Who is the creator of Maquette for White Tornado?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Maquette for White Tornado"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
256,Who is the creator of Marguerites?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Marguerites"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
257,Who is the creator of Market in Prague?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Market in Prague"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
258,Who is the creator of Mary Hopkinson?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Mary Hopkinson"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
259,Who is the creator of Mary Lou Furcron?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Mary Lou Furcron"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
260,"Who is the creator of Medicine Wheel, Wyoming?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Medicine Wheel\\, Wyoming"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
261,Who is the creator of Melancholia?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Melancholia"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
262,Who is the creator of Member of the Schuyler Family?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Member of the Schuyler Family"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
263,Who is the creator of Men Walking?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Men Walking"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
264,"Who is the creator of Merry Xmas, W and M Zorach?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Merry Xmas\\, W and M Zorach"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
265,Who is the creator of Micaceous Pot?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Micaceous Pot"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
266,Who is the creator of Milwaukee (Wisconsin)?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Milwaukee \\(Wisconsin\\)"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
267,Who is the creator of Minnesota Valley?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Minnesota Valley"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
268,Who is the creator of Mis Hermanos?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Mis Hermanos"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
269,Who is the creator of Miss Frances Harris?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Miss Frances Harris"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
270,Who is the creator of Modern Steel Carving?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Modern Steel Carving"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
271,Who is the creator of Morata?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Morata"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
272,Who is the creator of Mordecai Manuel Noah?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Mordecai Manuel Noah"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
273,Who is the creator of Mosquito Lamp?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Mosquito Lamp"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
274,Who is the creator of Mounette?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Mounette"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
275,Who is the creator of Mount Orizaba?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Mount Orizaba"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
276,Who is the creator of Mountain Pool?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Mountain Pool"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
277,Who is the creator of Mr. Kafka?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Mr\\. Kafka"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
278,Who is the creator of Mrs. George Watson?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Mrs\\. George Watson"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
279,Who is the creator of Mrs. Lloyd?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Mrs\\. Lloyd"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
280,Who is the creator of Mt. Rushmore?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Mt\\. Rushmore"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
281,Who is the creator of Mt. of Temptation?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Mt\\. of Temptation"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
282,Who is the creator of Mules?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Mules"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
283,Who is the creator of Myrtle Booth and Her Trees?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Myrtle Booth and Her Trees"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
284,Who is the creator of Nancy?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Nancy"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
285,Who is the creator of Napeague?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Napeague"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
286,Who is the creator of Natural Bridge?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Natural Bridge"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
287,Who is the creator of Nest of Fifteen?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Nest of Fifteen"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
288,Who is the creator of New Canaan?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""New Canaan"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
289,Who is the creator of Nigger Quarters?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Nigger Quarters"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
290,Who is the creator of Nightbloom?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Nightbloom"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
291,Who is the creator of Nikh-Eiphnh?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Nikh\\-Eiphnh"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
292,Who is the creator of Nude Man and Woman?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Nude Man and Woman"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
293,Who is the creator of Nude in Wood?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Nude in Wood"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
294,Who is the creator of Nude with Dove and Flowers?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Nude with Dove and Flowers"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
295,"Who is the creator of Nude, Head Thrown Back?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Nude\\, Head Thrown Back"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
296,Who is the creator of Nude: Study of a Young Girl?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Nude\\: Study of a Young Girl"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
297,Who is the creator of Nuptial Festival?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Nuptial Festival"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
298,Who is the creator of Nut Street Station?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Nut Street Station"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
299,Who is the creator of Nyack-on-the-Hudson?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Nyack\\-on\\-the\\-Hudson"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
300,Who is the creator of Ode to Today?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Ode to Today"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
301,Who is the creator of Off Shore?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Off Shore"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
302,"Who is the creator of Off York Island, Maine?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Off York Island\\, Maine"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
303,"Who is the creator of Old Fort, New Fortresses?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Old Fort\\, New Fortresses"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
304,Who is the creator of One-star?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""One\\-star"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
305,"Who is the creator of Open House, Dutch Colonial?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Open House\\, Dutch Colonial"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
306,Who is the creator of Open?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Open"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
307,Who is the creator of Ornamental Hands: Figure One?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Ornamental Hands\\: Figure One"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
308,Who is the creator of Our Roses?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Our Roses"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
309,Who is the creator of Over the Pass?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Over the Pass"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
310,Who is the creator of Oyster Shuckers?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Oyster Shuckers"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
311,Who is the creator of Paul N. Radulich?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Paul N\\. Radulich"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
312,Who is the creator of Peaceful Valley?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Peaceful Valley"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
313,"Who is the creator of Philippi, West Virginia?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Philippi\\, West Virginia"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
314,"Who is the creator of Pimos Indians, Arizona?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Pimos Indians\\, Arizona"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
315,Who is the creator of Pioneers?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Pioneers"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
316,Who is the creator of Pisa from North?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Pisa from North"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
317,Who is the creator of Plain with Flag?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Plain with Flag"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
318,Who is the creator of Plainsman's Dream?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Plainsman\\'s Dream"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
319,Who is the creator of Plaza?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Plaza"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
320,Who is the creator of Plums?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Plums"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
321,Who is the creator of Pont Newith near Bala?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Pont Newith near Bala"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
322,"Who is the creator of Ponte Megio, Venice?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Ponte Megio\\, Venice"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
323,Who is the creator of Portrait of Isabel Bishop?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Portrait of Isabel Bishop"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
324,Who is the creator of Portrait of Miss Hoe?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Portrait of Miss Hoe"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
325,Who is the creator of Portrait of the Black Madonna?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Portrait of the Black Madonna"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
326,Who is the creator of Power Play?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Power Play"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
327,Who is the creator of Prairie Patriarch?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Prairie Patriarch"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
328,Who is the creator of Prince Albert?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Prince Albert"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
329,Who is the creator of Prizefighters?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Prizefighters"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
330,Who is the creator of Profile and Hat?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Profile and Hat"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
331,Who is the creator of Provincetown Bacchanalia?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Provincetown Bacchanalia"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
332,"Who is the creator of Provincetown, Mass.?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Provincetown\\, Mass\\."",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
333,Who is the creator of Public Building?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Public Building"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
334,Who is the creator of R. D. Shepherd as Shylock?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""R\\. D\\. Shepherd as Shylock"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
335,Who is the creator of Radiante?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Radiante"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
336,Who is the creator of Radish Salad Bowl?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Radish Salad Bowl"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
337,Who is the creator of Railroad Sleeping?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Railroad Sleeping"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
338,Who is the creator of Reclining Nude Figure?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Reclining Nude Figure"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
339,Who is the creator of Reclining?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Reclining"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
340,Who is the creator of Red Cylinder?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Red Cylinder"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
341,Who is the creator of Red Fern?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Red Fern"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
342,Who is the creator of Red Flower?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Red Flower"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
343,"Who is the creator of Red Tea House, Tajikistan?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Red Tea House\\, Tajikistan"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
344,Who is the creator of Red Witch?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Red Witch"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
345,Who is the creator of Reducing (Reducing Exercises)?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Reducing \\(Reducing Exercises\\)"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
346,Who is the creator of Renwick Gate?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Renwick Gate"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
347,"Who is the creator of Rhinebeck, NY?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Rhinebeck\\, NY"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
348,Who is the creator of Rites of Spring?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Rites of Spring"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
349,Who is the creator of Rock Tower near Marmelito?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Rock Tower near Marmelito"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
350,Who is the creator of Rocky Mesa?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Rocky Mesa"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
351,Who is the creator of Rocky Neck Railways?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Rocky Neck Railways"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
352,Who is the creator of Rolling Stone Farm?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Rolling Stone Farm"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
353,Who is the creator of Romare Bearden?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Romare Bearden"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
354,Who is the creator of Rosanna?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Rosanna"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
355,"Who is the creator of Rosenwald Museum, Chicago?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Rosenwald Museum\\, Chicago"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
356,Who is the creator of Round the Mulberry Bush?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Round the Mulberry Bush"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
357,Who is the creator of Roxy?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Roxy"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
358,Who is the creator of Rusty and Corrosion?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Rusty and Corrosion"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
359,Who is the creator of SPIN (orange)?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""SPIN \\(orange\\)"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
360,Who is the creator of Sacred Heart of Healing?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Sacred Heart of Healing"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
361,Who is the creator of Sacrifice of Isaac?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Sacrifice of Isaac"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
362,"Who is the creator of Safad, in Galilee?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Safad\\, in Galilee"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
363,Who is the creator of Salton Sea (Triangle)?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Salton Sea \\(Triangle\\)"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
364,"Who is the creator of Santa Elena Canyon, Big Bend?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Santa Elena Canyon\\, Big Bend"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
365,Who is the creator of Santa Maria della Salute?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Santa Maria della Salute"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
366,"Who is the creator of Saratoga Springs, New York?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Saratoga Springs\\, New York"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
367,Who is the creator of Sasha?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Sasha"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
368,Who is the creator of Sawyers?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Sawyers"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
369,Who is the creator of Sculpture of a Bather?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Sculpture of a Bather"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
370,Who is the creator of Seabird?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Seabird"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
371,"Who is the creator of Seiners, Chioggia?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Seiners\\, Chioggia"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
372,Who is the creator of Self-Portrait with Hat?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Self\\-Portrait with Hat"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
373,Who is the creator of Sentinels?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Sentinels"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
374,Who is the creator of Seven Chimneys?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Seven Chimneys"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
375,Who is the creator of Shacks?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Shacks"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
376,Who is the creator of Shifting States: Iraq?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Shifting States\\: Iraq"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
377,Who is the creator of Ship of Fools?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Ship of Fools"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
378,Who is the creator of Singing Pines?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Singing Pines"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
379,Who is the creator of Sketch Books?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Sketch Books"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
380,Who is the creator of Sketch for Lombardy Bleachery?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Sketch for Lombardy Bleachery"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
381,Who is the creator of Sketch of a Dog Sleeping?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Sketch of a Dog Sleeping"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
382,Who is the creator of Sky Totem?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Sky Totem"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
383,Who is the creator of Small Gull Sleeping?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Small Gull Sleeping"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
384,Who is the creator of Smoking the Shield?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Smoking the Shield"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
385,Who is the creator of Snow Clearance?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Snow Clearance"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
386,Who is the creator of Something to Think About?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Something to Think About"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
387,Who is the creator of Somnolence?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Somnolence"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
388,"Who is the creator of Sphinx, Thames, London?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Sphinx\\, Thames\\, London"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
389,Who is the creator of Squatter?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Squatter"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
390,Who is the creator of St. Jerome?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""St\\. Jerome"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
391,"Who is the creator of St. Stephen's Church, Vienna?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""St\\. Stephen\\'s Church\\, Vienna"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
392,Who is the creator of Stack Laminated Mahogany Bowl?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Stack Laminated Mahogany Bowl"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
393,Who is the creator of Stanislaus?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Stanislaus"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
394,Who is the creator of Stone Carvers?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Stone Carvers"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
395,Who is the creator of Storm Over Gloucester?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Storm Over Gloucester"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
396,Who is the creator of Straw Flowers?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Straw Flowers"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
397,"Who is the creator of Street Crowds, Tunisia?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Street Crowds\\, Tunisia"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
398,Who is the creator of Street in Joliet?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Street in Joliet"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
399,Who is the creator of Street with Red House?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Street with Red House"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
400,Who is the creator of String Trio?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""String Trio"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
401,Who is the creator of Strong Left Hand?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Strong Left Hand"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
402,Who is the creator of Study for Baits?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Study for Baits"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
403,Who is the creator of Study for Conflict?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Study for Conflict"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
404,Who is the creator of Study for the Disciple Peter?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Study for the Disciple Peter"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
405,Who is the creator of Summer Vegetables?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Summer Vegetables"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
406,Who is the creator of Sun Flowers?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Sun Flowers"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
407,Who is the creator of Sunlight?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Sunlight"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
408,Who is the creator of Sunny Slopes?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Sunny Slopes"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
409,Who is the creator of Surf-Invasion?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Surf\\-Invasion"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
410,Who is the creator of Suzanna?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Suzanna"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
411,Who is the creator of Swedish Lady?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Swedish Lady"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
412,Who is the creator of THE FREEDOM STOMPERS?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""THE FREEDOM STOMPERS"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
413,Who is the creator of Targets?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Targets"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
414,Who is the creator of Tattoo Artist in Person?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Tattoo Artist in Person"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
415,Who is the creator of Teacher Benares?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Teacher Benares"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
416,Who is the creator of Teddo?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Teddo"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
417,"Who is the creator of Temple at Thebes, Egypt?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Temple at Thebes\\, Egypt"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
418,Who is the creator of Temple of Nike Apteros?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Temple of Nike Apteros"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
419,Who is the creator of Tents?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Tents"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
420,Who is the creator of Texas State Championship Game?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Texas State Championship Game"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
421,Who is the creator of The Abandoned House?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Abandoned House"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
422,Who is the creator of The Artist's Children?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Artist\\'s Children"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
423,Who is the creator of The Beauty Parlor?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Beauty Parlor"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
424,Who is the creator of The Birdlover?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Birdlover"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
425,Who is the creator of The Chap-Book (The Blue Lady)?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Chap\\-Book \\(The Blue Lady\\)"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
426,Who is the creator of The Committee?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Committee"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
427,Who is the creator of The Court of Death?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Court of Death"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
428,Who is the creator of The Court of Silence?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Court of Silence"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
429,Who is the creator of The Craftsman Series: Shovels?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Craftsman Series\\: Shovels"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
430,Who is the creator of The Edge of the Land?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Edge of the Land"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
431,Who is the creator of The Flower?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Flower"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
432,Who is the creator of The Good Luck Branch?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Good Luck Branch"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
433,Who is the creator of The Hunt (Punch Bowl)?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Hunt \\(Punch Bowl\\)"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
434,Who is the creator of The Maenads?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Maenads"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
435,"Who is the creator of The Old Warehouse, Sitka?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Old Warehouse\\, Sitka"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
436,"Who is the creator of The Postern, Moret?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Postern\\, Moret"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
437,Who is the creator of The Runaways?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Runaways"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
438,Who is the creator of The Sculptor and the Model?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Sculptor and the Model"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
439,Who is the creator of The Sculptor?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Sculptor"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
440,Who is the creator of The Seine Boat?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Seine Boat"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
441,Who is the creator of The Slave Ship?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Slave Ship"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
442,Who is the creator of The Sun in Sung Time?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Sun in Sung Time"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
443,Who is the creator of The Supply Store?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Supply Store"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
444,Who is the creator of The Top of the World?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Top of the World"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
445,Who is the creator of The Town Pump?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Town Pump"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
446,Who is the creator of The True Mother Goose?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The True Mother Goose"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
447,Who is the creator of The Unbelievable City?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Unbelievable City"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
448,"Who is the creator of The Village Elms, Easthampton?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Village Elms\\, Easthampton"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
449,Who is the creator of The Weak Bullet?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Weak Bullet"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
450,Who is the creator of The Wren?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""The Wren"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
451,Who is the creator of There is no Buddha Out There?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""There is no Buddha Out There"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
452,Who is the creator of Thomas Davis?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Thomas Davis"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
453,Who is the creator of Thomas Hopkinson?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Thomas Hopkinson"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
454,Who is the creator of Three Czechs?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Three Czechs"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
455,Who is the creator of Tibet?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Tibet"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
456,Who is the creator of Tina Turner?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Tina Turner"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
457,Who is the creator of Torque?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Torque"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
458,Who is the creator of Totem?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Totem"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
459,Who is the creator of Tricycle (Memphis)?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Tricycle \\(Memphis\\)"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
460,Who is the creator of Tricyclist?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Tricyclist"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
461,Who is the creator of Triggered?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Triggered"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
462,Who is the creator of Triple Double?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Triple Double"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
463,Who is the creator of Turtle?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Turtle"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
464,Who is the creator of Turtle?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Turtle"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
465,"Who is the creator of Two Barbers, Philadelphia?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Two Barbers\\, Philadelphia"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
466,Who is the creator of Two Forty-Seven P. M.?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Two Forty\\-Seven P\\. M\\."",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
467,Who is the creator of Underscan?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Underscan"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
468,Who is the creator of Up Broadway Down Fifth?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Up Broadway Down Fifth"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
469,Who is the creator of Upland Pasture?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Upland Pasture"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
470,Who is the creator of Valley of the Swiftcurrent?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Valley of the Swiftcurrent"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
471,Who is the creator of Vermont in November?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Vermont in November"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
472,Who is the creator of Veronica's Veil?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Veronica\\'s Veil"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
473,Who is the creator of Veterans?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Veterans"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
474,"Who is the creator of Vezelay, la Grand Rue?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Vezelay\\, la Grand Rue"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
475,Who is the creator of Victime?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Victime"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
476,Who is the creator of Video Painting?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Video Painting"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
477,Who is the creator of Wall of Light Blue?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Wall of Light Blue"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
478,Who is the creator of Ward Heelers?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Ward Heelers"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
479,Who is the creator of Washington Crash?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Washington Crash"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
480,"Who is the creator of Water Carrier, Venice?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Water Carrier\\, Venice"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
481,Who is the creator of We Shall Overcome?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""We Shall Overcome"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
482,Who is the creator of Wheaton College?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Wheaton College"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
483,Who is the creator of White Daisies Rhapsody?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""White Daisies Rhapsody"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
484,Who is the creator of White Lava Glaze Bowl?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""White Lava Glaze Bowl"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
485,"Who is the creator of Wide Skull, New York?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Wide Skull\\, New York"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
486,"Who is the creator of Wild Coast, Newport?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Wild Coast\\, Newport"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
487,Who is the creator of William Thornton?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""William Thornton"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
488,Who is the creator of Window Shopper?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Window Shopper"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
489,Who is the creator of Winds?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Winds"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
490,"Who is the creator of Wine Cart, Paris?"," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Wine Cart\\, Paris"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
491,Who is the creator of Winter Skating in New Jersey?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Winter Skating in New Jersey"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
492,Who is the creator of Wonderland?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Wonderland"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
493,Who is the creator of Wrestlers?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Wrestlers"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
494,Who is the creator of Yellow Sky?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Yellow Sky"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
495,Who is the creator of Young Fisherman?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Young Fisherman"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
496,Who is the creator of Young Girl in Purple?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Young Girl in Purple"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
497,Who is the creator of Young Michelangelo?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Young Michelangelo"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
498,Who is the creator of Yucca Plants?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Yucca Plants"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
499,Who is the creator of Zingare?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Zingare"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
500,Who is the creator of Zoltan Hecht?," X1-be-is-null,X2-who-Who-null,X4-Peter-Peter-null,X3-creator-creator-the, X1-subj-X2,X4-has_name-Peter,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-who-Who-null,X3-creator-creator-the,X4-Peter-Peter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Peter,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, who, Who, PRON, null, false, GenericEntity2, GenericEntity), 
DEntity(X4, Peter, Peter, PROPN, null, false, Artefact3, Artefact), 
DEntity(X3, creator, creator, NOUN, the, false, Artist4, Artist), 
DEntity(X5, null, null, null, null, false, Qualifier5, Qualifier)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [select] --- []), 
DCondition(X4, has_name, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [author_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, who, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Peter, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, creator, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_text, Qualifier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X5, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [select] --- []), 
DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 5
 numEntitiesOk = 0
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]","  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameArtist4 ?Artist4 ?snameArtefact3 ?Artefact3 WHERE { {{?Artefact3 cidoc:P131_is_identified_by ?nameArtefact3 . ?nameArtefact3 rdf:value ?snameArtefact3 .}  UNION {?Artefact3 rdfs:label ?snameArtefact3 .}}  filter(regex(?snameArtefact3,""Zoltan Hecht"",""i"")) . ?prod cidoc:P14_carried_out_by ?Artist4 . ?Artefact3 cidoc:P108i_was_produced_by ?prod . ?Artist4 rdfs:label ?snameArtist4 . }",true
