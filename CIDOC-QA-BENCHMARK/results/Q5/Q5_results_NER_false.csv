"Question","partialDRS","Solution","Gen Query","Gen Query Response","Man Data Response","Gen.contains(Man)"
"Which is the birth place of Jay DeFeo?"," X1-be-is-null,X2-which-Which-null,X4-Jay DeFeo-Jay-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jay DeFeo,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jay DeFeo-Jay-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jay DeFeo,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jay DeFeo, Jay, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jay DeFeo, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jay DeFeo, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jay DeFeo"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Hanover, New Hampshire"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hanovernewhampshire"",     ""snameArtist3"": ""Jay DeFeo"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/28291""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/28291"",""label"":""Jay DeFeo"",""placeLabel"":""Hanover, New Hampshire""}]","true"
"Which is the birth place of Alvan Fisher?"," X1-be-is-null,X2-which-Which-null,X4-Alvan Fisher-Alvan-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Alvan Fisher,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Alvan Fisher-Alvan-null, X1-subj-X2,X1-obj-X3,X4-has_name-Alvan Fisher,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Alvan Fisher, Alvan, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Alvan Fisher, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Alvan Fisher, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alvan Fisher"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Needham, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/needhammassachusettsunitedstates"",     ""snameArtist3"": ""Alvan Fisher"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1550""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1550"",""label"":""Alvan Fisher"",""placeLabel"":""Needham, Massachusetts, United States""}]","true"
"Which is the birth place of Douglas Warfield Warner?"," X1-be-is-null,X2-which-Which-null,X4-Douglas Warfield Warner-Douglas-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Douglas Warfield Warner,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Douglas Warfield Warner-Douglas-null, X1-subj-X2,X1-obj-X3,X4-has_name-Douglas Warfield Warner,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Douglas Warfield Warner, Douglas, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Douglas Warfield Warner, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Douglas Warfield Warner, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Douglas Warfield Warner"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Tulsa, Oklahoma, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tulsaoklahomaunitedstates"",     ""snameArtist3"": ""Douglas Warfield Warner"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5238""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5238"",""label"":""Douglas Warfield Warner"",""placeLabel"":""Tulsa, Oklahoma, United States""}]","true"
"Which is the birth place of Nura?"," X1-be-is-null,X2-which-Which-null,X4-Nura-Nura-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Nura,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Nura-Nura-null, X1-subj-X2,X1-obj-X3,X4-has_name-Nura,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Nura, Nura, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Nura, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Nura, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Nura"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Kansas City, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kansascitymissouriunitedstates"",     ""snameArtist3"": ""Nura"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3587""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3587"",""label"":""Nura"",""placeLabel"":""Kansas City, Missouri, United States""}]","true"
"Which is the birth place of Frances H. Gearhart?"," X1-be-is-null,X2-which-Which-null,X4-Frances H. Gearhart-Frances-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Frances H. Gearhart,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Frances H. Gearhart-Frances-null, X1-subj-X2,X1-obj-X3,X4-has_name-Frances H. Gearhart,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Frances H. Gearhart, Frances, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Frances H. Gearhart, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Frances H. Gearhart, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frances H\\. Gearhart"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Sagetown, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sagetownillinoisunitedstates"",     ""snameArtist3"": ""Frances H. Gearhart"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1762""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1762"",""label"":""Frances H. Gearhart"",""placeLabel"":""Sagetown, Illinois, United States""}]","true"
"Which is the birth place of Carl Van Vechten?"," X1-be-is-null,X2-which-Which-null,X4-Carl Van Vechten-Carl-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Carl Van Vechten,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Carl Van Vechten-Carl-null, X1-subj-X2,X1-obj-X3,X4-has_name-Carl Van Vechten,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Carl Van Vechten, Carl, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Carl Van Vechten, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Carl Van Vechten, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Carl Van Vechten"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Cedar Rapids, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cedarrapidsiowaunitedstates"",     ""snameArtist3"": ""Carl Van Vechten"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27305""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27305"",""label"":""Carl Van Vechten"",""placeLabel"":""Cedar Rapids, Iowa, United States""}]","true"
"Which is the birth place of Juan Downey?"," X1-be-is-null,X2-which-Which-null,X4-Juan Downey-Juan-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Juan Downey,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Juan Downey-Juan-null, X1-subj-X2,X1-obj-X3,X4-has_name-Juan Downey,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Juan Downey, Juan, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Juan Downey, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Juan Downey, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Juan Downey"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Santiago, Chile"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/santiagochile"",     ""snameArtist3"": ""Juan Downey"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1330""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1330"",""label"":""Juan Downey"",""placeLabel"":""Santiago, Chile""}]","true"
"Which is the birth place of Frank Bergman?"," X1-be-is-null,X2-which-Which-null,X4-Frank Bergman-Frank-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Frank Bergman,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Frank Bergman-Frank-null, X1-subj-X2,X1-obj-X3,X4-has_name-Frank Bergman,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Frank Bergman, Frank, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Frank Bergman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Frank Bergman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frank Bergman"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Austria"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/austria"",     ""snameArtist3"": ""Frank Bergman"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/7364""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/7364"",""label"":""Frank Bergman"",""placeLabel"":""Austria""}]","true"
"Which is the birth place of Arthur W. Hall?"," X1-be-is-null,X2-which-Which-null,X4-Arthur W. Hall-Arthur-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Arthur W. Hall,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Arthur W. Hall-Arthur-null, X1-subj-X2,X1-obj-X3,X4-has_name-Arthur W. Hall,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Arthur W. Hall, Arthur, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Arthur W. Hall, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Arthur W. Hall, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Arthur W\\. Hall"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Bowie, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bowietexasunitedstates"",     ""snameArtist3"": ""Arthur W. Hall"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2029""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2029"",""label"":""Arthur W. Hall"",""placeLabel"":""Bowie, Texas, United States""}]","true"
"Which is the birth place of James Wellstood?"," X1-be-is-null,X2-which-Which-null,X4-James Wellstood-James-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-James Wellstood,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-James Wellstood-James-null, X1-subj-X2,X1-obj-X3,X4-has_name-James Wellstood,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, James Wellstood, James, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, James Wellstood, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, James Wellstood, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James Wellstood"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Jersey City, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jerseycitynewjerseyunitedstates"",     ""snameArtist3"": ""James Wellstood"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/29063""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/29063"",""label"":""James Wellstood"",""placeLabel"":""Jersey City, New Jersey, United States""}]","true"
"Which is the birth place of Aden E. Miller?"," X1-be-is-null,X2-which-Which-null,X4-Aden E. Miller-Aden-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Aden E. Miller,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Aden E. Miller-Aden-null, X1-subj-X2,X1-obj-X3,X4-has_name-Aden E. Miller,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Aden E. Miller, Aden, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Aden E. Miller, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Aden E. Miller, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Aden E\\. Miller"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Millersburg, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/millersburgohiounitedstates"",     ""snameArtist3"": ""Aden E. Miller"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27508""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27508"",""label"":""Aden E. Miller"",""placeLabel"":""Millersburg, Ohio, United States""}]","true"
"Which is the birth place of Walter Beach Humphrey?","","NO DRS","null","null","null","null"
"Which is the birth place of Helen Gerardia?"," X1-be-is-null,X2-which-Which-null,X4-Helen Gerardia-Helen-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Helen Gerardia,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Helen Gerardia-Helen-null, X1-subj-X2,X1-obj-X3,X4-has_name-Helen Gerardia,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Helen Gerardia, Helen, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Helen Gerardia, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Helen Gerardia, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Helen Gerardia"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Ekaterinislav, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ekaterinislavrussia"",     ""snameArtist3"": ""Helen Gerardia"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1779""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1779"",""label"":""Helen Gerardia"",""placeLabel"":""Ekaterinislav, Russia""}]","true"
"Which is the birth place of Margaret H. Wright?"," X1-be-is-null,X2-which-Which-null,X4-Margaret H. Wright-Margaret-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Margaret H. Wright,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Margaret H. Wright-Margaret-null, X1-subj-X2,X1-obj-X3,X4-has_name-Margaret H. Wright,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Margaret H. Wright, Margaret, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Margaret H. Wright, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Margaret H. Wright, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Margaret H\\. Wright"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Newton, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newtonmassachusettsunitedstates"",     ""snameArtist3"": ""Margaret H. Wright"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5496""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5496"",""label"":""Margaret H. Wright"",""placeLabel"":""Newton, Massachusetts, United States""}]","true"
"Which is the birth place of Chester Leich?"," X1-be-is-null,X2-which-Which-null,X4-Chester Leich-Chester-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Chester Leich,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Chester Leich-Chester-null, X1-subj-X2,X1-obj-X3,X4-has_name-Chester Leich,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Chester Leich, Chester, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Chester Leich, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Chester Leich, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Chester Leich"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Evansville, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/evansvilleindianaunitedstates"",     ""snameArtist3"": ""Chester Leich"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2874""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2874"",""label"":""Chester Leich"",""placeLabel"":""Evansville, Indiana, United States""}]","true"
"Which is the birth place of Adolf Schreyer?"," X1-be-is-null,X2-which-Which-null,X4-Adolf Schreyer-Adolf-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Adolf Schreyer,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Adolf Schreyer-Adolf-null, X1-subj-X2,X1-obj-X3,X4-has_name-Adolf Schreyer,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Adolf Schreyer, Adolf, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Adolf Schreyer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Adolf Schreyer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Adolf Schreyer"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Frankfurt, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/frankfurtgermany"",     ""snameArtist3"": ""Adolf Schreyer"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4325""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4325"",""label"":""Adolf Schreyer"",""placeLabel"":""Frankfurt, Germany""}]","true"
"Which is the birth place of Allen Appel?"," X1-be-is-null,X2-which-Which-null,X4-Allen Appel-Allen-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Allen Appel,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Allen Appel-Allen-null, X1-subj-X2,X1-obj-X3,X4-has_name-Allen Appel,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Allen Appel, Allen, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Allen Appel, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Allen Appel, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Allen Appel"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Bethlehem, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bethlehempennsylvaniaunitedstates"",     ""snameArtist3"": ""Allen Appel"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/6114""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/6114"",""label"":""Allen Appel"",""placeLabel"":""Bethlehem, Pennsylvania, United States""}]","true"
"Which is the birth place of Edward B. Webster?"," X1-be-is-null,X2-which-Which-null,X4-Edward B. Webster-Edward-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Edward B. Webster,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Edward B. Webster-Edward-null, X1-subj-X2,X1-obj-X3,X4-has_name-Edward B. Webster,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Edward B. Webster, Edward, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Edward B. Webster, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Edward B. Webster, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Edward B\\. Webster"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Florence, South Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/florencesouthcarolinaunitedstates"",     ""snameArtist3"": ""Edward B. Webster"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5277""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5277"",""label"":""Edward B. Webster"",""placeLabel"":""Florence, South Carolina, United States""}]","true"
"Which is the birth place of Paul Kelpe?"," X1-be-is-null,X2-which-Which-null,X4-Paul Kelpe-Paul-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Paul Kelpe,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Paul Kelpe-Paul-null, X1-subj-X2,X1-obj-X3,X4-has_name-Paul Kelpe,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Paul Kelpe, Paul, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Paul Kelpe, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Paul Kelpe, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Paul Kelpe"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Minden, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mindengermany"",     ""snameArtist3"": ""Paul Kelpe"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2594""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2594"",""label"":""Paul Kelpe"",""placeLabel"":""Minden, Germany""}]","true"
"Which is the birth place of O. Louis Guglielmi?"," X1-be-is-null,X2-which-Which-null,X4-O. Louis Guglielmi-O.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-O. Louis Guglielmi,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-O. Louis Guglielmi-O.-null, X1-subj-X2,X1-obj-X3,X4-has_name-O. Louis Guglielmi,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, O. Louis Guglielmi, O., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, O. Louis Guglielmi, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, O. Louis Guglielmi, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""O\\. Louis Guglielmi"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Cairo, Egypt"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cairoegypt"",     ""snameArtist3"": ""O. Louis Guglielmi"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1981""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1981"",""label"":""O. Louis Guglielmi"",""placeLabel"":""Cairo, Egypt""}]","true"
"Which is the birth place of Doris Rosenthal?"," X1-be-is-null,X2-which-Which-null,X4-Doris Rosenthal-Doris-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Doris Rosenthal,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Doris Rosenthal-Doris-null, X1-subj-X2,X1-obj-X3,X4-has_name-Doris Rosenthal,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Doris Rosenthal, Doris, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Doris Rosenthal, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Doris Rosenthal, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Doris Rosenthal"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Riverside, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/riversidecaliforniaunitedstates"",     ""snameArtist3"": ""Doris Rosenthal"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4139""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4139"",""label"":""Doris Rosenthal"",""placeLabel"":""Riverside, California, United States""}]","true"
"Which is the birth place of Saul Berman?"," X1-be-is-null,X2-which-Which-null,X4-Saul Berman-Saul-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Saul Berman,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Saul Berman-Saul-null, X1-subj-X2,X1-obj-X3,X4-has_name-Saul Berman,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Saul Berman, Saul, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Saul Berman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Saul Berman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Saul Berman"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/russia"",     ""snameArtist3"": ""Saul Berman"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/373""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/373"",""label"":""Saul Berman"",""placeLabel"":""Russia""}]","true"
"Which is the birth place of Aghassi George Aghassian?"," X1-be-is-null,X2-which-Which-null,X4-Aghassi George Aghassian-Aghassi-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Aghassi George Aghassian,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Aghassi George Aghassian-Aghassi-null, X1-subj-X2,X1-obj-X3,X4-has_name-Aghassi George Aghassian,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Aghassi George Aghassian, Aghassi, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Aghassi George Aghassian, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Aghassi George Aghassian, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Aghassi George Aghassian"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Armenia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/armenia"",     ""snameArtist3"": ""Aghassi George Aghassian"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18267""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18267"",""label"":""Aghassi George Aghassian"",""placeLabel"":""Armenia""}]","true"
"Which is the birth place of Jesús Moroles?"," X1-be-is-null,X2-which-Which-null,X4-Jesús Moroles-Jesús-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jesús Moroles,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jesús Moroles-Jesús-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jesús Moroles,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jesús Moroles, Jesús, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jesús Moroles, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jesús Moroles, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jesús Moroles"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Corpus Christi, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/corpuschristitexasunitedstates"",     ""snameArtist3"": ""Jesús Moroles"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5827""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5827"",""label"":""Jesús Moroles"",""placeLabel"":""Corpus Christi, Texas, United States""}]","true"
"Which is the birth place of Wilfrid Zogbaum?"," X1-be-is-null,X2-which-Which-null,X4-Wilfrid Zogbaum-Wilfrid-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Wilfrid Zogbaum,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Wilfrid Zogbaum-Wilfrid-null, X1-subj-X2,X1-obj-X3,X4-has_name-Wilfrid Zogbaum,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Wilfrid Zogbaum, Wilfrid, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Wilfrid Zogbaum, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Wilfrid Zogbaum, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Wilfrid Zogbaum"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Newport, Rhode Island, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newportrhodeislandunitedstates"",     ""snameArtist3"": ""Wilfrid Zogbaum"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5564""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5564"",""label"":""Wilfrid Zogbaum"",""placeLabel"":""Newport, Rhode Island, United States""}]","true"
"Which is the birth place of Alphonse Jongers?"," X1-be-is-null,X2-which-Which-null,X4-Alphonse Jongers-Alphonse Jongers-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Alphonse Jongers,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Alphonse Jongers-Alphonse Jongers-null, X1-subj-X2,X1-obj-X3,X4-has_name-Alphonse Jongers,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Alphonse Jongers, Alphonse Jongers, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Alphonse Jongers, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Alphonse Jongers, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alphonse Jongers"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Mezieres, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mezieresfrance"",     ""snameArtist3"": ""Alphonse Jongers"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2508""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2508"",""label"":""Alphonse Jongers"",""placeLabel"":""Mezieres, France""}]","true"
"Which is the birth place of Will Barnet?"," X1-be-is-null,X2-which-Which-null,X4-Will Barnet-Will-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Will Barnet,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Will Barnet-Will-null, X1-subj-X2,X1-obj-X3,X4-has_name-Will Barnet,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Will Barnet, Will, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Will Barnet, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Will Barnet, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Will Barnet"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Beverly, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/beverlymassachusettsunitedstates"",     ""snameArtist3"": ""Will Barnet"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/245""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/245"",""label"":""Will Barnet"",""placeLabel"":""Beverly, Massachusetts, United States""}]","true"
"Which is the birth place of Ellen Sharples?"," X1-be-is-null,X2-which-Which-null,X4-Ellen Sharples-Ellen-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ellen Sharples,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ellen Sharples-Ellen-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ellen Sharples,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ellen Sharples, Ellen, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ellen Sharples, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ellen Sharples, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ellen Sharples"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Birmingham, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/birminghamengland"",     ""snameArtist3"": ""Ellen Sharples"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4398""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4398"",""label"":""Ellen Sharples"",""placeLabel"":""Birmingham, England""}]","true"
"Which is the birth place of Crystal K. D. Huie?"," X1-be-is-null,X2-which-Which-null,X4-Crystal K. D. Huie-Crystal-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Crystal K. D. Huie,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Crystal K. D. Huie-Crystal-null, X1-subj-X2,X1-obj-X3,X4-has_name-Crystal K. D. Huie,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Crystal K. D. Huie, Crystal, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Crystal K. D. Huie, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Crystal K. D. Huie, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Crystal K\\. D\\. Huie"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Little Rock, Arkansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/littlerockarkansasunitedstates"",     ""snameArtist3"": ""Crystal K. D. Huie"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2343""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2343"",""label"":""Crystal K. D. Huie"",""placeLabel"":""Little Rock, Arkansas, United States""}]","true"
"Which is the birth place of M. W. Hopkins?"," X1-be-is-null,X2-which-Which-null,X4-M. W. Hopkins-M.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-M. W. Hopkins,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-M. W. Hopkins-M.-null, X1-subj-X2,X1-obj-X3,X4-has_name-M. W. Hopkins,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, M. W. Hopkins, M., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, M. W. Hopkins, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, M. W. Hopkins, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""M\\. W\\. Hopkins"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Harwinton, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/harwintonconnecticutunitedstates"",     ""snameArtist3"": ""M. W. Hopkins"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2293""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2293"",""label"":""M. W. Hopkins"",""placeLabel"":""Harwinton, Connecticut, United States""}]","true"
"Which is the birth place of Wade Hampton McVay?"," X1-be-is-null,X2-which-Which-null,X4-Wade Hampton McVay-Wade-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Wade Hampton McVay,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Wade Hampton McVay-Wade-null, X1-subj-X2,X1-obj-X3,X4-has_name-Wade Hampton McVay,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Wade Hampton McVay, Wade, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Wade Hampton McVay, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Wade Hampton McVay, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Wade Hampton McVay"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Venice, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/venicecaliforniaunitedstates"",     ""snameArtist3"": ""Wade Hampton McVay"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27525""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27525"",""label"":""Wade Hampton McVay"",""placeLabel"":""Venice, California, United States""}]","true"
"Which is the birth place of Marion A. Epting?"," X1-be-is-null,X2-which-Which-null,X4-Marion A. Epting-Marion-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Marion A. Epting,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Marion A. Epting-Marion-null, X1-subj-X2,X1-obj-X3,X4-has_name-Marion A. Epting,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Marion A. Epting, Marion, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Marion A. Epting, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Marion A. Epting, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Marion A\\. Epting"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Forrest, Mississippi, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/forrestmississippiunitedstates"",     ""snameArtist3"": ""Marion A. Epting"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1452""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1452"",""label"":""Marion A. Epting"",""placeLabel"":""Forrest, Mississippi, United States""}]","true"
"Which is the birth place of Betty Spindler?"," X1-be-is-null,X2-which-Which-null,X4-Betty Spindler-Betty-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Betty Spindler,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Betty Spindler-Betty-null, X1-subj-X2,X1-obj-X3,X4-has_name-Betty Spindler,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Betty Spindler, Betty, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Betty Spindler, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Betty Spindler, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Betty Spindler"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Long Beach, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/longbeachcaliforniaunitedstates"",     ""snameArtist3"": ""Betty Spindler"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27401""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27401"",""label"":""Betty Spindler"",""placeLabel"":""Long Beach, California, United States""}]","true"
"Which is the birth place of Townend Glover?"," X1-be-is-null,X2-which-Which-null,X4-Townend Glover-Townend-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Townend Glover,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Townend Glover-Townend-null, X1-subj-X2,X1-obj-X3,X4-has_name-Townend Glover,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Townend Glover, Townend, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Townend Glover, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Townend Glover, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Townend Glover"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Rio de Janeiro, Brazil"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/riodejaneirobrazil"",     ""snameArtist3"": ""Townend Glover"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1835""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1835"",""label"":""Townend Glover"",""placeLabel"":""Rio de Janeiro, Brazil""}]","true"
"Which is the birth place of Grant Mudford?"," X1-be-is-null,X2-which-Which-null,X4-grant Mudford-Grant-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-grant Mudford,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-grant Mudford-Grant-null, X1-subj-X2,X1-obj-X3,X4-has_name-grant Mudford,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, grant Mudford, Grant, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, grant Mudford, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, grant Mudford, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""grant Mudford"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Sydney, New South Wales, Australia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sydneynewsouthwalesaustralia"",     ""snameArtist3"": ""Grant Mudford"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18501""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18501"",""label"":""Grant Mudford"",""placeLabel"":""Sydney, New South Wales, Australia""}]","true"
"Which is the birth place of Elisabetta Sirani?"," X1-be-is-null,X2-which-Which-null,X4-Elisabetta Sirani-Elisabetta-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Elisabetta Sirani,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Elisabetta Sirani-Elisabetta-null, X1-subj-X2,X1-obj-X3,X4-has_name-Elisabetta Sirani,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Elisabetta Sirani, Elisabetta, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Elisabetta Sirani, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Elisabetta Sirani, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Elisabetta Sirani"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Bologna, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bolognaitaly"",     ""snameArtist3"": ""Elisabetta Sirani"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/17968""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/17968"",""label"":""Elisabetta Sirani"",""placeLabel"":""Bologna, Italy""}]","true"
"Which is the birth place of Adolf Benca?"," X1-be-is-null,X2-which-Which-null,X4-Adolf Benca-Adolf-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Adolf Benca,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Adolf Benca-Adolf-null, X1-subj-X2,X1-obj-X3,X4-has_name-Adolf Benca,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Adolf Benca, Adolf, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Adolf Benca, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Adolf Benca, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Adolf Benca"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Czechoslovakia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/czechoslovakia"",     ""snameArtist3"": ""Adolf Benca"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/335""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/335"",""label"":""Adolf Benca"",""placeLabel"":""Czechoslovakia""}]","true"
"Which is the birth place of Owen Garde?"," X1-be-is-null,X2-which-Which-null,X4-Owen Garde-Owen-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Owen Garde,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Owen Garde-Owen-null, X1-subj-X2,X1-obj-X3,X4-has_name-Owen Garde,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Owen Garde, Owen, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Owen Garde, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Owen Garde, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Owen Garde"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Adelaide, Australia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/adelaideaustralia"",     ""snameArtist3"": ""Owen Garde"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1733""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1733"",""label"":""Owen Garde"",""placeLabel"":""Adelaide, Australia""}]","true"
"Which is the birth place of John Salt?"," X1-be-is-null,X2-which-Which-null,X4-John Salt-John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John Salt,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John Salt-John-null, X1-subj-X2,X1-obj-X3,X4-has_name-John Salt,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John Salt, John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John Salt, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John Salt, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Salt"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Birmingham, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/birminghamengland"",     ""snameArtist3"": ""John Salt"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4224""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4224"",""label"":""John Salt"",""placeLabel"":""Birmingham, England""}]","true"
"Which is the birth place of Theodore Augustus Mills?"," X1-be-is-null,X2-which-Which-null,X4-Theodore Augustus Mills-Theodore-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Theodore Augustus Mills,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Theodore Augustus Mills-Theodore-null, X1-subj-X2,X1-obj-X3,X4-has_name-Theodore Augustus Mills,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Theodore Augustus Mills, Theodore, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Theodore Augustus Mills, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Theodore Augustus Mills, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Theodore Augustus Mills"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Charleston, South Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/charlestonsouthcarolinaunitedstates"",     ""snameArtist3"": ""Theodore Augustus Mills"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3346""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3346"",""label"":""Theodore Augustus Mills"",""placeLabel"":""Charleston, South Carolina, United States""}]","true"
"Which is the birth place of Clay Grigsby?"," X1-be-is-null,X2-which-Which-null,X4-Clay Grigsby-Clay-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Clay Grigsby,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Clay Grigsby-Clay-null, X1-subj-X2,X1-obj-X3,X4-has_name-Clay Grigsby,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Clay Grigsby, Clay, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Clay Grigsby, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Clay Grigsby, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Clay Grigsby"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Cleveland, Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/clevelandtennesseeunitedstates"",     ""snameArtist3"": ""Clay Grigsby"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27335""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27335"",""label"":""Clay Grigsby"",""placeLabel"":""Cleveland, Tennessee, United States""}]","true"
"Which is the birth place of William Gebhardt?"," X1-be-is-null,X2-which-Which-null,X4-William Gebhardt-William-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-William Gebhardt,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-William Gebhardt-William-null, X1-subj-X2,X1-obj-X3,X4-has_name-William Gebhardt,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, William Gebhardt, William, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, William Gebhardt, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, William Gebhardt, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William Gebhardt"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Franklin, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/franklinohiounitedstates"",     ""snameArtist3"": ""William Gebhardt"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1764""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1764"",""label"":""William Gebhardt"",""placeLabel"":""Franklin, Ohio, United States""}]","true"
"Which is the birth place of Samuel Valentine Hunt?"," X1-be-is-null,X2-which-Which-null,X4-Samuel Valentine Hunt-Samuel-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Samuel Valentine Hunt,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Samuel Valentine Hunt-Samuel-null, X1-subj-X2,X1-obj-X3,X4-has_name-Samuel Valentine Hunt,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Samuel Valentine Hunt, Samuel, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Samuel Valentine Hunt, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Samuel Valentine Hunt, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Samuel Valentine Hunt"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Norwich, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/norwichengland"",     ""snameArtist3"": ""Samuel Valentine Hunt"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2358""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2358"",""label"":""Samuel Valentine Hunt"",""placeLabel"":""Norwich, England""}]","true"
"Which is the birth place of David Underwood?"," X1-be-is-null,X2-which-Which-null,X4-David Underwood-David-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-David Underwood,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-David Underwood-David-null, X1-subj-X2,X1-obj-X3,X4-has_name-David Underwood,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, David Underwood, David, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, David Underwood, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, David Underwood, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David Underwood"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Columbus, Ohio"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/columbusohio"",     ""snameArtist3"": ""David Underwood"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/28138""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/28138"",""label"":""David Underwood"",""placeLabel"":""Columbus, Ohio""}]","true"
"Which is the birth place of Brother Thomas Bezanson?"," X1-be-is-null,X2-which-Which-null,X4-Brother Thomas Bezanson-Brother-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Brother Thomas Bezanson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Brother Thomas Bezanson-Brother-null, X1-subj-X2,X1-obj-X3,X4-has_name-Brother Thomas Bezanson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Brother Thomas Bezanson, Brother, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Brother Thomas Bezanson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Brother Thomas Bezanson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Brother Thomas Bezanson"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Halifax, Nova Scotia, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/halifaxnovascotiacanada"",     ""snameArtist3"": ""Brother Thomas Bezanson"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/6867""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/6867"",""label"":""Brother Thomas Bezanson"",""placeLabel"":""Halifax, Nova Scotia, Canada""}]","true"
"Which is the birth place of Boris Gorelick?"," X1-be-is-null,X2-which-Which-null,X4-Boris Gorelick-Boris-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Boris Gorelick,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Boris Gorelick-Boris-null, X1-subj-X2,X1-obj-X3,X4-has_name-Boris Gorelick,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Boris Gorelick, Boris, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Boris Gorelick, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Boris Gorelick, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Boris Gorelick"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/russia"",     ""snameArtist3"": ""Boris Gorelick"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1880""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1880"",""label"":""Boris Gorelick"",""placeLabel"":""Russia""}]","true"
"Which is the birth place of Red Weldon Sandlin?"," X1-be-is-null,X2-which-Which-null,X4-Red Weldon Sandlin-Red-null,X3-birth place-birth place-the, X1-subj-X2,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Red Weldon Sandlin-Red-null, X1-subj-X2,X1-obj-X3,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Red Weldon Sandlin, Red, ADJ, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Red Weldon Sandlin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 1
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. }"," [   {     ""snameBirthPlace4"": ""Fargo, North Dakota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fargonorthdakotaunitedstates""   },   {     ""snameBirthPlace4"": ""Cynwyd, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cynwydpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Brainerd, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/brainerdminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Bear Creek, Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bearcreekalabamaunitedstates""   },   {     ""snameBirthPlace4"": ""Ashtabula, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ashtabulaohiounitedstates""   },   {     ""snameBirthPlace4"": ""Bellefontaine, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bellefontaineohiounitedstates""   },   {     ""snameBirthPlace4"": ""Dokkum, Friesland, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dokkumfrieslandnetherlands""   },   {     ""snameBirthPlace4"": ""Auburn, Nebraska, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/auburnnebraskaunitedstates""   },   {     ""snameBirthPlace4"": ""Aberdeen, South Dakota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/aberdeensouthdakotaunitedstates""   },   {     ""snameBirthPlace4"": ""Caledonia, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/caledoniaiowaunitedstates""   },   {     ""snameBirthPlace4"": ""East Orange, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eastorangenewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/germany""   },   {     ""snameBirthPlace4"": ""Buchanan, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/buchananvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Dearborn, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dearbornmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Grand Passage, Nova Scotia, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/grandpassagenovascotiacanada""   },   {     ""snameBirthPlace4"": ""Exeter, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/exeternewhampshireunitedstates""   },   {     ""snameBirthPlace4"": ""Clinton, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/clintonmissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Dieuze, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dieuzefrance""   },   {     ""snameBirthPlace4"": ""Copenhagen, Denmark"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/copenhagendenmark""   },   {     ""snameBirthPlace4"": ""Aberdeen, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/aberdeenwashingtonunitedstates""   },   {     ""snameBirthPlace4"": ""Doster, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dostermichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Brest-Litovsk, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/brestlitovskrussia""   },   {     ""snameBirthPlace4"": ""Deerfield, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/deerfieldmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Bloomington, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bloomingtonindianaunitedstates""   },   {     ""snameBirthPlace4"": ""El Paso, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/elpasoillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Bathgate, North Dakota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bathgatenorthdakotaunitedstates""   },   {     ""snameBirthPlace4"": ""Elida, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/elidaohiounitedstates""   },   {     ""snameBirthPlace4"": ""Butte, Montana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/buttemontanaunitedstates""   },   {     ""snameBirthPlace4"": ""Halberstadt, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/halberstadtgermany""   },   {     ""snameBirthPlace4"": ""French Camp, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/frenchcampcaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Deadwood, South Dakota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/deadwoodsouthdakotaunitedstates""   },   {     ""snameBirthPlace4"": ""Bridgeport, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bridgeportconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Independence, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/independencemissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Franklin, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/franklinohiounitedstates""   },   {     ""snameBirthPlace4"": ""Canton, China"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cantonchina""   },   {     ""snameBirthPlace4"": ""Chamagne, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chamagnefrance""   },   {     ""snameBirthPlace4"": ""Corpus Christi, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/corpuschristitexasunitedstates""   },   {     ""snameBirthPlace4"": ""Bay Village, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bayvillageohiounitedstates""   },   {     ""snameBirthPlace4"": ""Cordova, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cordovanewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Guadalajara, Mexico"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/guadalajaramexico""   },   {     ""snameBirthPlace4"": ""Cedar Falls, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cedarfallsiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Ekaterinislav, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ekaterinislavrussia""   },   {     ""snameBirthPlace4"": ""Bristol, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bristolpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Athens, Greece"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/athensgreece""   },   {     ""snameBirthPlace4"": ""Endwell, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/endwellnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Bologna, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bolognaitaly""   },   {     ""snameBirthPlace4"": ""Cuthbert, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cuthbertgeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Dusseldorf, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dusseldorfgermany""   },   {     ""snameBirthPlace4"": ""Greenfield, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/greenfieldnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Evanston, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/evanstonillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Auburn, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/auburncaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Chester, South Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chestersouthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Birmingham, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/birminghamengland""   },   {     ""snameBirthPlace4"": ""Ames, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/amesiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Cleveland, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/clevelandgeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Bricelyn, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bricelynminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Hogansburg, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hogansburgnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Barre, Vermont, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/barrevermontunitedstates""   },   {     ""snameBirthPlace4"": ""Armenia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/armenia""   },   {     ""snameBirthPlace4"": ""Hillsboro, Maryland, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hillsboromarylandunitedstates""   },   {     ""snameBirthPlace4"": ""Bluefield, West Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bluefieldwestvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Erin, Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/erintennesseeunitedstates""   },   {     ""snameBirthPlace4"": ""Havana, Cuba"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/havanacuba""   },   {     ""snameBirthPlace4"": ""El Paso, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/elpasotexasunitedstates""   },   {     ""snameBirthPlace4"": ""Charleston, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/charlestonillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/iowaunitedstates""   },   {     ""snameBirthPlace4"": ""Fort Scott, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fortscottkansasunitedstates""   },   {     ""snameBirthPlace4"": ""Hanamaki, Iwate Prefecture, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hanamakiiwateprefecturejapan""   },   {     ""snameBirthPlace4"": ""Augusta, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/augustageorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Glendale, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/glendalecaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Elizabeth, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/elizabethnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Irvington, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/irvingtonnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Graylord, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/graylordminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Gilman, Colorado, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gilmancoloradounitedstates""   },   {     ""snameBirthPlace4"": ""Dallas, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dallastexasunitedstates""   },   {     ""snameBirthPlace4"": ""Council Bluffs, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/councilbluffsiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Eau Claire, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eauclairewisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Bellefonte, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bellefontepennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Chamberlain, South Dakota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chamberlainsouthdakotaunitedstates""   },   {     ""snameBirthPlace4"": ""Hoxie, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hoxiekansasunitedstates""   },   {     ""snameBirthPlace4"": ""Chester, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chesterpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Dublin, Ireland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dublinireland""   },   {     ""snameBirthPlace4"": ""Belmond, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/belmondiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Eutingen, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eutingengermany""   },   {     ""snameBirthPlace4"": ""Hart, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hartmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Cheyenne, Wyoming, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cheyennewyomingunitedstates""   },   {     ""snameBirthPlace4"": ""Clarksburg, West Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/clarksburgwestvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Czechoslovakia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/czechoslovakia""   },   {     ""snameBirthPlace4"": ""Bourg-en-Bresse, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bourgenbressefrance""   },   {     ""snameBirthPlace4"": ""Hollywood, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hollywoodcaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Fort Dodge, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fortdodgeiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Almeria, Andalusia, Spain"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/almeriaandalusiaspain""   },   {     ""snameBirthPlace4"": ""Hebron, Nova Scotia, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hebronnovascotiacanada""   },   {     ""snameBirthPlace4"": ""Beloit, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/beloitwisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Broomsgrove, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/broomsgroveengland""   },   {     ""snameBirthPlace4"": ""Champaign, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/champaignillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Gottingen, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gottingengermany""   },   {     ""snameBirthPlace4"": ""Gainesville, Florida, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gainesvillefloridaunitedstates""   },   {     ""snameBirthPlace4"": ""Coaldale, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/coaldalepennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Fairfax, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fairfaxvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Ataki, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/atakirussia""   },   {     ""snameBirthPlace4"": ""Binghamton, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/binghamtonnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Cortland, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cortlandnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Hilo, Hawaii, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hilohawaiiunitedstates""   },   {     ""snameBirthPlace4"": ""Bucharest, Romania"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bucharestromania""   },   {     ""snameBirthPlace4"": ""China"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/china""   },   {     ""snameBirthPlace4"": ""Emden, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/emdengermany""   },   {     ""snameBirthPlace4"": ""Fox Valley, Oregon, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/foxvalleyoregonunitedstates""   },   {     ""snameBirthPlace4"": ""Frankfort, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/frankfortindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Haverhill, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/haverhillmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Baxter Springs, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/baxterspringskansasunitedstates""   },   {     ""snameBirthPlace4"": ""Greencastle, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/greencastleindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Berwick, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/berwickpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Finleyville, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/finleyvillepennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Cento, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/centoitaly""   },   {     ""snameBirthPlace4"": ""Cairo, Egypt"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cairoegypt""   },   {     ""snameBirthPlace4"": ""Bordeaux, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bordeauxfrance""   },   {     ""snameBirthPlace4"": ""Chantilly, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chantillyfrance""   },   {     ""snameBirthPlace4"": ""Greenwich, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/greenwichengland""   },   {     ""snameBirthPlace4"": ""Glatz, Prussia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/glatzprussia""   },   {     ""snameBirthPlace4"": ""Danzig, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/danziggermany""   },   {     ""snameBirthPlace4"": ""Budingen, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/budingengermany""   },   {     ""snameBirthPlace4"": ""Bowie, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bowietexasunitedstates""   },   {     ""snameBirthPlace4"": ""Hutchinson, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hutchinsonkansasunitedstates""   },   {     ""snameBirthPlace4"": ""Halsey, Oregon, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/halseyoregonunitedstates""   },   {     ""snameBirthPlace4"": ""Bialystok, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bialystokrussia""   },   {     ""snameBirthPlace4"": ""Entrien, Ireland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/entrienireland""   },   {     ""snameBirthPlace4"": ""Elloree, South Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/elloreesouthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Garland, Utah, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/garlandutahunitedstates""   },   {     ""snameBirthPlace4"": ""Blossburg, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/blossburgpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Bucyrus, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bucyrusohiounitedstates""   },   {     ""snameBirthPlace4"": ""Aberdeen, Scotland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/aberdeenscotland""   },   {     ""snameBirthPlace4"": ""Essex, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/essexnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Cairo, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cairoillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Evansville, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/evansvilleindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Dorchester, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dorchestermassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Hartford, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hartfordnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Courtland, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/courtlandkansasunitedstates""   },   {     ""snameBirthPlace4"": ""Guilford, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/guilfordconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Hamilton, Ontario, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hamiltonontariocanada""   },   {     ""snameBirthPlace4"": ""Berneck, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/berneckgermany""   },   {     ""snameBirthPlace4"": ""Alton, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/altonnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Couterne, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/couternefrance""   },   {     ""snameBirthPlace4"": ""Beckley, West Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/beckleywestvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Bremen, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bremengermany""   },   {     ""snameBirthPlace4"": ""Dayton, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/daytonohiounitedstates""   },   {     ""snameBirthPlace4"": ""Falun, Sweden"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/falunsweden""   },   {     ""snameBirthPlace4"": ""Falmouth, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/falmouthmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Hastings, Nebraska, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hastingsnebraskaunitedstates""   },   {     ""snameBirthPlace4"": ""Haddock, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/haddockgeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Allegheny, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/alleghenypennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Bamberg, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bamberggermany""   },   {     ""snameBirthPlace4"": ""Carthage, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/carthagemissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Honjo, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/honjojapan""   },   {     ""snameBirthPlace4"": ""Ellsworth, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ellsworthmaineunitedstates""   },   {     ""snameBirthPlace4"": ""Cadiz, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cadizohiounitedstates""   },   {     ""snameBirthPlace4"": ""Freiburg, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/freiburggermany""   },   {     ""snameBirthPlace4"": ""Harwinton, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/harwintonconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Hudson, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hudsonmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Concord, Vermont, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/concordvermontunitedstates""   },   {     ""snameBirthPlace4"": ""Galati, Romania"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/galatiromania""   },   {     ""snameBirthPlace4"": ""Dordrecht, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dordrechtnetherlands""   },   {     ""snameBirthPlace4"": ""Dunmanway, Ireland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dunmanwayireland""   },   {     ""snameBirthPlace4"": ""Cedar Rapids, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cedarrapidsiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Bisbee, Arizona, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bisbeearizonaunitedstates""   },   {     ""snameBirthPlace4"": ""Elkhorn, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/elkhornwisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Brattleboro, Vermont, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/brattleborovermontunitedstates""   },   {     ""snameBirthPlace4"": ""Hasbrouck Heights, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hasbrouckheightsnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Grand Haven, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/grandhavenmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Canterbury, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/canterburynewhampshireunitedstates""   },   {     ""snameBirthPlace4"": ""Ballaghaderrin, Ireland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ballaghaderrinireland""   },   {     ""snameBirthPlace4"": ""Coventry, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/coventryconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Hamden, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hamdenconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Colon, Panama"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/colonpanama""   },   {     ""snameBirthPlace4"": ""Bath, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bathmaineunitedstates""   },   {     ""snameBirthPlace4"": ""Covington, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/covingtonohiounitedstates""   },   {     ""snameBirthPlace4"": ""Beverly, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/beverlymassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Cody, Wyoming, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/codywyomingunitedstates""   },   {     ""snameBirthPlace4"": ""Billings, Montana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/billingsmontanaunitedstates""   },   {     ""snameBirthPlace4"": ""Grand Forks, North Dakota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/grandforksnorthdakotaunitedstates""   },   {     ""snameBirthPlace4"": ""Greensboro, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/greensboronorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Florence, South Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/florencesouthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Highland Park, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/highlandparkillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Clarksville, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/clarksvilletexasunitedstates""   },   {     ""snameBirthPlace4"": ""Ilion, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ilionnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Dillingen, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dillingengermany""   },   {     ""snameBirthPlace4"": ""Indianola, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/indianolaiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Indian Mills, West Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/indianmillswestvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Galena, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/galenakansasunitedstates""   },   {     ""snameBirthPlace4"": ""Chariton, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/charitoniowaunitedstates""   },   {     ""snameBirthPlace4"": ""Excelsior Springs, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/excelsiorspringsmissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Carthage, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/carthageohiounitedstates""   },   {     ""snameBirthPlace4"": ""Great Falls, Montana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/greatfallsmontanaunitedstates""   },   {     ""snameBirthPlace4"": ""Atlantic Ocean Aggregation"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/atlanticoceanaggregation""   },   {     ""snameBirthPlace4"": ""Idaho Falls, Idaho, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/idahofallsidahounitedstates""   },   {     ""snameBirthPlace4"": ""Cornwall Island, Ontario, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cornwallislandontariocanada""   },   {     ""snameBirthPlace4"": ""Cooperstown, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cooperstownnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Carrigtwohill, Ireland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/carrigtwohillireland""   },   {     ""snameBirthPlace4"": ""Geneva, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/genevaohiounitedstates""   },   {     ""snameBirthPlace4"": ""Fairfield, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fairfieldwashingtonunitedstates""   },   {     ""snameBirthPlace4"": ""Fitzwilliam, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fitzwilliamnewhampshireunitedstates""   },   {     ""snameBirthPlace4"": ""Angel Island, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/angelislandcaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Fort Worth, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fortworthtexasunitedstates""   },   {     ""snameBirthPlace4"": ""Colmar, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/colmarfrance""   },   {     ""snameBirthPlace4"": ""Auburn, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/auburnmaineunitedstates""   },   {     ""snameBirthPlace4"": ""Jacksonville, Florida, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jacksonvillefloridaunitedstates""   },   {     ""snameBirthPlace4"": ""Dobbs Ferry, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dobbsferrynewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Convoy, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/convoyohiounitedstates""   },   {     ""snameBirthPlace4"": ""Browerville, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/browervilleminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Dvinsk, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dvinskrussia""   },   {     ""snameBirthPlace4"": ""Chagrin Falls, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chagrinfallsohiounitedstates""   },   {     ""snameBirthPlace4"": ""Huddersfield, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/huddersfieldengland""   },   {     ""snameBirthPlace4"": ""Garrett Park, Maryland, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/garrettparkmarylandunitedstates""   },   {     ""snameBirthPlace4"": ""Akron, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/akronohiounitedstates""   },   {     ""snameBirthPlace4"": ""Delavan, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/delavanwisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Danzig, Poland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/danzigpoland""   },   {     ""snameBirthPlace4"": ""Hagen, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hagengermany""   },   {     ""snameBirthPlace4"": ""Bergen, Norway"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bergennorway""   },   {     ""snameBirthPlace4"": ""Groningen, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/groningennetherlands""   },   {     ""snameBirthPlace4"": ""Doylestown, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/doylestownpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Baiersbronn, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/baiersbronngermany""   },   {     ""snameBirthPlace4"": ""Fort Leonard Wood, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fortleonardwoodmissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Gowanda, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gowandanewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Grainville, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/grainvilleohiounitedstates""   },   {     ""snameBirthPlace4"": ""Great Neck, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/greatnecknewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Freeport, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/freeportillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Budapest, Austria-Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/budapestaustriahungary""   },   {     ""snameBirthPlace4"": ""Hamburg, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hamburggermany""   },   {     ""snameBirthPlace4"": ""Hutchinson, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hutchinsonminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Itzkany, Austria-Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/itzkanyaustriahungary""   },   {     ""snameBirthPlace4"": ""Hermann, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hermannmissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Cowgill, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cowgillmissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Aker, Norway"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/akernorway""   },   {     ""snameBirthPlace4"": ""Gabrovo, Bulgaria"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gabrovobulgaria""   },   {     ""snameBirthPlace4"": ""Casablanca, Morocco"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/casablancamorocco""   },   {     ""snameBirthPlace4"": ""Arpino, Lazio, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/arpinolazioitaly""   },   {     ""snameBirthPlace4"": ""Fort Gibson, Oklahoma, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fortgibsonoklahomaunitedstates""   },   {     ""snameBirthPlace4"": ""Fort Belvoir, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fortbelvoirvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Beach Grove, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/beachgroveindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Appleton, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/appletonwisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Cleveland, Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/clevelandtennesseeunitedstates""   },   {     ""snameBirthPlace4"": ""Fontana, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fontanacaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Booklyn, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/booklynnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Grantsville, Maryland, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/grantsvillemarylandunitedstates""   },   {     ""snameBirthPlace4"": ""Dennenlohe, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dennenlohegermany""   },   {     ""snameBirthPlace4"": ""Geneva, Switzerland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/genevaswitzerland""   },   {     ""snameBirthPlace4"": ""Burgettstown, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/burgettstownpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Borja, Spain"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/borjaspain""   },   {     ""snameBirthPlace4"": ""East Lothian, United Kingdom"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eastlothianunitedkingdom""   },   {     ""snameBirthPlace4"": ""Austria"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/austria""   },   {     ""snameBirthPlace4"": ""Brunswick, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/brunswickgermany""   },   {     ""snameBirthPlace4"": ""Bay St. Louis, Mississippi, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/baystlouismississippiunitedstates""   },   {     ""snameBirthPlace4"": ""Anniston, Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/annistonalabamaunitedstates""   },   {     ""snameBirthPlace4"": ""Germantown, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/germantownpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Clearwater, Florida, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/clearwaterfloridaunitedstates""   },   {     ""snameBirthPlace4"": ""Dybbol, North Slesvig, Denmark"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dybbolnorthslesvigdenmark""   },   {     ""snameBirthPlace4"": ""Arlington, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/arlingtonvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Cheb, Czechoslovakia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chebczechoslovakia""   },   {     ""snameBirthPlace4"": ""Huntington Park, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/huntingtonparkcaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Dover, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dovernewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Cookeville, Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cookevilletennesseeunitedstates""   },   {     ""snameBirthPlace4"": ""Broseley, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/broseleymissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Dublin, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dublinnewhampshireunitedstates""   },   {     ""snameBirthPlace4"": ""Fairborn, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fairbornohiounitedstates""   },   {     ""snameBirthPlace4"": ""Changhua, Taiwan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/changhuataiwan""   },   {     ""snameBirthPlace4"": ""Harrisburg, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/harrisburgpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Eddyville, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eddyvilleiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Hamburg, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hamburgpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Clermont-Ferrand, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/clermontferrandfrance""   },   {     ""snameBirthPlace4"": ""Frostburg, Maryland, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/frostburgmarylandunitedstates""   },   {     ""snameBirthPlace4"": ""Crandon, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/crandonwisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Hong Kong, China"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hongkongchina""   },   {     ""snameBirthPlace4"": ""Dorset, Vermont, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dorsetvermontunitedstates""   },   {     ""snameBirthPlace4"": ""Baton Rouge, Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/batonrougelouisianaunitedstates""   },   {     ""snameBirthPlace4"": ""High Point, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/highpointnorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Escanaba, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/escanabamichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Charleroi, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/charleroipennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Huntington Beach, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/huntingtonbeachcaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Antigo, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/antigowisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Duluth, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/duluthminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Elyria, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/elyriaohiounitedstates""   },   {     ""snameBirthPlace4"": ""Baraboo, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/baraboowisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Ft. Still, Oklahoma, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ftstilloklahomaunitedstates""   },   {     ""snameBirthPlace4"": ""Carmi, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/carmiillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Gallup, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gallupnewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Hazard, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hazardkentuckyunitedstates""   },   {     ""snameBirthPlace4"": ""Cape Cod, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/capecodmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Corning, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/corningcaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Helena, Montana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/helenamontanaunitedstates""   },   {     ""snameBirthPlace4"": ""Glenview, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/glenviewillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Idaho, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/idahounitedstates""   },   {     ""snameBirthPlace4"": ""Alexandria, Egypt"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/alexandriaegypt""   },   {     ""snameBirthPlace4"": ""Clearfield, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/clearfieldpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Arnold, Nottinghamshire, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/arnoldnottinghamshireengland""   },   {     ""snameBirthPlace4"": ""Columbus, Ohio"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/columbusohio""   },   {     ""snameBirthPlace4"": ""Fourquevoux, Haute-Garonne, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fourquevouxhautegaronnefrance""   },   {     ""snameBirthPlace4"": ""Eatonton, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eatontongeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Concarneau, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/concarneaufrance""   },   {     ""snameBirthPlace4"": ""Atlantic City, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/atlanticcitynewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Dodge City, Kansas"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dodgecitykansas""   },   {     ""snameBirthPlace4"": ""Hanover, New Hampshire"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hanovernewhampshire""   },   {     ""snameBirthPlace4"": ""Angola, Indiana"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/angolaindiana""   },   {     ""snameBirthPlace4"": ""Berkeley, California"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/berkeleycalifornia""   },   {     ""snameBirthPlace4"": ""Bristol, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bristolengland""   },   {     ""snameBirthPlace4"": ""Halifax, Nova Scotia, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/halifaxnovascotiacanada""   },   {     ""snameBirthPlace4"": ""Brewster, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/brewsternewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Framingham, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/framinghammassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Bergamo, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bergamoitaly""   },   {     ""snameBirthPlace4"": ""Alexandria, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/alexandriaminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Champsecret, Orne, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/champsecretornefrance""   },   {     ""snameBirthPlace4"": ""Dixiana, South Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dixianasouthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Haag, Austria"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/haagaustria""   },   {     ""snameBirthPlace4"": ""Aledo, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/aledoillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Dresher, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dresherpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Charlotte, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/charlottenorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Argentan, Orne, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/argentanornefrance""   },   {     ""snameBirthPlace4"": ""Dijon, Cote-d'Or, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dijoncotedorfrance""   },   {     ""snameBirthPlace4"": ""Dijon, Cote d'Or, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dijoncotedorfrance""   },   {     ""snameBirthPlace4"": ""Addis Ababa, Ethiopia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/addisababaethiopia""   },   {     ""snameBirthPlace4"": ""Inchon, Korea"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/inchonkorea""   },   {     ""snameBirthPlace4"": ""Belle Plaine, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/belleplaineiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Falling Waters, West Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fallingwaterswestvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Galich, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/galichrussia""   },   {     ""snameBirthPlace4"": ""Allentown, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/allentownpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Bethlehem, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bethlehempennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Houlton, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/houltonmaineunitedstates""   },   {     ""snameBirthPlace4"": ""Fort Atkinson, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fortatkinsonwisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Gallipolis, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gallipolisohiounitedstates""   },   {     ""snameBirthPlace4"": ""Adelaide, Australia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/adelaideaustralia""   },   {     ""snameBirthPlace4"": ""Elmira, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/elmiranewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Hitchin, Hertfordshire, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hitchinhertfordshireengland""   },   {     ""snameBirthPlace4"": ""Everett, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/everettpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Biloxi, Mississippi, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/biloximississippiunitedstates""   },   {     ""snameBirthPlace4"": ""Algiers, Algeria"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/algiersalgeria""   },   {     ""snameBirthPlace4"": ""Iran"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/iran""   },   {     ""snameBirthPlace4"": ""Bradford, West Yorkshire, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bradfordwestyorkshireengland""   },   {     ""snameBirthPlace4"": ""Greenbush, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/greenbushnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Caltabellotta, Sicily, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/caltabellottasicilyitaly""   },   {     ""snameBirthPlace4"": ""Georgetown, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/georgetowntexasunitedstates""   },   {     ""snameBirthPlace4"": ""Fresnillo, Mexico"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fresnillomexico""   },   {     ""snameBirthPlace4"": ""Glasgow, Scotland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/glasgowscotland""   },   {     ""snameBirthPlace4"": ""Concord, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/concordcaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Ellenville, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ellenvillenewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/france""   },   {     ""snameBirthPlace4"": ""East Lansing, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eastlansingmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Castro Valley, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/castrovalleycaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Hawaii, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hawaiiunitedstates""   },   {     ""snameBirthPlace4"": ""Barcelona, Spain"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/barcelonaspain""   },   {     ""snameBirthPlace4"": ""Frankfurt, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/frankfurtgermany""   },   {     ""snameBirthPlace4"": ""Bridgehampton, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bridgehamptonnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Danbury, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/danburyconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Dijon, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dijonfrance""   },   {     ""snameBirthPlace4"": ""Alexandria, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/alexandriavirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Augsburg, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/augsburggermany""   },   {     ""snameBirthPlace4"": ""Great Barrington, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/greatbarringtonmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Durham, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/durhamnorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Arcadia, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/arcadiacaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Austin, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/austintexasunitedstates""   },   {     ""snameBirthPlace4"": ""Concord, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/concordnewhampshireunitedstates""   },   {     ""snameBirthPlace4"": ""Chattanooga, Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chattanoogatennesseeunitedstates""   },   {     ""snameBirthPlace4"": ""Attleborough, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/attleboroughpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Geneseo, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/geneseoillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Albia, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/albiaiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Buffalo, New York"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/buffalonewyork""   },   {     ""snameBirthPlace4"": ""Colorado, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/coloradounitedstates""   },   {     ""snameBirthPlace4"": ""Agapova, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/agapovarussia""   },   {     ""snameBirthPlace4"": ""Amarillo, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/amarillotexasunitedstates""   },   {     ""snameBirthPlace4"": ""Breslau, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/breslaugermany""   },   {     ""snameBirthPlace4"": ""Canaan, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/canaanconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Jackson, Mississippi, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jacksonmississippiunitedstates""   },   {     ""snameBirthPlace4"": ""Hanover, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hanovernewhampshireunitedstates""   },   {     ""snameBirthPlace4"": ""Altadena, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/altadenacaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Limerick, Ireland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/limerickireland""   },   {     ""snameBirthPlace4"": ""Pennsauken, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pennsaukennewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kansasunitedstates""   },   {     ""snameBirthPlace4"": ""Paducah, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/paducahkentuckyunitedstates""   },   {     ""snameBirthPlace4"": ""Lima, Peru"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/limaperu""   },   {     ""snameBirthPlace4"": ""Sacramento, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sacramentocaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Louisville, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/louisvillekentuckyunitedstates""   },   {     ""snameBirthPlace4"": ""Northampton, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/northamptonmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Le Locle, Switzerland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lelocleswitzerland""   },   {     ""snameBirthPlace4"": ""Reus, Catalonia, Spain"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/reuscataloniaspain""   },   {     ""snameBirthPlace4"": ""Norway"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/norway""   },   {     ""snameBirthPlace4"": ""North Anson, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/northansonmaineunitedstates""   },   {     ""snameBirthPlace4"": ""Le Mans, Sarthe, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lemanssarthefrance""   },   {     ""snameBirthPlace4"": ""Maastricht, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/maastrichtnetherlands""   },   {     ""snameBirthPlace4"": ""Medicine Park, Oklahoma, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/medicineparkoklahomaunitedstates""   },   {     ""snameBirthPlace4"": ""New Brunswick, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newbrunswickmaineunitedstates""   },   {     ""snameBirthPlace4"": ""Rockville, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rockvilleindianaunitedstates""   },   {     ""snameBirthPlace4"": ""San Diego, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sandiegocaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Lyons, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lyonsfrance""   },   {     ""snameBirthPlace4"": ""Ossining, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ossiningnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Les Cayes, Haiti"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lescayeshaiti""   },   {     ""snameBirthPlace4"": ""Marblehead, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/marbleheadmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Lima, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/limaohiounitedstates""   },   {     ""snameBirthPlace4"": ""Palo Alto, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/paloaltocaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""New Ulm, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newulmminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Placerville, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/placervillecaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/russia""   },   {     ""snameBirthPlace4"": ""North Manchester, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/northmanchesterindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Jamesville, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jamesvillenewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Monaco"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/monaco""   },   {     ""snameBirthPlace4"": ""Pistoia, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pistoiaitaly""   },   {     ""snameBirthPlace4"": ""Lowell, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lowellmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Passau, Bavaria, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/passaubavariagermany""   },   {     ""snameBirthPlace4"": ""Mulligar, Ireland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mulligarireland""   },   {     ""snameBirthPlace4"": ""Sand Bank, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sandbanknewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Sagetown, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sagetownillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""La Grande, Oregon, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lagrandeoregonunitedstates""   },   {     ""snameBirthPlace4"": ""Manhattan, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/manhattankansasunitedstates""   },   {     ""snameBirthPlace4"": ""Merseburg, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/merseburggermany""   },   {     ""snameBirthPlace4"": ""Krivoi Rog, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/krivoirogrussia""   },   {     ""snameBirthPlace4"": ""Marseille, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/marseillefrance""   },   {     ""snameBirthPlace4"": ""Naushon Island, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/naushonislandmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""San Ildefonso Pueblo, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sanildefonsopueblonewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Mare Island, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mareislandcaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Roselle Park, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/roselleparknewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""La Paz, Bolivia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lapazbolivia""   },   {     ""snameBirthPlace4"": ""North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/northcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Lincoln, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lincolnillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Kielce, Poland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kielcepoland""   },   {     ""snameBirthPlace4"": ""Oneida, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oneidanewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Kii-Nagashima-cho, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kiinagashimachojapan""   },   {     ""snameBirthPlace4"": ""Kankakee, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kankakeeillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""La Coruna, Spain"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lacorunaspain""   },   {     ""snameBirthPlace4"": ""Milan, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/milanitaly""   },   {     ""snameBirthPlace4"": ""Rochester, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rochesterminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Longbranch, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/longbranchnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""North Nodaway, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/northnodawayiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Montgomery, Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/montgomeryalabamaunitedstates""   },   {     ""snameBirthPlace4"": ""Maysville, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/maysvillegeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Montevideo, Uruguay"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/montevideouruguay""   },   {     ""snameBirthPlace4"": ""Norwood, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/norwoodmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Palos Verdes, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/palosverdescaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Marianao, Province of Havana, Cuba"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/marianaoprovinceofhavanacuba""   },   {     ""snameBirthPlace4"": ""Lincoln, Nebraska, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lincolnnebraskaunitedstates""   },   {     ""snameBirthPlace4"": ""Salt Lake City, Utah, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/saltlakecityutahunitedstates""   },   {     ""snameBirthPlace4"": ""Rio de Janeiro, Brazil"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/riodejaneirobrazil""   },   {     ""snameBirthPlace4"": ""Point Barrow, Alaska, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pointbarrowalaskaunitedstates""   },   {     ""snameBirthPlace4"": ""Melrose, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/melroseohiounitedstates""   },   {     ""snameBirthPlace4"": ""Long Beach, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/longbeachcaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Lebanon, Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lebanontennesseeunitedstates""   },   {     ""snameBirthPlace4"": ""New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Kazimierz, Poland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kazimierzpoland""   },   {     ""snameBirthPlace4"": ""Olympia, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/olympiawashingtonunitedstates""   },   {     ""snameBirthPlace4"": ""Oil City, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oilcitypennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Nagoya, Aichi Prefecture, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nagoyaaichiprefecturejapan""   },   {     ""snameBirthPlace4"": ""New London, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newlondonconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Nageezi, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nageezinewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Neptune, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/neptunenewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Nice, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nicefrance""   },   {     ""snameBirthPlace4"": ""Jersey City, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jerseycitynewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""San Angelo, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sanangelotexasunitedstates""   },   {     ""snameBirthPlace4"": ""Ridley Park, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ridleyparkpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""New Iberia, Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newiberialouisianaunitedstates""   },   {     ""snameBirthPlace4"": ""Lynwood, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lynwoodcaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Modesto, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/modestocaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Oklahoma, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oklahomaunitedstates""   },   {     ""snameBirthPlace4"": ""Oklahoma City, Oklahoma, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oklahomacityoklahomaunitedstates""   },   {     ""snameBirthPlace4"": ""Kirkland, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kirklandwashingtonunitedstates""   },   {     ""snameBirthPlace4"": ""Jefferson Island, Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jeffersonislandlouisianaunitedstates""   },   {     ""snameBirthPlace4"": ""Khorkom Vari Haiyotz Dzore, Armenia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/khorkomvarihaiyotzdzorearmenia""   },   {     ""snameBirthPlace4"": ""Neubrunen, Switzerland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/neubrunenswitzerland""   },   {     ""snameBirthPlace4"": ""Litchfield, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/litchfieldminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Salem, Oregon, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/salemoregonunitedstates""   },   {     ""snameBirthPlace4"": ""Pittsfield, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pittsfieldmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Long Beach, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/longbeachnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Oconomowoc, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oconomowocwisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Millbrook, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/millbrooknewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Ridgefield, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ridgefieldconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Neuchatel, Switzerland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/neuchatelswitzerland""   },   {     ""snameBirthPlace4"": ""Kobryn, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kobrynrussia""   },   {     ""snameBirthPlace4"": ""Picton, Ontario, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pictonontariocanada""   },   {     ""snameBirthPlace4"": ""Royalton, Indiana"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/royaltonindiana""   },   {     ""snameBirthPlace4"": ""New Brunswick, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newbrunswicknewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Montreal, Quebec, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/montrealquebeccanada""   },   {     ""snameBirthPlace4"": ""Limonest, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/limonestfrance""   },   {     ""snameBirthPlace4"": ""Los Angeles, California"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/losangelescalifornia""   },   {     ""snameBirthPlace4"": ""Marion, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/marioniowaunitedstates""   },   {     ""snameBirthPlace4"": ""Kendallville, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kendallvilleindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Oxford, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oxfordengland""   },   {     ""snameBirthPlace4"": ""Osceola, Nebraska, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/osceolanebraskaunitedstates""   },   {     ""snameBirthPlace4"": ""Ogallala, Nebraska, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ogallalanebraskaunitedstates""   },   {     ""snameBirthPlace4"": ""Kilmarnock, Scotland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kilmarnockscotland""   },   {     ""snameBirthPlace4"": ""Paisley, Scotland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/paisleyscotland""   },   {     ""snameBirthPlace4"": ""Lewiston, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lewistonmaineunitedstates""   },   {     ""snameBirthPlace4"": ""Ogden, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ogdenohiounitedstates""   },   {     ""snameBirthPlace4"": ""Pine Hill, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pinehillnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Reading, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/readingengland""   },   {     ""snameBirthPlace4"": ""Lodi, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lodiillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Manchester, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/manchestermassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Port Hope, Ontario, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/porthopeontariocanada""   },   {     ""snameBirthPlace4"": ""Port Huron, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/porthuronmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Oconto Falls, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ocontofallswisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Romania"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/romania""   },   {     ""snameBirthPlace4"": ""Meadville, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/meadvillepennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Lynden, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lyndenwashingtonunitedstates""   },   {     ""snameBirthPlace4"": ""Rushville, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rushvilleillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Lille, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lillefrance""   },   {     ""snameBirthPlace4"": ""Medford, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/medfordmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Penns Grove, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pennsgrovenewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Princeton, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/princetonnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Malvern, Arkansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/malvernarkansasunitedstates""   },   {     ""snameBirthPlace4"": ""Pen Argyl, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/penargylpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Newburgh, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newburghnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Newtown, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newtownpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Munising, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/munisingmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Newport Beach, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newportbeachcaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Milton, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/miltonmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Oshkosh, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oshkoshwisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Matsue, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/matsuejapan""   },   {     ""snameBirthPlace4"": ""Pylypcze, Ukraine"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pylypczeukraine""   },   {     ""snameBirthPlace4"": ""North Adams, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/northadamsmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Rockford, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rockfordillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Munich, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/munichgermany""   },   {     ""snameBirthPlace4"": ""Linz, Austria"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/linzaustria""   },   {     ""snameBirthPlace4"": ""Memphis, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/memphismissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Malmo, Sweden"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/malmosweden""   },   {     ""snameBirthPlace4"": ""Luray, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lurayvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Nybro, Sweden"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nybrosweden""   },   {     ""snameBirthPlace4"": ""Kampen, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kampennetherlands""   },   {     ""snameBirthPlace4"": ""Lempster, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lempsternewhampshireunitedstates""   },   {     ""snameBirthPlace4"": ""Prentice, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/prenticewisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Ravenna, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ravennaohiounitedstates""   },   {     ""snameBirthPlace4"": ""Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/louisianaunitedstates""   },   {     ""snameBirthPlace4"": ""Paola, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/paolakansasunitedstates""   },   {     ""snameBirthPlace4"": ""Potter Valley, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pottervalleycaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Little Rock, Arkansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/littlerockarkansasunitedstates""   },   {     ""snameBirthPlace4"": ""Norwich, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/norwichengland""   },   {     ""snameBirthPlace4"": ""London, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/londontexasunitedstates""   },   {     ""snameBirthPlace4"": ""Lima, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/limanewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Oakland, Maryland, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oaklandmarylandunitedstates""   },   {     ""snameBirthPlace4"": ""Montevideo, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/montevideominnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Pontypool, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pontypoolengland""   },   {     ""snameBirthPlace4"": ""Mukden, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mukdenjapan""   },   {     ""snameBirthPlace4"": ""New Castle, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newcastleindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Malden, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/maldenmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Nancy, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nancyfrance""   },   {     ""snameBirthPlace4"": ""Mexia, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mexiatexasunitedstates""   },   {     ""snameBirthPlace4"": ""Lastingham, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lastinghamengland""   },   {     ""snameBirthPlace4"": ""Petersburg, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/petersburgvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Keesville, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/keesvillenewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Neuilly-sur-Seine, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/neuillysurseinefrance""   },   {     ""snameBirthPlace4"": ""Kensington, Maryland, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kensingtonmarylandunitedstates""   },   {     ""snameBirthPlace4"": ""Lovell, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lovellmaineunitedstates""   },   {     ""snameBirthPlace4"": ""Oregon, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oregonillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Mezieres, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mezieresfrance""   },   {     ""snameBirthPlace4"": ""Namur, Belgium"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/namurbelgium""   },   {     ""snameBirthPlace4"": ""North River Mills, West Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/northrivermillswestvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Leipzig, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/leipziggermany""   },   {     ""snameBirthPlace4"": ""Kharkov, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kharkovrussia""   },   {     ""snameBirthPlace4"": ""Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/japan""   },   {     ""snameBirthPlace4"": ""Ogden, Utah, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ogdenutahunitedstates""   },   {     ""snameBirthPlace4"": ""Minsk, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/minskrussia""   },   {     ""snameBirthPlace4"": ""Poughkeepsie, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/poughkeepsienewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Pettau, Styria, Austria-Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pettaustyriaaustriahungary""   },   {     ""snameBirthPlace4"": ""Poland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/poland""   },   {     ""snameBirthPlace4"": ""Kyoto, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kyotojapan""   },   {     ""snameBirthPlace4"": ""Manlius Square, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/manliussquarenewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Perpignan, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/perpignanfrance""   },   {     ""snameBirthPlace4"": ""Minden, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mindengermany""   },   {     ""snameBirthPlace4"": ""New Brighton, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newbrightonpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Kawehnoke, Ontario, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kawehnokeontariocanada""   },   {     ""snameBirthPlace4"": ""Niedercorn, Luxembourg"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/niedercornluxembourg""   },   {     ""snameBirthPlace4"": ""Rehovoth, Israel"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rehovothisrael""   },   {     ""snameBirthPlace4"": ""Kilwinning, Scotland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kilwinningscotland""   },   {     ""snameBirthPlace4"": ""Marinette, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/marinettewisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""New Bedford, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newbedfordmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Naugatuck, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/naugatuckconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Kemerovo, U.S.S.R."",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kemerovoussr""   },   {     ""snameBirthPlace4"": ""Pilsen, Czechoslovakia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pilsenczechoslovakia""   },   {     ""snameBirthPlace4"": ""Oxford, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oxfordmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Kokomo, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kokomoindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/michiganunitedstates""   },   {     ""snameBirthPlace4"": ""Manhasset, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/manhassetnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Oak Park, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oakparkillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Loma Linda, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lomalindacaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Passaic, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/passaicnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Muncie, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/muncieindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Johannesburg, South Africa"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/johannesburgsouthafrica""   },   {     ""snameBirthPlace4"": ""Karlovy Vary, Czechoslovakia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/karlovyvaryczechoslovakia""   },   {     ""snameBirthPlace4"": ""Norristown, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/norristownpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Krosno, Poland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/krosnopoland""   },   {     ""snameBirthPlace4"": ""Princetown, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/princetownnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Prague, Czechoslovakia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pragueczechoslovakia""   },   {     ""snameBirthPlace4"": ""New York, New York"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newyorknewyork""   },   {     ""snameBirthPlace4"": ""Redwood Falls, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/redwoodfallsminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Quakertown, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/quakertownpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Okayama-ken, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/okayamakenjapan""   },   {     ""snameBirthPlace4"": ""Owensboro, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/owensborokentuckyunitedstates""   },   {     ""snameBirthPlace4"": ""Okayama, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/okayamajapan""   },   {     ""snameBirthPlace4"": ""Riesbach, Switzerland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/riesbachswitzerland""   },   {     ""snameBirthPlace4"": ""Nantes, Loire-Atlantique, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nantesloireatlantiquefrance""   },   {     ""snameBirthPlace4"": ""La Tronche, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/latronchefrance""   },   {     ""snameBirthPlace4"": ""Phoenix, Arizona, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/phoenixarizonaunitedstates""   },   {     ""snameBirthPlace4"": ""Oosterhout, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oosterhoutnetherlands""   },   {     ""snameBirthPlace4"": ""Oudenaarde, Flanders"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oudenaardeflanders""   },   {     ""snameBirthPlace4"": ""Nantes, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nantesfrance""   },   {     ""snameBirthPlace4"": ""Neuilly, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/neuillyfrance""   },   {     ""snameBirthPlace4"": ""Riverside, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/riversidecaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Millersburg, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/millersburgohiounitedstates""   },   {     ""snameBirthPlace4"": ""Messina, Sicily, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/messinasicilyitaly""   },   {     ""snameBirthPlace4"": ""Middleboro, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/middleboromassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Lebanon, Oregon, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lebanonoregonunitedstates""   },   {     ""snameBirthPlace4"": ""Park Ridge, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/parkridgeillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Mount Kisco, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mountkisconewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""New Bremen, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newbremenohiounitedstates""   },   {     ""snameBirthPlace4"": ""Prentiss, Mississippi, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/prentissmississippiunitedstates""   },   {     ""snameBirthPlace4"": ""Sandwich, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sandwichillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Saigon, Vietnam"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/saigonvietnam""   },   {     ""snameBirthPlace4"": ""Newcastle-on-Tyne, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newcastleontyneengland""   },   {     ""snameBirthPlace4"": ""Muskegon, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/muskegonmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Rive-de-Gier, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rivedegierfrance""   },   {     ""snameBirthPlace4"": ""Mount Pleasant, South Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mountpleasantsouthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Mertzon, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mertzontexasunitedstates""   },   {     ""snameBirthPlace4"": ""Rava-Russka, Poland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ravarusskapoland""   },   {     ""snameBirthPlace4"": ""Oroville, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/orovillecaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Salem, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/salemmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Logan, Utah, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/loganutahunitedstates""   },   {     ""snameBirthPlace4"": ""Loudonville, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/loudonvilleohiounitedstates""   },   {     ""snameBirthPlace4"": ""Rouen, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rouenfrance""   },   {     ""snameBirthPlace4"": ""Renton, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rentonwashingtonunitedstates""   },   {     ""snameBirthPlace4"": ""Macon, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/macongeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Prenzlau, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/prenzlaugermany""   },   {     ""snameBirthPlace4"": ""Saint Paul, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/saintpaulminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Radford, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/radfordvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Niigata, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/niigatajapan""   },   {     ""snameBirthPlace4"": ""Norton, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nortonvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Petersburg, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/petersburgillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Port Washington, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/portwashingtonwisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Rockland, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rocklandmaineunitedstates""   },   {     ""snameBirthPlace4"": ""New Rochelle, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newrochellenewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Red Bluff, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/redbluffcaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Rawa Mazowiecka, Poland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rawamazowieckapoland""   },   {     ""snameBirthPlace4"": ""Mooresville, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mooresvillenorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Oneonta, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oneontanewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Mason City, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/masoncityiowaunitedstates""   },   {     ""snameBirthPlace4"": ""New Britain, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newbritainconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Oceanside, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oceansidenewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""North Tonawanda, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/northtonawandanewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Newton, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newtonkansasunitedstates""   },   {     ""snameBirthPlace4"": ""Lamesa, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lamesatexasunitedstates""   },   {     ""snameBirthPlace4"": ""Rosenhayn, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rosenhaynnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Kronach, Bavaria, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kronachbavariagermany""   },   {     ""snameBirthPlace4"": ""Karlby Sogn, Denmark"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/karlbysogndenmark""   },   {     ""snameBirthPlace4"": ""Osnabruck, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/osnabruckgermany""   },   {     ""snameBirthPlace4"": ""Norton, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nortonkansasunitedstates""   },   {     ""snameBirthPlace4"": ""Round Hill, Nova Scotia, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/roundhillnovascotiacanada""   },   {     ""snameBirthPlace4"": ""Lake Charles, Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lakecharleslouisianaunitedstates""   },   {     ""snameBirthPlace4"": ""Magdeburg, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/magdeburggermany""   },   {     ""snameBirthPlace4"": ""Kahla, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kahlagermany""   },   {     ""snameBirthPlace4"": ""San Diego, California"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sandiegocalifornia""   },   {     ""snameBirthPlace4"": ""San Francisco, California"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sanfranciscocalifornia""   },   {     ""snameBirthPlace4"": ""Long Beach, California"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/longbeachcalifornia""   },   {     ""snameBirthPlace4"": ""Philadelphia, Pennsylvania"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/philadelphiapennsylvania""   },   {     ""snameBirthPlace4"": ""Oakville, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oakvillemissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Rixford, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rixfordgermany""   },   {     ""snameBirthPlace4"": ""Ravenstruther, Scotland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ravenstrutherscotland""   },   {     ""snameBirthPlace4"": ""Mississippi, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mississippiunitedstates""   },   {     ""snameBirthPlace4"": ""Maidsville, West Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/maidsvillewestvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Joplin, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/joplinmissouriunitedstates""   },   {     ""snameBirthPlace4"": ""New York City, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newyorkcitynewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Montfort-sur-Risle, Eure, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/montfortsurrisleeurefrance""   },   {     ""snameBirthPlace4"": ""Owego, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/owegonewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Lubeck, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lubeckgermany""   },   {     ""snameBirthPlace4"": ""Marshfield, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/marshfieldmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Leon, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/leoniowaunitedstates""   },   {     ""snameBirthPlace4"": ""Plano, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/planotexasunitedstates""   },   {     ""snameBirthPlace4"": ""Mauritius"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mauritius""   },   {     ""snameBirthPlace4"": ""Plainfield, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/plainfieldnewhampshireunitedstates""   },   {     ""snameBirthPlace4"": ""Ross, California"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rosscalifornia""   },   {     ""snameBirthPlace4"": ""Port Huron, Michigan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/porthuronmichigan""   },   {     ""snameBirthPlace4"": ""Port Louis, Mauritius"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/portlouismauritius""   },   {     ""snameBirthPlace4"": ""Larchmont, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/larchmontnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Salem, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/salemvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Petaluma, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/petalumacaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Orange, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/orangecaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Port Jefferson, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/portjeffersonnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Pandora, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pandoratexasunitedstates""   },   {     ""snameBirthPlace4"": ""Merrill, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/merrillwisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Oran, Algeria"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oranalgeria""   },   {     ""snameBirthPlace4"": ""Manassas, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/manassasvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Royal Oak, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/royaloakmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""San Antonio, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sanantoniotexasunitedstates""   },   {     ""snameBirthPlace4"": ""Morristown, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/morristownnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Newport News, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newportnewsvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Livingston, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/livingstonnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/netherlands""   },   {     ""snameBirthPlace4"": ""Newburyport, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newburyportmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Poznan, Poland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/poznanpoland""   },   {     ""snameBirthPlace4"": ""Middletown, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/middletownconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Jacksonville, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jacksonvilleillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Pawtucket, Rhode Island, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pawtucketrhodeislandunitedstates""   },   {     ""snameBirthPlace4"": ""Kingston, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kingstonnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Roanoke, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/roanokevirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Peekskill, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/peekskillnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Mount Vernon, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mountvernonnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Peoria, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/peoriaillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""New Brunswick, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newbrunswickcanada""   },   {     ""snameBirthPlace4"": ""Meriden, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/meridenconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Lexington, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lexingtonkentuckyunitedstates""   },   {     ""snameBirthPlace4"": ""Pine Bluff, Arkansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pinebluffarkansasunitedstates""   },   {     ""snameBirthPlace4"": ""Lebanon, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lebanonvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Kaylor, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kaylorpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Perrysburg, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/perrysburgohiounitedstates""   },   {     ""snameBirthPlace4"": ""Paris, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/parisnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Lumberville, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lumbervillepennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kentuckyunitedstates""   },   {     ""snameBirthPlace4"": ""Mill Valley, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/millvalleycaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Littleton, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/littletonnewhampshireunitedstates""   },   {     ""snameBirthPlace4"": ""Peking, China"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pekingchina""   },   {     ""snameBirthPlace4"": ""Vienna, Austria"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/viennaaustria""   },   {     ""snameBirthPlace4"": ""Westfield, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westfieldnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""San Mateo, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sanmateocaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Winona, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/winonaminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Stonington, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stoningtonconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Spring Hill, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/springhillconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Terre Haute, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/terrehauteindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Waimea, Hawaii, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/waimeahawaiiunitedstates""   },   {     ""snameBirthPlace4"": ""Takoma Park, Maryland, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/takomaparkmarylandunitedstates""   },   {     ""snameBirthPlace4"": ""Sudbury, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sudburyengland""   },   {     ""snameBirthPlace4"": ""Stockton, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stocktoncaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Villanova, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/villanovapennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Weaverville, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/weavervillenorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Yanceyville, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/yanceyvillenorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""West Hingham, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westhinghammassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Tulchin, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tulchinrussia""   },   {     ""snameBirthPlace4"": ""Vinnitza, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vinnitzarussia""   },   {     ""snameBirthPlace4"": ""Wheeling, West Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wheelingwestvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Yardley, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/yardleypennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Sioux City, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/siouxcityiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Springfield, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/springfieldkentuckyunitedstates""   },   {     ""snameBirthPlace4"": ""Utuado, Puerto Rico"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/utuadopuertorico""   },   {     ""snameBirthPlace4"": ""Zanesville, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/zanesvilleohiounitedstates""   },   {     ""snameBirthPlace4"": ""Tahoka, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tahokatexasunitedstates""   },   {     ""snameBirthPlace4"": ""Tupelo, Mississippi, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tupelomississippiunitedstates""   },   {     ""snameBirthPlace4"": ""West Point, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westpointnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Springfield, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/springfieldohiounitedstates""   },   {     ""snameBirthPlace4"": ""Wiener Neustadt, Austria"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wienerneustadtaustria""   },   {     ""snameBirthPlace4"": ""St. Joseph, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stjosephmissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Yuma, Arizona, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/yumaarizonaunitedstates""   },   {     ""snameBirthPlace4"": ""West Africa"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westafrica""   },   {     ""snameBirthPlace4"": ""Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/texasunitedstates""   },   {     ""snameBirthPlace4"": ""Turek, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/turekrussia""   },   {     ""snameBirthPlace4"": ""Tijuana, Mexico"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tijuanamexico""   },   {     ""snameBirthPlace4"": ""Taylorsville, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/taylorsvillenorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Taipei, Taiwan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/taipeitaiwan""   },   {     ""snameBirthPlace4"": ""Strawberry Point, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/strawberrypointiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Santa Clara, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/santaclaracaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Santa Fe, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/santafenewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Shreveport, Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/shreveportlouisianaunitedstates""   },   {     ""snameBirthPlace4"": ""Somerville, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/somervillenewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Toronto, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/torontocanada""   },   {     ""snameBirthPlace4"": ""Tuscumbia, Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tuscumbiaalabamaunitedstates""   },   {     ""snameBirthPlace4"": ""Tucumcari, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tucumcarinewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Youngstown, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/youngstownohiounitedstates""   },   {     ""snameBirthPlace4"": ""West Chester, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westchesterpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Westchester, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westchesterpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Sydney, New South Wales, Australia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sydneynewsouthwalesaustralia""   },   {     ""snameBirthPlace4"": ""Thessaloniki, Greece"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/thessalonikigreece""   },   {     ""snameBirthPlace4"": ""Shizuoka, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/shizuokajapan""   },   {     ""snameBirthPlace4"": ""South Manchester, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/southmanchesterconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Windsor, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/windsorconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Vetka, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vetkarussia""   },   {     ""snameBirthPlace4"": ""West Salem, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westsalemnorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Wisconsin Rapids, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wisconsinrapidswisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Vancouver, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vancouverwashingtonunitedstates""   },   {     ""snameBirthPlace4"": ""Siegless, Burgenland, Austria"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sieglessburgenlandaustria""   },   {     ""snameBirthPlace4"": ""Wimbledon, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wimbledonengland""   },   {     ""snameBirthPlace4"": ""Templeton, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/templetonmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Warsaw, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/warsawrussia""   },   {     ""snameBirthPlace4"": ""Treviso, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/trevisoitaly""   },   {     ""snameBirthPlace4"": ""South Granville, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/southgranvillenewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Zaandam, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/zaandamnetherlands""   },   {     ""snameBirthPlace4"": ""Wolowa, Austria"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wolowaaustria""   },   {     ""snameBirthPlace4"": ""Venice, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/veniceitaly""   },   {     ""snameBirthPlace4"": ""St. Die, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stdiefrance""   },   {     ""snameBirthPlace4"": ""Zante, Greece"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/zantegreece""   },   {     ""snameBirthPlace4"": ""Spring Green, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/springgreenwisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""San Rafael, California"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sanrafaelcalifornia""   },   {     ""snameBirthPlace4"": ""Vitebsk, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vitebskrussia""   },   {     ""snameBirthPlace4"": ""Valenciennes, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/valenciennesfrance""   },   {     ""snameBirthPlace4"": ""Winchester, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/winchesterkentuckyunitedstates""   },   {     ""snameBirthPlace4"": ""Webster City, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/webstercityiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Sharon, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sharonpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Webberville, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/webbervillemichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Woodstock, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/woodstockconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Skive, Denmark"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/skivedenmark""   },   {     ""snameBirthPlace4"": ""Shawnee, Oklahoma, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/shawneeoklahomaunitedstates""   },   {     ""snameBirthPlace4"": ""Union City, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/unioncitykentuckyunitedstates""   },   {     ""snameBirthPlace4"": ""Widewater, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/widewatervirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Westlake, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westlakeohiounitedstates""   },   {     ""snameBirthPlace4"": ""Vederslov, Sweden"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vederslovsweden""   },   {     ""snameBirthPlace4"": ""Santiago de Chile, Chile"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/santiagodechilechile""   },   {     ""snameBirthPlace4"": ""Sheffield, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sheffieldengland""   },   {     ""snameBirthPlace4"": ""Zia Pueblo, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ziapueblonewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Springfield, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/springfieldmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""West Nyack, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westnyacknewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Tripi, Greece"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tripigreece""   },   {     ""snameBirthPlace4"": ""Urbana, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/urbanaohiounitedstates""   },   {     ""snameBirthPlace4"": ""St. Andrews, New Brunswick, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/standrewsnewbrunswickcanada""   },   {     ""snameBirthPlace4"": ""Weissenberg, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/weissenberggermany""   },   {     ""snameBirthPlace4"": ""Skipton, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/skiptonengland""   },   {     ""snameBirthPlace4"": ""Watertown, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/watertownconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Yorkshire, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/yorkshireengland""   },   {     ""snameBirthPlace4"": ""Watertown, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/watertownmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Versailles, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/versaillesfrance""   },   {     ""snameBirthPlace4"": ""Sapulpa, Oklahoma, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sapulpaoklahomaunitedstates""   },   {     ""snameBirthPlace4"": ""West Union, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westunioniowaunitedstates""   },   {     ""snameBirthPlace4"": ""Walpole, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/walpolenewhampshireunitedstates""   },   {     ""snameBirthPlace4"": ""Tufo, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tufoitaly""   },   {     ""snameBirthPlace4"": ""Sinait, Philippines"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sinaitphilippines""   },   {     ""snameBirthPlace4"": ""Takamatsu, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/takamatsujapan""   },   {     ""snameBirthPlace4"": ""Temple, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/templetexasunitedstates""   },   {     ""snameBirthPlace4"": ""Windsor, Vermont, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/windsorvermontunitedstates""   },   {     ""snameBirthPlace4"": ""Westerly, Rhode Island, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westerlyrhodeislandunitedstates""   },   {     ""snameBirthPlace4"": ""Thorn, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/thorngermany""   },   {     ""snameBirthPlace4"": ""South Shields, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/southshieldsengland""   },   {     ""snameBirthPlace4"": ""Stuttgart, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stuttgartgermany""   },   {     ""snameBirthPlace4"": ""Torrington, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/torringtonconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Wheaton, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wheatonillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Watertown, Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/watertowntennesseeunitedstates""   },   {     ""snameBirthPlace4"": ""Southampton, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/southamptonengland""   },   {     ""snameBirthPlace4"": ""Vincennes, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vincennesindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Valledolmo, Sicily, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/valledolmosicilyitaly""   },   {     ""snameBirthPlace4"": ""Trenton, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/trentonnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Slonim, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/slonimrussia""   },   {     ""snameBirthPlace4"": ""Waterbury, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/waterburyconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Valozin, Lithuania"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/valozinlithuania""   },   {     ""snameBirthPlace4"": ""Yakima, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/yakimawashingtonunitedstates""   },   {     ""snameBirthPlace4"": ""Warren, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/warrenminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Urbana, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/urbanaillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Tientsin, China"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tientsinchina""   },   {     ""snameBirthPlace4"": ""Weyerhauser, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/weyerhauserwisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Tolland, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tollandconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Washington, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/washingtonpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Spuyten Duyvil, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/spuytenduyvilnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Tarrytown Heights, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tarrytownheightsnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Selyp, Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/selyphungary""   },   {     ""snameBirthPlace4"": ""Waianae, Hawaii, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/waianaehawaiiunitedstates""   },   {     ""snameBirthPlace4"": ""West Milton, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westmiltonohiounitedstates""   },   {     ""snameBirthPlace4"": ""Zitomir, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/zitomirrussia""   },   {     ""snameBirthPlace4"": ""York, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/yorkengland""   },   {     ""snameBirthPlace4"": ""Shawno, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/shawnowisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Stoke-on-Trent, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stokeontrentengland""   },   {     ""snameBirthPlace4"": ""South Bend, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/southbendindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Zawill, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/zawillrussia""   },   {     ""snameBirthPlace4"": ""Winnepeg, Manitoba, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/winnepegmanitobacanada""   },   {     ""snameBirthPlace4"": ""Wenatchee, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wenatcheewashingtonunitedstates""   },   {     ""snameBirthPlace4"": ""Tonasket, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tonasketwashingtonunitedstates""   },   {     ""snameBirthPlace4"": ""Vancouver, British Columbia, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vancouverbritishcolumbiacanada""   },   {     ""snameBirthPlace4"": ""West Orange, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westorangenewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Wilmington, Delaware, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wilmingtondelawareunitedstates""   },   {     ""snameBirthPlace4"": ""Walterboro, South Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/walterborosouthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Scotland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/scotland""   },   {     ""snameBirthPlace4"": ""Thalwil, Switzerland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/thalwilswitzerland""   },   {     ""snameBirthPlace4"": ""Swoyerville, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/swoyervillepennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Warsaw, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/warsawmissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Sulligent, Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sulligentalabamaunitedstates""   },   {     ""snameBirthPlace4"": ""Treptow, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/treptowgermany""   },   {     ""snameBirthPlace4"": ""Warsaw, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/warsawnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Washington, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/washingtonnorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Tulsa, Oklahoma, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tulsaoklahomaunitedstates""   },   {     ""snameBirthPlace4"": ""Shamokin, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/shamokinpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Wailuku, Hawaii, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wailukuhawaiiunitedstates""   },   {     ""snameBirthPlace4"": ""Viipuri, Finland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/viipurifinland""   },   {     ""snameBirthPlace4"": ""St. Croix Falls, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stcroixfallswisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Summit, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/summitnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Venaria Reale, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/venariarealeitaly""   },   {     ""snameBirthPlace4"": ""Spartanburg, South Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/spartanburgsouthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Woodbridge, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/woodbridgeconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""St. Joseph, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stjosephmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Toulouse, Haute-Garonne, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/toulousehautegaronnefrance""   },   {     ""snameBirthPlace4"": ""Wittmund, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wittmundgermany""   },   {     ""snameBirthPlace4"": ""Tisbury, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tisburymassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Santa Maria, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/santamariacaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Walton-on-Thames, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/waltononthamesengland""   },   {     ""snameBirthPlace4"": ""Sicily, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sicilyitaly""   },   {     ""snameBirthPlace4"": ""Waco, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wacotexasunitedstates""   },   {     ""snameBirthPlace4"": ""Sanok, Austria-Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sanokaustriahungary""   },   {     ""snameBirthPlace4"": ""Silverton, Colorado, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/silvertoncoloradounitedstates""   },   {     ""snameBirthPlace4"": ""Warren, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/warrenillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""San Salvador, El Salvador"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sansalvadorelsalvador""   },   {     ""snameBirthPlace4"": ""Santa Monica, California"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/santamonicacalifornia""   },   {     ""snameBirthPlace4"": ""Wendover, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wendoverengland""   },   {     ""snameBirthPlace4"": ""Yakima, Washington"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/yakimawashington""   },   {     ""snameBirthPlace4"": ""Woodland, California"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/woodlandcalifornia""   },   {     ""snameBirthPlace4"": ""Troy, Ohio"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/troyohio""   },   {     ""snameBirthPlace4"": ""Sturgis, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sturgismichiganunitedstates""   },   {     ""snameBirthPlace4"": ""York, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/yorkpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Waterloo, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/waterlooiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Visalia, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/visaliacaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Valparaiso, Chile"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/valparaisochile""   },   {     ""snameBirthPlace4"": ""Woodbury, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/woodburynewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Suffolk, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/suffolkengland""   },   {     ""snameBirthPlace4"": ""Vrchlabi, Czechoslovakia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vrchlabiczechoslovakia""   },   {     ""snameBirthPlace4"": ""Ventnor, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ventnornewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Sterling, Colorado, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sterlingcoloradounitedstates""   },   {     ""snameBirthPlace4"": ""Simferopol, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/simferopolrussia""   },   {     ""snameBirthPlace4"": ""Beach Haven, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/beachhavennewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Bloomington, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bloomingtonwisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Auburndale, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/auburndalemassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Bruyeres, Vosges, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bruyeresvosgesfrance""   },   {     ""snameBirthPlace4"": ""Cabo Rojo, Puerto Rico"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/caborojopuertorico""   },   {     ""snameBirthPlace4"": ""Cardston, Alberta, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cardstonalbertacanada""   },   {     ""snameBirthPlace4"": ""Cidra, Matanzas, Cuba"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cidramatanzascuba""   },   {     ""snameBirthPlace4"": ""Santa Barbara, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/santabarbaracaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Bend, Oregon, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bendoregonunitedstates""   },   {     ""snameBirthPlace4"": ""Brownsville, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/brownsvillecaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Bangkok, Siam"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bangkoksiam""   },   {     ""snameBirthPlace4"": ""Burlington, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/burlingtoniowaunitedstates""   },   {     ""snameBirthPlace4"": ""Bani, Dominican Republic"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/banidominicanrepublic""   },   {     ""snameBirthPlace4"": ""Cloutierville, Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cloutiervillelouisianaunitedstates""   },   {     ""snameBirthPlace4"": ""Dale City, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dalecitycaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Charlottetown, Prince Edward Island, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/charlottetownprinceedwardislandcanada""   },   {     ""snameBirthPlace4"": ""Danielson, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/danielsonconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Caracas, Venezuela"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/caracasvenezuela""   },   {     ""snameBirthPlace4"": ""Enniscorthy, County Wexford, Ireland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/enniscorthycountywexfordireland""   },   {     ""snameBirthPlace4"": ""Dordrecht, Holland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dordrechtholland""   },   {     ""snameBirthPlace4"": ""Colombo, Sri Lanka"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/colombosrilanka""   },   {     ""snameBirthPlace4"": ""Teaneck, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/teanecknewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Aligarh, India"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/aligarhindia""   },   {     ""snameBirthPlace4"": ""Cienfuegos, Cuba"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cienfuegoscuba""   },   {     ""snameBirthPlace4"": ""Callaway, Nebraska, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/callawaynebraskaunitedstates""   },   {     ""snameBirthPlace4"": ""Cheverly, Maryland, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cheverlymarylandunitedstates""   },   {     ""snameBirthPlace4"": ""Anding, Mississippi, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/andingmississippiunitedstates""   },   {     ""snameBirthPlace4"": ""Blue Ridge, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/blueridgevirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Camerano, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cameranoitaly""   },   {     ""snameBirthPlace4"": ""Derby, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/derbyengland""   },   {     ""snameBirthPlace4"": ""Burford, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/burfordengland""   },   {     ""snameBirthPlace4"": ""Akeley, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/akeleyminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Cysoing, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cysoingfrance""   },   {     ""snameBirthPlace4"": ""Eugene, Oregon, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eugeneoregonunitedstates""   },   {     ""snameBirthPlace4"": ""Engelberg, Switzerland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/engelbergswitzerland""   },   {     ""snameBirthPlace4"": ""Biebrich, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/biebrichgermany""   },   {     ""snameBirthPlace4"": ""Corinth, Mississippi, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/corinthmississippiunitedstates""   },   {     ""snameBirthPlace4"": ""Clifton, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cliftontexasunitedstates""   },   {     ""snameBirthPlace4"": ""Croydon, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/croydonengland""   },   {     ""snameBirthPlace4"": ""Chilmark, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chilmarkmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Astoria, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/astoriaillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Amityville, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/amityvillenewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Cheswick, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cheswickpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Bayonne, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bayonnenewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Canton, Mississippi, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cantonmississippiunitedstates""   },   {     ""snameBirthPlace4"": ""Abilene, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/abilenetexasunitedstates""   },   {     ""snameBirthPlace4"": ""Almonte, Ontario, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/almonteontariocanada""   },   {     ""snameBirthPlace4"": ""East Feliciana, Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eastfelicianalouisianaunitedstates""   },   {     ""snameBirthPlace4"": ""Everett, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/everettmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Chesterfield, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chesterfieldnewhampshireunitedstates""   },   {     ""snameBirthPlace4"": ""Colfax, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/colfaxwashingtonunitedstates""   },   {     ""snameBirthPlace4"": ""Carrizo Springs, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/carrizospringstexasunitedstates""   },   {     ""snameBirthPlace4"": ""Ekaterinoslav, Ukraine, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ekaterinoslavukrainerussia""   },   {     ""snameBirthPlace4"": ""Coal City, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/coalcityillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Breddin, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/breddingermany""   },   {     ""snameBirthPlace4"": ""Decatur, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/decaturillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""College Point, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/collegepointnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Clearfield, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/clearfieldiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Bacsbarsod, Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bacsbarsodhungary""   },   {     ""snameBirthPlace4"": ""Eupora, Mississippi, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/euporamississippiunitedstates""   },   {     ""snameBirthPlace4"": ""White Plains, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/whiteplainsnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Bern, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bernkansasunitedstates""   },   {     ""snameBirthPlace4"": ""Barnsley, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/barnsleyengland""   },   {     ""snameBirthPlace4"": ""Castleford, Yorkshire, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/castlefordyorkshireengland""   },   {     ""snameBirthPlace4"": ""Allegan, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/alleganmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Bolton, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/boltonengland""   },   {     ""snameBirthPlace4"": ""Buffalo, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/buffalokansasunitedstates""   },   {     ""snameBirthPlace4"": ""Arnegard, North Dakota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/arnegardnorthdakotaunitedstates""   },   {     ""snameBirthPlace4"": ""Burlington, Vermont, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/burlingtonvermontunitedstates""   },   {     ""snameBirthPlace4"": ""Chickasha, Oklahoma, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chickashaoklahomaunitedstates""   },   {     ""snameBirthPlace4"": ""Aomori, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/aomorijapan""   },   {     ""snameBirthPlace4"": ""Chillicothe, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chillicotheohiounitedstates""   },   {     ""snameBirthPlace4"": ""Cleves, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/clevesohiounitedstates""   },   {     ""snameBirthPlace4"": ""Dracut, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dracutmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Charkow, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/charkowrussia""   },   {     ""snameBirthPlace4"": ""Craiova, Romania"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/craiovaromania""   },   {     ""snameBirthPlace4"": ""Carnegie, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/carnegiepennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Coventry, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/coventryengland""   },   {     ""snameBirthPlace4"": ""David City, Nebraska, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/davidcitynebraskaunitedstates""   },   {     ""snameBirthPlace4"": ""Adams, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/adamsmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Bergen Heights, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bergenheightsnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Croisic, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/croisicfrance""   },   {     ""snameBirthPlace4"": ""Chelmsford, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chelmsfordengland""   },   {     ""snameBirthPlace4"": ""Elizabethgrad, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/elizabethgradrussia""   },   {     ""snameBirthPlace4"": ""Epping, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eppingengland""   },   {     ""snameBirthPlace4"": ""Ciudad Guzman, Jalisco, Mexico"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ciudadguzmanjaliscomexico""   },   {     ""snameBirthPlace4"": ""Dawson, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dawsonnewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Elisabetgrad, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/elisabetgradrussia""   },   {     ""snameBirthPlace4"": ""Bridgewater, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bridgewatermassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""San Jose, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sanjosecaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Barrax, Spain"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/barraxspain""   },   {     ""snameBirthPlace4"": ""Centralia, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/centraliawashingtonunitedstates""   },   {     ""snameBirthPlace4"": ""Busseto, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bussetoitaly""   },   {     ""snameBirthPlace4"": ""Chelsea, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chelseamassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Fairport, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fairportvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Chestertown, Maryland, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chestertownmarylandunitedstates""   },   {     ""snameBirthPlace4"": ""Angus, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/angusiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Amphiklia, Greece"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/amphikliagreece""   },   {     ""snameBirthPlace4"": ""Argentina"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/argentina""   },   {     ""snameBirthPlace4"": ""Chiswick, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chiswickengland""   },   {     ""snameBirthPlace4"": ""Cambridge, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cambridgenewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Baldwyn, Mississippi, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/baldwynmississippiunitedstates""   },   {     ""snameBirthPlace4"": ""Cracow, Austro-Hungarian Empire"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cracowaustrohungarianempire""   },   {     ""snameBirthPlace4"": ""Epworth, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/epworthnorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Arbois, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/arboisfrance""   },   {     ""snameBirthPlace4"": ""Chapman, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chapmankansasunitedstates""   },   {     ""snameBirthPlace4"": ""Aguascalientes, Mexico"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/aguascalientesmexico""   },   {     ""snameBirthPlace4"": ""Enkhuysen, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/enkhuysennetherlands""   },   {     ""snameBirthPlace4"": ""Bedford, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bedfordiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Cluj, Romania"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/clujromania""   },   {     ""snameBirthPlace4"": ""Bedford, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bedfordnewhampshireunitedstates""   },   {     ""snameBirthPlace4"": ""Charlestown, Virginia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/charlestownvirginia""   },   {     ""snameBirthPlace4"": ""Chester, Vermont, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chestervermontunitedstates""   },   {     ""snameBirthPlace4"": ""Dubuque, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dubuqueiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Biala, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bialarussia""   },   {     ""snameBirthPlace4"": ""Corner Ketch, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cornerketchpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Czernowitz, Austria-Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/czernowitzaustriahungary""   },   {     ""snameBirthPlace4"": ""Bridgeville, Delaware, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bridgevilledelawareunitedstates""   },   {     ""snameBirthPlace4"": ""Arnolds Park, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/arnoldsparkiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Stockbridge, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stockbridgemassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Eydkuhnen, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eydkuhnengermany""   },   {     ""snameBirthPlace4"": ""Canton, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cantonnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Cour-Cheverny, Loire-et-Cher, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/courchevernyloireetcherfrance""   },   {     ""snameBirthPlace4"": ""Bratslav, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bratslavrussia""   },   {     ""snameBirthPlace4"": ""Columbus, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/columbusgeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Etruria, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/etruriaengland""   },   {     ""snameBirthPlace4"": ""Angeles Pampanga, Philippines"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/angelespampangaphilippines""   },   {     ""snameBirthPlace4"": ""Aurora, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/auroraillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Wolfeboro, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wolfeboronewhampshireunitedstates""   },   {     ""snameBirthPlace4"": ""East Gloucester, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eastgloucestermassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Cork, Ireland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/corkireland""   },   {     ""snameBirthPlace4"": ""Altoona, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/altoonapennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Essex, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/essexengland""   },   {     ""snameBirthPlace4"": ""Farenza, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/farenzaitaly""   },   {     ""snameBirthPlace4"": ""Bracigliano, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/braciglianoitaly""   },   {     ""snameBirthPlace4"": ""Dalton-le-Furness, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/daltonlefurnessengland""   },   {     ""snameBirthPlace4"": ""Allegheny City, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/alleghenycitypennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Elliston, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ellistonvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Eschwege, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eschwegegermany""   },   {     ""snameBirthPlace4"": ""Aiguillon, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/aiguillonfrance""   },   {     ""snameBirthPlace4"": ""Brockton, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/brocktonmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Auckland, New Zealand"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/aucklandnewzealand""   },   {     ""snameBirthPlace4"": ""Alexandria, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/alexandriaindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Dubbeln, Latvia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dubbelnlatvia""   },   {     ""snameBirthPlace4"": ""Bildsberg, Sweden"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bildsbergsweden""   },   {     ""snameBirthPlace4"": ""Covington, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/covingtonindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Charleston, West Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/charlestonwestvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Bassano, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bassanoitaly""   },   {     ""snameBirthPlace4"": ""Crawfordsville, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/crawfordsvilleindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Astoria, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/astorianewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Atlanta, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/atlantaillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Danville, Vermont, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/danvillevermontunitedstates""   },   {     ""snameBirthPlace4"": ""Breckenridge, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/breckenridgeminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Berlin, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/berlinnewhampshireunitedstates""   },   {     ""snameBirthPlace4"": ""Berndorf, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/berndorfgermany""   },   {     ""snameBirthPlace4"": ""Ellwood City, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ellwoodcitypennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Bega, Australia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/begaaustralia""   },   {     ""snameBirthPlace4"": ""Bitterfeld, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bitterfeldgermany""   },   {     ""snameBirthPlace4"": ""Dominican Republic"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dominicanrepublic""   },   {     ""snameBirthPlace4"": ""California, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/californiamissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Dayton, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/daytonkentuckyunitedstates""   },   {     ""snameBirthPlace4"": ""Devils Lake, North Dakota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/devilslakenorthdakotaunitedstates""   },   {     ""snameBirthPlace4"": ""Bridgeport, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bridgeportohiounitedstates""   },   {     ""snameBirthPlace4"": ""Dover Township, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dovertownshipmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Chotin, Romania"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chotinromania""   },   {     ""snameBirthPlace4"": ""East Dean, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eastdeanengland""   },   {     ""snameBirthPlace4"": ""Astrakhan, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/astrakhanrussia""   },   {     ""snameBirthPlace4"": ""Bulgaria"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bulgaria""   },   {     ""snameBirthPlace4"": ""Elche, Spain"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/elchespain""   },   {     ""snameBirthPlace4"": ""Bessarabia, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bessarabiarussia""   },   {     ""snameBirthPlace4"": ""Bloomington, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bloomingtonillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Bredsjo, Sweden"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bredsjosweden""   },   {     ""snameBirthPlace4"": ""Chelyabinsk, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chelyabinskrussia""   },   {     ""snameBirthPlace4"": ""Ainwick, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ainwickengland""   },   {     ""snameBirthPlace4"": ""Decatur, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/decaturindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Chelsea, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chelseakansasunitedstates""   },   {     ""snameBirthPlace4"": ""Bern, Switzerland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bernswitzerland""   },   {     ""snameBirthPlace4"": ""Cape Girardeau, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/capegirardeaumissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Devon, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/devonengland""   },   {     ""snameBirthPlace4"": ""Berwyn, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/berwynpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Angri, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/angriitaly""   },   {     ""snameBirthPlace4"": ""East Liberty, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eastlibertypennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Ciudad Boliviar, Venezuela"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ciudadboliviarvenezuela""   },   {     ""snameBirthPlace4"": ""Borisoglebsk, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/borisoglebskrussia""   },   {     ""snameBirthPlace4"": ""Brunoviski, Latvia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/brunoviskilatvia""   },   {     ""snameBirthPlace4"": ""DeWitt, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dewittiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Bregnun, Poland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bregnunpoland""   },   {     ""snameBirthPlace4"": ""Broby, Sweden"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/brobysweden""   },   {     ""snameBirthPlace4"": ""Conway, Arkansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/conwayarkansasunitedstates""   },   {     ""snameBirthPlace4"": ""Columbia, South Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/columbiasouthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Borownica, Poland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/borownicapoland""   },   {     ""snameBirthPlace4"": ""Bottrop, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bottropgermany""   },   {     ""snameBirthPlace4"": ""Daysville, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/daysvilleillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Conceselo, Panama"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/conceselopanama""   },   {     ""snameBirthPlace4"": ""Essen, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/essengermany""   },   {     ""snameBirthPlace4"": ""Corvallis, Oregon, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/corvallisoregonunitedstates""   },   {     ""snameBirthPlace4"": ""Blooming Valley, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bloomingvalleypennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""East Liverpool, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eastliverpoolohiounitedstates""   },   {     ""snameBirthPlace4"": ""Braddock, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/braddockpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Clark's Green, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/clarksgreenpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Aberdeen, Mississippi, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/aberdeenmississippiunitedstates""   },   {     ""snameBirthPlace4"": ""Arad, Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/aradhungary""   },   {     ""snameBirthPlace4"": ""Elmwood, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/elmwoodillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Amiens, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/amiensfrance""   },   {     ""snameBirthPlace4"": ""Cornwall-on-Hudson, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cornwallonhudsonnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Chur, Switzerland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/churswitzerland""   },   {     ""snameBirthPlace4"": ""Ava, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/avaohiounitedstates""   },   {     ""snameBirthPlace4"": ""Abbeyleix, Ireland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/abbeyleixireland""   },   {     ""snameBirthPlace4"": ""Centerville, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/centervillewisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Columbus, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/columbuswisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Brookfield, Vermont, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/brookfieldvermontunitedstates""   },   {     ""snameBirthPlace4"": ""Burke, South Dakota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/burkesouthdakotaunitedstates""   },   {     ""snameBirthPlace4"": ""Cheshire, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cheshireengland""   },   {     ""snameBirthPlace4"": ""Clewiston, Florida, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/clewistonfloridaunitedstates""   },   {     ""snameBirthPlace4"": ""Doullens, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/doullensfrance""   },   {     ""snameBirthPlace4"": ""Benton, Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bentonalabamaunitedstates""   },   {     ""snameBirthPlace4"": ""Alanno, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/alannoitaly""   },   {     ""snameBirthPlace4"": ""Baku, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bakurussia""   },   {     ""snameBirthPlace4"": ""Bridgeport, Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bridgeportalabamaunitedstates""   },   {     ""snameBirthPlace4"": ""Biala, Poland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bialapoland""   },   {     ""snameBirthPlace4"": ""Bayonne, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bayonnefrance""   },   {     ""snameBirthPlace4"": ""Bear Lake, Idaho, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bearlakeidahounitedstates""   },   {     ""snameBirthPlace4"": ""Alkmaar, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/alkmaarnetherlands""   },   {     ""snameBirthPlace4"": ""Breda, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bredanetherlands""   },   {     ""snameBirthPlace4"": ""Boise, Idaho, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/boiseidahounitedstates""   },   {     ""snameBirthPlace4"": ""Cohasset, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cohassetmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Boom, Belgium"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/boombelgium""   },   {     ""snameBirthPlace4"": ""Cythera, Greece"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cytheragreece""   },   {     ""snameBirthPlace4"": ""Seville, Spain"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sevillespain""   },   {     ""snameBirthPlace4"": ""Bohemia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bohemia""   },   {     ""snameBirthPlace4"": ""Bozeman, Montana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bozemanmontanaunitedstates""   },   {     ""snameBirthPlace4"": ""Coventry, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/coventrynewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Conway, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/conwaymassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Bordentown, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bordentownnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Cayuga Lake, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cayugalakenewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Everett, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/everettwashingtonunitedstates""   },   {     ""snameBirthPlace4"": ""Bergen-Belsen, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bergenbelsengermany""   },   {     ""snameBirthPlace4"": ""Bentzen, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bentzengermany""   },   {     ""snameBirthPlace4"": ""Centerville, South Dakota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/centervillesouthdakotaunitedstates""   },   {     ""snameBirthPlace4"": ""Cedar Creek, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cedarcreektexasunitedstates""   },   {     ""snameBirthPlace4"": ""Bedford, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bedfordindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Covington, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/covingtongeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Camillus, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/camillusnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Defiance, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/defianceohiounitedstates""   },   {     ""snameBirthPlace4"": ""Farmington, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/farmingtonnewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Bristnald's End, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bristnaldsendengland""   },   {     ""snameBirthPlace4"": ""Bellaire, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bellaireohiounitedstates""   },   {     ""snameBirthPlace4"": ""Ebenezer, Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ebenezeralabamaunitedstates""   },   {     ""snameBirthPlace4"": ""Austin, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/austinillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Fairhaven, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fairhavenmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Eckwersheim, Alsace"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eckwersheimalsace""   },   {     ""snameBirthPlace4"": ""Schenectady, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/schenectadynewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Uelzen, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/uelzengermany""   },   {     ""snameBirthPlace4"": ""Sens, Yonne, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sensyonnefrance""   },   {     ""snameBirthPlace4"": ""Tioga, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tiogapennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Vinton, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vintonvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Australia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/australia""   },   {     ""snameBirthPlace4"": ""Dixfield, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dixfieldmaineunitedstates""   },   {     ""snameBirthPlace4"": ""Santa Rosa, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/santarosacaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Bakersfield, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bakersfieldcaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Chico, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chicocaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Belgrade, Yugoslavia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/belgradeyugoslavia""   },   {     ""snameBirthPlace4"": ""Bryn Mawr, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/brynmawrpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Warrenton, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/warrentonvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Christiansburg, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/christiansburgvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Chelsea, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chelseaengland""   },   {     ""snameBirthPlace4"": ""Belmont, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/belmontmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Bruges, Belgium"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/brugesbelgium""   },   {     ""snameBirthPlace4"": ""Silver Spring, Maryland, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/silverspringmarylandunitedstates""   },   {     ""snameBirthPlace4"": ""West Hoboken, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westhobokennewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Fayette, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fayettemissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Ferriday, Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ferridaylouisianaunitedstates""   },   {     ""snameBirthPlace4"": ""Feluy-Ardennes, Belgium"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/feluyardennesbelgium""   },   {     ""snameBirthPlace4"": ""Fayetteville, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fayettevillegeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Ferrara"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ferrara""   },   {     ""snameBirthPlace4"": ""Greenfield, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/greenfieldmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Rome, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/romenewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Trieste, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/triesteitaly""   },   {     ""snameBirthPlace4"": ""Shizuoka City, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/shizuokacityjapan""   },   {     ""snameBirthPlace4"": ""Monterrey, Mexico"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/monterreymexico""   },   {     ""snameBirthPlace4"": ""Salzburg, Austria"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/salzburgaustria""   },   {     ""snameBirthPlace4"": ""Santa Isabel, Puerto Rico"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/santaisabelpuertorico""   },   {     ""snameBirthPlace4"": ""Manlius, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/manliusnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Toledo, Oregon, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/toledooregonunitedstates""   },   {     ""snameBirthPlace4"": ""Santo Domingo, Dominican Republic"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/santodomingodominicanrepublic""   },   {     ""snameBirthPlace4"": ""Payette, Idaho, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/payetteidahounitedstates""   },   {     ""snameBirthPlace4"": ""Holyoke, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/holyokemassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""La Vega, Province of Matanzas, Cuba"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lavegaprovinceofmatanzascuba""   },   {     ""snameBirthPlace4"": ""Maxton, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/maxtonnorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Pittsfield, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pittsfieldmaineunitedstates""   },   {     ""snameBirthPlace4"": ""Garden Valley, Idaho, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gardenvalleyidahounitedstates""   },   {     ""snameBirthPlace4"": ""Ponce, Puerto Rico"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/poncepuertorico""   },   {     ""snameBirthPlace4"": ""Siberia, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/siberiarussia""   },   {     ""snameBirthPlace4"": ""Valley Falls, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/valleyfallskansasunitedstates""   },   {     ""snameBirthPlace4"": ""Ranchuelo, Cuba"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ranchuelocuba""   },   {     ""snameBirthPlace4"": ""Kenton, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kentonohiounitedstates""   },   {     ""snameBirthPlace4"": ""Santiago, Dominican Republic"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/santiagodominicanrepublic""   },   {     ""snameBirthPlace4"": ""Santo Francisco, Dominican Republic"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/santofranciscodominicanrepublic""   },   {     ""snameBirthPlace4"": ""Huanpeta, Angola"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/huanpetaangola""   },   {     ""snameBirthPlace4"": ""Lodz, Poland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lodzpoland""   },   {     ""snameBirthPlace4"": ""Panama Canal Zone, Panama"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/panamacanalzonepanama""   },   {     ""snameBirthPlace4"": ""Gloversville, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gloversvillenewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Flicksville, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/flicksvillepennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Good Hope, Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/goodhopelouisianaunitedstates""   },   {     ""snameBirthPlace4"": ""Old Greenwich, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oldgreenwichconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Pennsylvania, Pittsburgh, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pennsylvaniapittsburghunitedstates""   },   {     ""snameBirthPlace4"": ""Oak Ridge, Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oakridgetennesseeunitedstates""   },   {     ""snameBirthPlace4"": ""Glencoe, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/glencoeillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Melrose, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/melrosemassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Kent, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kentengland""   },   {     ""snameBirthPlace4"": ""Greensburg, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/greensburgpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Kittery, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kitterymaineunitedstates""   },   {     ""snameBirthPlace4"": ""Jerusalem"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jerusalem""   },   {     ""snameBirthPlace4"": ""Washington, Bellevue, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/washingtonbellevueunitedstates""   },   {     ""snameBirthPlace4"": ""Syria"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/syria""   },   {     ""snameBirthPlace4"": ""Kassel, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kasselgermany""   },   {     ""snameBirthPlace4"": ""Washington, DC, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/washingtondcunitedstates""   },   {     ""snameBirthPlace4"": ""Hampton, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hamptonvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Millville, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/millvillepennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Pomona, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pomonacaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Lessines, Belgium"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lessinesbelgium""   },   {     ""snameBirthPlace4"": ""Mouhet, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mouhetfrance""   },   {     ""snameBirthPlace4"": ""Walla Walla, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wallawallawashingtonunitedstates""   },   {     ""snameBirthPlace4"": ""Vienna, Austria-Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/viennaaustriahungary""   },   {     ""snameBirthPlace4"": ""Ogdensburg, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ogdensburgnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Mazatlan, Mexico"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mazatlanmexico""   },   {     ""snameBirthPlace4"": ""Point Reyes, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pointreyescaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""McColl, South Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mccollsouthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Seoul, Korea"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/seoulkorea""   },   {     ""snameBirthPlace4"": ""Maynard, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/maynardminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Galveston, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/galvestontexasunitedstates""   },   {     ""snameBirthPlace4"": ""Nobeoka, Miyazaki, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nobeokamiyazakijapan""   },   {     ""snameBirthPlace4"": ""Okinawa, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/okinawajapan""   },   {     ""snameBirthPlace4"": ""Oceanside, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oceansidecaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""St. Charles, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stcharlesmissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Lipari, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lipariitaly""   },   {     ""snameBirthPlace4"": ""Lexington, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lexingtonvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Ruffin, South Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ruffinsouthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Natelfitz, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/natelfitzgermany""   },   {     ""snameBirthPlace4"": ""Hugoton, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hugotonkansasunitedstates""   },   {     ""snameBirthPlace4"": ""Luxeuil, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/luxeuilfrance""   },   {     ""snameBirthPlace4"": ""Kishinev, Romania"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kishinevromania""   },   {     ""snameBirthPlace4"": ""Isonville, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/isonvillekentuckyunitedstates""   },   {     ""snameBirthPlace4"": ""Robbins, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/robbinsnorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Huntington, West Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/huntingtonwestvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Mount Airy, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mountairynorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Lake City, Florida, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lakecityfloridaunitedstates""   },   {     ""snameBirthPlace4"": ""Warsaw, Poland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/warsawpoland""   },   {     ""snameBirthPlace4"": ""Wolotschisk, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wolotschiskrussia""   },   {     ""snameBirthPlace4"": ""Rutherford, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rutherfordnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Hannibal, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hannibalmissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Shenandoah, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/shenandoahpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Palermo, Sicily"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/palermosicily""   },   {     ""snameBirthPlace4"": ""Muskogee, Oklahoma, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/muskogeeoklahomaunitedstates""   },   {     ""snameBirthPlace4"": ""Ferrum, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ferrumvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Palisade, Colorado, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/palisadecoloradounitedstates""   },   {     ""snameBirthPlace4"": ""Palermo, Sicily, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/palermosicilyitaly""   },   {     ""snameBirthPlace4"": ""Nowy-Sacz, Poland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nowysaczpoland""   },   {     ""snameBirthPlace4"": ""Wetley Abbey, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wetleyabbeyengland""   },   {     ""snameBirthPlace4"": ""Sannicandro Garganico, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sannicandrogarganicoitaly""   },   {     ""snameBirthPlace4"": ""Markesan, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/markesanwisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Gothenburg, Sweden"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gothenburgsweden""   },   {     ""snameBirthPlace4"": ""Vlachovo Brezi, Bohemia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vlachovobrezibohemia""   },   {     ""snameBirthPlace4"": ""Tisano, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tisanoitaly""   },   {     ""snameBirthPlace4"": ""Winfield, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/winfieldkansasunitedstates""   },   {     ""snameBirthPlace4"": ""Hazleton, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hazletonpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Lafayette, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lafayetteindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Hazelwood, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hazelwoodnorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Ward, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wardmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Rondout, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rondoutnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Salem, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/salemillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Hattiesburg, Mississippi, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hattiesburgmississippiunitedstates""   },   {     ""snameBirthPlace4"": ""Newton Falls, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newtonfallsohiounitedstates""   },   {     ""snameBirthPlace4"": ""Wilkesboro, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wilkesboronorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Sharon, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sharonmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Weimar, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/weimartexasunitedstates""   },   {     ""snameBirthPlace4"": ""Tiffin, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tiffinohiounitedstates""   },   {     ""snameBirthPlace4"": ""Jericho, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jerichotexasunitedstates""   },   {     ""snameBirthPlace4"": ""Oakland, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oaklandillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Vici, Oklahoma, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vicioklahomaunitedstates""   },   {     ""snameBirthPlace4"": ""Orchard, Colorado, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/orchardcoloradounitedstates""   },   {     ""snameBirthPlace4"": ""Rackeve, Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rackevehungary""   },   {     ""snameBirthPlace4"": ""Yankton, South Dakota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/yanktonsouthdakotaunitedstates""   },   {     ""snameBirthPlace4"": ""Mississippi"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mississippi""   },   {     ""snameBirthPlace4"": ""Vrpolje, Austria-Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vrpoljeaustriahungary""   },   {     ""snameBirthPlace4"": ""Franklin, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/franklinmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Laignes, Cote-d'Or, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/laignescotedorfrance""   },   {     ""snameBirthPlace4"": ""Kaunas, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kaunasrussia""   },   {     ""snameBirthPlace4"": ""Menominee, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/menomineemichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Hillsboro, Oregon, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hillsborooregonunitedstates""   },   {     ""snameBirthPlace4"": ""Mayfield, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mayfieldkansasunitedstates""   },   {     ""snameBirthPlace4"": ""Utrecht, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/utrechtnetherlands""   },   {     ""snameBirthPlace4"": ""Staindrop, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/staindropengland""   },   {     ""snameBirthPlace4"": ""Mattapoisett, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mattapoisettmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Gruchy, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gruchyfrance""   },   {     ""snameBirthPlace4"": ""Weston-super-Mare, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westonsupermareengland""   },   {     ""snameBirthPlace4"": ""Lower Merion, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lowermerionpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Treves, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/trevesgermany""   },   {     ""snameBirthPlace4"": ""Ramona, Oklahoma, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ramonaoklahomaunitedstates""   },   {     ""snameBirthPlace4"": ""Tayport, Scotland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tayportscotland""   },   {     ""snameBirthPlace4"": ""Kalopa, Hawaii, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kalopahawaiiunitedstates""   },   {     ""snameBirthPlace4"": ""Kure, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kurejapan""   },   {     ""snameBirthPlace4"": ""Westwood, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westwoodnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Haarlem, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/haarlemnetherlands""   },   {     ""snameBirthPlace4"": ""Wuppertal, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wuppertalgermany""   },   {     ""snameBirthPlace4"": ""Lawton, Oklahoma, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lawtonoklahomaunitedstates""   },   {     ""snameBirthPlace4"": ""Turate, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/turateitaly""   },   {     ""snameBirthPlace4"": ""Wilmington, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wilmingtonohiounitedstates""   },   {     ""snameBirthPlace4"": ""Hebrides, Scotland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hebridesscotland""   },   {     ""snameBirthPlace4"": ""Sparta, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/spartanewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Strathaven, Scotland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/strathavenscotland""   },   {     ""snameBirthPlace4"": ""Utrecht, The Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/utrechtthenetherlands""   },   {     ""snameBirthPlace4"": ""Mount Vernon, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mountvernonillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Lafayette, Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lafayettealabamaunitedstates""   },   {     ""snameBirthPlace4"": ""La Crosse, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lacrossewisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Yorba Linda, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/yorbalindacaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Grand Marais, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/grandmaraisminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Martins Ferry, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/martinsferryohiounitedstates""   },   {     ""snameBirthPlace4"": ""Whitby, Ontario, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/whitbyontariocanada""   },   {     ""snameBirthPlace4"": ""Turka, Poland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/turkapoland""   },   {     ""snameBirthPlace4"": ""Setauket, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/setauketnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/minnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Priego, Spain"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/priegospain""   },   {     ""snameBirthPlace4"": ""Lyons, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lyonskansasunitedstates""   },   {     ""snameBirthPlace4"": ""Kirksville, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kirksvillemissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Kingston-upon-Thames, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kingstonuponthamesengland""   },   {     ""snameBirthPlace4"": ""Jefferson, Oregon, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jeffersonoregonunitedstates""   },   {     ""snameBirthPlace4"": ""Marion, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/marionindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Fukuiken, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fukuikenjapan""   },   {     ""snameBirthPlace4"": ""Landau, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/landaugermany""   },   {     ""snameBirthPlace4"": ""Heysham, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/heyshamengland""   },   {     ""snameBirthPlace4"": ""Merion Square, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/merionsquarepennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Northfield, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/northfieldminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Willmar, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/willmarminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Valley Home, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/valleyhomecaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""York, South Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/yorksouthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Stashow, Poland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stashowpoland""   },   {     ""snameBirthPlace4"": ""Munster, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/munstergermany""   },   {     ""snameBirthPlace4"": ""Ghent, Belgium"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ghentbelgium""   },   {     ""snameBirthPlace4"": ""Orani, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oraniitaly""   },   {     ""snameBirthPlace4"": ""Gardiner, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gardinermaineunitedstates""   },   {     ""snameBirthPlace4"": ""Gifuken, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gifukenjapan""   },   {     ""snameBirthPlace4"": ""Tullstorp, Sweden"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tullstorpsweden""   },   {     ""snameBirthPlace4"": ""Pasco, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pascowashingtonunitedstates""   },   {     ""snameBirthPlace4"": ""Redlands, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/redlandscaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Wordsley, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wordsleyengland""   },   {     ""snameBirthPlace4"": ""Neosho, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/neoshomissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Mount Healthy, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mounthealthyohiounitedstates""   },   {     ""snameBirthPlace4"": ""Port Washington, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/portwashingtonnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Sun Prairie, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sunprairiewisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Stary Constantin, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/staryconstantinrussia""   },   {     ""snameBirthPlace4"": ""Zonnemaire, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/zonnemairenetherlands""   },   {     ""snameBirthPlace4"": ""Furth, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/furthgermany""   },   {     ""snameBirthPlace4"": ""Yokohama, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/yokohamajapan""   },   {     ""snameBirthPlace4"": ""Frackville, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/frackvillepennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Snovsk, Ukraine, U.S.S.R."",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/snovskukraineussr""   },   {     ""snameBirthPlace4"": ""Leeuwarden, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/leeuwardennetherlands""   },   {     ""snameBirthPlace4"": ""La Cueva, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lacuevanewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""New Milford, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newmilfordconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Frome, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fromeengland""   },   {     ""snameBirthPlace4"": ""Virgin Islands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/virginislands""   },   {     ""snameBirthPlace4"": ""Trapani, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/trapaniitaly""   },   {     ""snameBirthPlace4"": ""Pompey, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pompeynewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Leicester, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/leicesterengland""   },   {     ""snameBirthPlace4"": ""Portsmouth, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/portsmouthnewhampshireunitedstates""   },   {     ""snameBirthPlace4"": ""Rowland's Castle, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rowlandscastleengland""   },   {     ""snameBirthPlace4"": ""Vidin, Bulgaria"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vidinbulgaria""   },   {     ""snameBirthPlace4"": ""Soerabaija, Java"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/soerabaijajava""   },   {     ""snameBirthPlace4"": ""Wausau, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wausauwisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Washburn, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/washburnmissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Maryland, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/marylandunitedstates""   },   {     ""snameBirthPlace4"": ""Kinston, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kinstonnorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Frederick, Maryland, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/frederickmarylandunitedstates""   },   {     ""snameBirthPlace4"": ""Quebec, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/quebeccanada""   },   {     ""snameBirthPlace4"": ""Silao, Guanajauto, Mexico"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/silaoguanajautomexico""   },   {     ""snameBirthPlace4"": ""Milford, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/milfordmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Vienne, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/viennefrance""   },   {     ""snameBirthPlace4"": ""Shabelsk, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/shabelskrussia""   },   {     ""snameBirthPlace4"": ""Garnett, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/garnettkansasunitedstates""   },   {     ""snameBirthPlace4"": ""Pestujhely, Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pestujhelyhungary""   },   {     ""snameBirthPlace4"": ""Meziers, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/meziersfrance""   },   {     ""snameBirthPlace4"": ""Ginneken, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ginnekennetherlands""   },   {     ""snameBirthPlace4"": ""Pietrarossa, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pietrarossaitaly""   },   {     ""snameBirthPlace4"": ""Intragna, Switzerland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/intragnaswitzerland""   },   {     ""snameBirthPlace4"": ""Laasphe, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/laasphegermany""   },   {     ""snameBirthPlace4"": ""Quincy, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/quincyillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Offenbach, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/offenbachgermany""   },   {     ""snameBirthPlace4"": ""Saint-Christoly-de-Medoc, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/saintchristolydemedocfrance""   },   {     ""snameBirthPlace4"": ""Woodhaven, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/woodhavennewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Le Sueur, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lesueurminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Pringle, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pringlepennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Middle Village, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/middlevillagenewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Union City, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/unioncityindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Mytilene, Greece"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mytilenegreece""   },   {     ""snameBirthPlace4"": ""Point Pleasant, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pointpleasantnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Winchester, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/winchestermassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""St. Julien, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stjulienfrance""   },   {     ""snameBirthPlace4"": ""Haddonfield, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/haddonfieldnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Waukesha, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/waukeshawisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Versailles, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/versailleskentuckyunitedstates""   },   {     ""snameBirthPlace4"": ""Hammer, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hammergermany""   },   {     ""snameBirthPlace4"": ""Winnetka, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/winnetkaillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""San Luis Obispo, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sanluisobispocaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""San Lorenzo, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sanlorenzoitaly""   },   {     ""snameBirthPlace4"": ""Minneapolis, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/minneapoliskansasunitedstates""   },   {     ""snameBirthPlace4"": ""Upperville, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/uppervillevirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Woodstock, Vermont, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/woodstockvermontunitedstates""   },   {     ""snameBirthPlace4"": ""Lincoln, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lincolnengland""   },   {     ""snameBirthPlace4"": ""Telluride, Colorado, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/telluridecoloradounitedstates""   },   {     ""snameBirthPlace4"": ""Hamilton, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hamiltonohiounitedstates""   },   {     ""snameBirthPlace4"": ""Valparaiso, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/valparaisoindianaunitedstates""   },   {     ""snameBirthPlace4"": ""St. John's, Newfoundland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stjohnsnewfoundland""   },   {     ""snameBirthPlace4"": ""Lublin, Poland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lublinpoland""   },   {     ""snameBirthPlace4"": ""Roxborough, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/roxboroughpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Plymouth, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/plymouthengland""   },   {     ""snameBirthPlace4"": ""Mauch Chunk, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mauchchunkpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Stamps, Alaska, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stampsalaskaunitedstates""   },   {     ""snameBirthPlace4"": ""Nitra, Czechoslovakia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nitraczechoslovakia""   },   {     ""snameBirthPlace4"": ""Sulmona, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sulmonaitaly""   },   {     ""snameBirthPlace4"": ""Juneau, Alaska, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/juneaualaskaunitedstates""   },   {     ""snameBirthPlace4"": ""Iron River, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ironrivermichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Odessa, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/odessarussia""   },   {     ""snameBirthPlace4"": ""Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/missouriunitedstates""   },   {     ""snameBirthPlace4"": ""Stockbridge, Scotland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stockbridgescotland""   },   {     ""snameBirthPlace4"": ""Gloucester, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gloucesterengland""   },   {     ""snameBirthPlace4"": ""Fort Campbell, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fortcampbellkentuckyunitedstates""   },   {     ""snameBirthPlace4"": ""Jalisco, Mexico"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jaliscomexico""   },   {     ""snameBirthPlace4"": ""Salinas, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/salinascaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Rome, Lazio, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/romelazioitaly""   },   {     ""snameBirthPlace4"": ""Harat, Afghanistan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/haratafghanistan""   },   {     ""snameBirthPlace4"": ""Nogaisk, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nogaiskrussia""   },   {     ""snameBirthPlace4"": ""Port Arthur, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/portarthurtexasunitedstates""   },   {     ""snameBirthPlace4"": ""Kaneville, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kanevilleillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Strasbourg, Alsace"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/strasbourgalsace""   },   {     ""snameBirthPlace4"": ""New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Sweden"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sweden""   },   {     ""snameBirthPlace4"": ""Logansport, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/logansportindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Geneva, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/genevaillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Turner, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/turnermaineunitedstates""   },   {     ""snameBirthPlace4"": ""Moscow, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/moscowrussia""   },   {     ""snameBirthPlace4"": ""Vaniskoc, Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vaniskochungary""   },   {     ""snameBirthPlace4"": ""Karlsruhe, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/karlsruhegermany""   },   {     ""snameBirthPlace4"": ""Leiden, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/leidennetherlands""   },   {     ""snameBirthPlace4"": ""Union Hill, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/unionhillnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Waseca, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wasecaminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Grand Island, Nebraska, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/grandislandnebraskaunitedstates""   },   {     ""snameBirthPlace4"": ""Plympton, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/plymptonengland""   },   {     ""snameBirthPlace4"": ""Kabilia, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kabiliarussia""   },   {     ""snameBirthPlace4"": ""Grodno, Lithuania"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/grodnolithuania""   },   {     ""snameBirthPlace4"": ""Long Branch, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/longbranchcaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Manheim, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/manheimpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""New London, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newlondonohiounitedstates""   },   {     ""snameBirthPlace4"": ""Readfield, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/readfieldmaineunitedstates""   },   {     ""snameBirthPlace4"": ""Union Bridge, Maryland, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/unionbridgemarylandunitedstates""   },   {     ""snameBirthPlace4"": ""Wakefield, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wakefieldmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Kamenets-Podolski, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kamenetspodolskirussia""   },   {     ""snameBirthPlace4"": ""Moneymusk, Scotland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/moneymuskscotland""   },   {     ""snameBirthPlace4"": ""Naumberg, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/naumberggermany""   },   {     ""snameBirthPlace4"": ""Somerset, Nova Scotia, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/somersetnovascotiacanada""   },   {     ""snameBirthPlace4"": ""Irasburg, Vermont, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/irasburgvermontunitedstates""   },   {     ""snameBirthPlace4"": ""Solingen, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/solingengermany""   },   {     ""snameBirthPlace4"": ""Waterloo, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/waterloonewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Florence, Tuscany, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/florencetuscanyitaly""   },   {     ""snameBirthPlace4"": ""Palisade, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/palisadenewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Nassau, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nassaugermany""   },   {     ""snameBirthPlace4"": ""Otterberg, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/otterberggermany""   },   {     ""snameBirthPlace4"": ""Ocala, Florida, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ocalafloridaunitedstates""   },   {     ""snameBirthPlace4"": ""Masonville, Colorado, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/masonvillecoloradounitedstates""   },   {     ""snameBirthPlace4"": ""Reagantown, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/reagantownpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Florence, Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/florencealabamaunitedstates""   },   {     ""snameBirthPlace4"": ""Gastonia, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gastonianorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Vineland, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vinelandnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Richmond, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/richmondindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Nescopeck, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nescopeckpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Pleasant Ridge, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pleasantridgeillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Valognes, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/valognesfrance""   },   {     ""snameBirthPlace4"": ""Uzes, Gard, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/uzesgardfrance""   },   {     ""snameBirthPlace4"": ""Willimantic, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/willimanticconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Siegen, Westphalia, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/siegenwestphaliagermany""   },   {     ""snameBirthPlace4"": ""Oregon, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oregonunitedstates""   },   {     ""snameBirthPlace4"": ""Monticello, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/monticelloindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Woodstock, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/woodstocknewhampshireunitedstates""   },   {     ""snameBirthPlace4"": ""Kourim, Bohemia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kourimbohemia""   },   {     ""snameBirthPlace4"": ""Warwickshire, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/warwickshireengland""   },   {     ""snameBirthPlace4"": ""Kirkkonummi, Finland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kirkkonummifinland""   },   {     ""snameBirthPlace4"": ""Rantasalmi, Finland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rantasalmifinland""   },   {     ""snameBirthPlace4"": ""Varna, Bulgaria"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/varnabulgaria""   },   {     ""snameBirthPlace4"": ""San Bernardino, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sanbernardinocaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Semarang, Java"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/semarangjava""   },   {     ""snameBirthPlace4"": ""Harpenden, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/harpendenengland""   },   {     ""snameBirthPlace4"": ""Oberlin, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oberlinohiounitedstates""   },   {     ""snameBirthPlace4"": ""Fort Leavenworth, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fortleavenworthkansasunitedstates""   },   {     ""snameBirthPlace4"": ""Tivoli, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tivoliitaly""   },   {     ""snameBirthPlace4"": ""Goregoan, India"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/goregoanindia""   },   {     ""snameBirthPlace4"": ""Kastoria, Greece"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kastoriagreece""   },   {     ""snameBirthPlace4"": ""Port Republic, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/portrepublicvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Moline, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/molineillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Quebec, Quebec, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/quebecquebeccanada""   },   {     ""snameBirthPlace4"": ""Smithsburg, Maryland, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/smithsburgmarylandunitedstates""   },   {     ""snameBirthPlace4"": ""Guiche, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/guichefrance""   },   {     ""snameBirthPlace4"": ""Green Cove Spring, Florida, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/greencovespringfloridaunitedstates""   },   {     ""snameBirthPlace4"": ""Princeton, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/princetonmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Pizzo di Calabria, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pizzodicalabriaitaly""   },   {     ""snameBirthPlace4"": ""Silver Creek, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/silvercreekpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Media, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mediapennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Palestine"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/palestine""   },   {     ""snameBirthPlace4"": ""New Preston, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newprestonconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Monroe, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/monroemichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Xenia, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/xeniaohiounitedstates""   },   {     ""snameBirthPlace4"": ""Metz, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/metzgermany""   },   {     ""snameBirthPlace4"": ""New Brighton, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newbrightonnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Marietta, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mariettaohiounitedstates""   },   {     ""snameBirthPlace4"": ""Nadlac?, Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nadlachungary""   },   {     ""snameBirthPlace4"": ""Sandusky, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sanduskyohiounitedstates""   },   {     ""snameBirthPlace4"": ""Ilsenburg, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ilsenburggermany""   },   {     ""snameBirthPlace4"": ""Sebring, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sebringohiounitedstates""   },   {     ""snameBirthPlace4"": ""Morange, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/morangegermany""   },   {     ""snameBirthPlace4"": ""Guebviller, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/guebvillerfrance""   },   {     ""snameBirthPlace4"": ""Larned, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/larnedkansasunitedstates""   },   {     ""snameBirthPlace4"": ""Manitowoc, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/manitowocwisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Smorgon, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/smorgonrussia""   },   {     ""snameBirthPlace4"": ""Portland, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/portlandmaineunitedstates""   },   {     ""snameBirthPlace4"": ""Johnson, Vermont, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/johnsonvermontunitedstates""   },   {     ""snameBirthPlace4"": ""Tullytown, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tullytownpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Viola, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/violawisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Madisonville, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/madisonvillekentuckyunitedstates""   },   {     ""snameBirthPlace4"": ""Rorschach, Switzerland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rorschachswitzerland""   },   {     ""snameBirthPlace4"": ""New Hartford, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newhartfordnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Kassa, Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kassahungary""   },   {     ""snameBirthPlace4"": ""Olean, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oleannewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Milan, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/milanillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Hinsdale, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hinsdaleillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Pottstown, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pottstownpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Auburn, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/auburnnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""McAllister, Oklahoma, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mcallisteroklahomaunitedstates""   },   {     ""snameBirthPlace4"": ""Ramsey, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ramseyengland""   },   {     ""snameBirthPlace4"": ""Lancashire, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lancashireengland""   },   {     ""snameBirthPlace4"": ""Scituate, Rhode Island, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/scituaterhodeislandunitedstates""   },   {     ""snameBirthPlace4"": ""Francestown, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/francestownnewhampshireunitedstates""   },   {     ""snameBirthPlace4"": ""Steelton, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/steeltonpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Olmsted Falls, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/olmstedfallsohiounitedstates""   },   {     ""snameBirthPlace4"": ""Winchester, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/winchesterengland""   },   {     ""snameBirthPlace4"": ""Mantorville, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mantorvilleminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Lost Springs, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lostspringskansasunitedstates""   },   {     ""snameBirthPlace4"": ""Hawley, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hawleyminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Woodstown, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/woodstownnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Rindge, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rindgenewhampshireunitedstates""   },   {     ""snameBirthPlace4"": ""Gary, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/garyindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Mannheim, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mannheimgermany""   },   {     ""snameBirthPlace4"": ""Petrograd, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/petrogradrussia""   },   {     ""snameBirthPlace4"": ""Llandudno, Wales"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/llandudnowales""   },   {     ""snameBirthPlace4"": ""Lock Haven, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lockhavenpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Lofton, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/loftonvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""St. Ignatius, Montana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stignatiusmontanaunitedstates""   },   {     ""snameBirthPlace4"": ""Foxboro, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/foxboromassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Kehl, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kehlgermany""   },   {     ""snameBirthPlace4"": ""Uniontown, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/uniontownpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Mamou, Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mamoulouisianaunitedstates""   },   {     ""snameBirthPlace4"": ""Mishawaka, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mishawakaindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Rolling Fork, Mississippi, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rollingforkmississippiunitedstates""   },   {     ""snameBirthPlace4"": ""Harvard, Nebraska, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/harvardnebraskaunitedstates""   },   {     ""snameBirthPlace4"": ""Pforzheim, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pforzheimgermany""   },   {     ""snameBirthPlace4"": ""Harlan, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/harlaniowaunitedstates""   },   {     ""snameBirthPlace4"": ""Sidney, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sidneynewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Neodesha, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/neodeshakansasunitedstates""   },   {     ""snameBirthPlace4"": ""Luxembourg"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/luxembourg""   },   {     ""snameBirthPlace4"": ""Jerusalem, Palestine"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jerusalempalestine""   },   {     ""snameBirthPlace4"": ""Ramnicul-Sarat, Romania"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ramniculsaratromania""   },   {     ""snameBirthPlace4"": ""Zerkow, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/zerkowgermany""   },   {     ""snameBirthPlace4"": ""Muro Lucano, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/murolucanoitaly""   },   {     ""snameBirthPlace4"": ""Rawlins, Wyoming, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rawlinswyomingunitedstates""   },   {     ""snameBirthPlace4"": ""Garysburg, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/garysburgnorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Hermanec, Czechoslovakia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hermanecczechoslovakia""   },   {     ""snameBirthPlace4"": ""Libau, Latvia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/libaulatvia""   },   {     ""snameBirthPlace4"": ""Tiverton, Rhode Island, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tivertonrhodeislandunitedstates""   },   {     ""snameBirthPlace4"": ""Vevay, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vevayindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Upper Moreland, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/uppermorelandpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Kensington, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kensingtonengland""   },   {     ""snameBirthPlace4"": ""Wiesbaden, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wiesbadengermany""   },   {     ""snameBirthPlace4"": ""Grandin, North Dakota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/grandinnorthdakotaunitedstates""   },   {     ""snameBirthPlace4"": ""Laramie, Wyoming, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/laramiewyomingunitedstates""   },   {     ""snameBirthPlace4"": ""Lightcliffe, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lightcliffeengland""   },   {     ""snameBirthPlace4"": ""Warren, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/warrenindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Mainz, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mainzgermany""   },   {     ""snameBirthPlace4"": ""Gorod Novo Grudock, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gorodnovogrudockrussia""   },   {     ""snameBirthPlace4"": ""Gotha, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gothagermany""   },   {     ""snameBirthPlace4"": ""Hayward, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/haywardcaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Watertown, South Dakota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/watertownsouthdakotaunitedstates""   },   {     ""snameBirthPlace4"": ""Neidenburg, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/neidenburggermany""   },   {     ""snameBirthPlace4"": ""Saunderstown, Rhode Island Colony"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/saunderstownrhodeislandcolony""   },   {     ""snameBirthPlace4"": ""Szatmar, Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/szatmarhungary""   },   {     ""snameBirthPlace4"": ""Pinoso, Spain"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pinosospain""   },   {     ""snameBirthPlace4"": ""Saint-Gilles-du-Gard, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/saintgillesdugardfrance""   },   {     ""snameBirthPlace4"": ""Kilkenny, Ireland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kilkennyireland""   },   {     ""snameBirthPlace4"": ""Horncastle, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/horncastleengland""   },   {     ""snameBirthPlace4"": ""Moberly, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/moberlymissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Terrell, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/terrelltexasunitedstates""   },   {     ""snameBirthPlace4"": ""Iwate, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/iwatejapan""   },   {     ""snameBirthPlace4"": ""Woerden, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/woerdennetherlands""   },   {     ""snameBirthPlace4"": ""Merkel, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/merkeltexasunitedstates""   },   {     ""snameBirthPlace4"": ""Pennsbury, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pennsburypennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Independence, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/independenceiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Larissa, Greece"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/larissagreece""   },   {     ""snameBirthPlace4"": ""Pepeekeo, Hawaii, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pepeekeohawaiiunitedstates""   },   {     ""snameBirthPlace4"": ""Kapaa, Hawaii, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kapaahawaiiunitedstates""   },   {     ""snameBirthPlace4"": ""Oaxaca, Mexico"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oaxacamexico""   },   {     ""snameBirthPlace4"": ""Kagoshima, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kagoshimajapan""   },   {     ""snameBirthPlace4"": ""West Groton, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westgrotonmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Rockford, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rockfordindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Grass Valley, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/grassvalleycaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Onomichi, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/onomichijapan""   },   {     ""snameBirthPlace4"": ""Yarmouth, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/yarmouthmaineunitedstates""   },   {     ""snameBirthPlace4"": ""South Woodstock, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/southwoodstockconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Mesa, Arizona, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mesaarizonaunitedstates""   },   {     ""snameBirthPlace4"": ""Mount Pleasant, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mountpleasantohiounitedstates""   },   {     ""snameBirthPlace4"": ""San Augustine, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sanaugustinetexasunitedstates""   },   {     ""snameBirthPlace4"": ""St. John, New Brunswick, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stjohnnewbrunswickcanada""   },   {     ""snameBirthPlace4"": ""Istanbul, Turkey"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/istanbulturkey""   },   {     ""snameBirthPlace4"": ""Winnipeg, Manitoba, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/winnipegmanitobacanada""   },   {     ""snameBirthPlace4"": ""Griffin, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/griffingeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Oxford, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oxfordnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Tomashow, Poland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tomashowpoland""   },   {     ""snameBirthPlace4"": ""Kolding, Denmark"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/koldingdenmark""   },   {     ""snameBirthPlace4"": ""Jemez Pueblo, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jemezpueblonewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Pike Road, Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pikeroadalabamaunitedstates""   },   {     ""snameBirthPlace4"": ""Salisbury, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/salisburynorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Lee City, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/leecitykentuckyunitedstates""   },   {     ""snameBirthPlace4"": ""West Lafayette, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westlafayetteindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Rock Springs, Wyoming, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rockspringswyomingunitedstates""   },   {     ""snameBirthPlace4"": ""Ozark, Arkansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ozarkarkansasunitedstates""   },   {     ""snameBirthPlace4"": ""Gatlinburg, Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gatlinburgtennesseeunitedstates""   },   {     ""snameBirthPlace4"": ""Gleason, Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gleasontennesseeunitedstates""   },   {     ""snameBirthPlace4"": ""Villeneuve-sur-Lot, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/villeneuvesurlotfrance""   },   {     ""snameBirthPlace4"": ""Hull, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hullengland""   },   {     ""snameBirthPlace4"": ""Towanda, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/towandapennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Lebanon, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lebanonconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Saddle Mountain, Oklahoma, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/saddlemountainoklahomaunitedstates""   },   {     ""snameBirthPlace4"": ""Rough Rock, Arizona, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/roughrockarizonaunitedstates""   },   {     ""snameBirthPlace4"": ""Hempstead, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hempsteadnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Wynnewood, Oklahoma, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wynnewoodoklahomaunitedstates""   },   {     ""snameBirthPlace4"": ""Meyersdale, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/meyersdalepennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Leonard, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/leonardtexasunitedstates""   },   {     ""snameBirthPlace4"": ""Woodstock, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/woodstockengland""   },   {     ""snameBirthPlace4"": ""Gunnison, Colorado, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gunnisoncoloradounitedstates""   },   {     ""snameBirthPlace4"": ""Westport, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westportnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Morris, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/morrisillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Streator, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/streatorillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Schloss Rosenau, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/schlossrosenaugermany""   },   {     ""snameBirthPlace4"": ""Heraklion, Greece"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/herakliongreece""   },   {     ""snameBirthPlace4"": ""Monarch, Wyoming, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/monarchwyomingunitedstates""   },   {     ""snameBirthPlace4"": ""Pottsville, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pottsvillepennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Frankenstein, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/frankensteingermany""   },   {     ""snameBirthPlace4"": ""Guns, Austria-Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gunsaustriahungary""   },   {     ""snameBirthPlace4"": ""South Haven, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/southhavenmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Mikado, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mikadomichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Shelbyville, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/shelbyvilleillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""San Leandro, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sanleandrocaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Grinstad, Sweden"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/grinstadsweden""   },   {     ""snameBirthPlace4"": ""Milford, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/milfordengland""   },   {     ""snameBirthPlace4"": ""Wauwatosa, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wauwatosawisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Onalaska, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/onalaskawisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Nagano, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/naganojapan""   },   {     ""snameBirthPlace4"": ""Lausanne, Switzerland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lausanneswitzerland""   },   {     ""snameBirthPlace4"": ""St. Servan, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stservanfrance""   },   {     ""snameBirthPlace4"": ""Johnstown, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/johnstownnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Middletown, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/middletownnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Rypin, Poland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rypinpoland""   },   {     ""snameBirthPlace4"": ""Harvard, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/harvardillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""The Hague, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/thehaguenetherlands""   },   {     ""snameBirthPlace4"": ""Westphalia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westphalia""   },   {     ""snameBirthPlace4"": ""Holland, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hollandmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Ottawa, Ontario, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ottawaontariocanada""   },   {     ""snameBirthPlace4"": ""Greenville, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/greenvilletexasunitedstates""   },   {     ""snameBirthPlace4"": ""St. Thomas, Austria-Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stthomasaustriahungary""   },   {     ""snameBirthPlace4"": ""Hackney, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hackneyengland""   },   {     ""snameBirthPlace4"": ""Riotinto, Spain"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/riotintospain""   },   {     ""snameBirthPlace4"": ""Madras, India"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/madrasindia""   },   {     ""snameBirthPlace4"": ""Montbazon, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/montbazonfrance""   },   {     ""snameBirthPlace4"": ""Verona, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/veronaitaly""   },   {     ""snameBirthPlace4"": ""Turnhout, Belgium"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/turnhoutbelgium""   },   {     ""snameBirthPlace4"": ""Turegano, Spain"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tureganospain""   },   {     ""snameBirthPlace4"": ""Lasai, Lithuania"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lasailithuania""   },   {     ""snameBirthPlace4"": ""Tesuque Pueblo, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tesuquepueblonewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Rostock, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rostockgermany""   },   {     ""snameBirthPlace4"": ""Malente, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/malentegermany""   },   {     ""snameBirthPlace4"": ""Liska, Austria-Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/liskaaustriahungary""   },   {     ""snameBirthPlace4"": ""Ridgewood, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ridgewoodnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""North Harvey, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/northharveyillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Loudon, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/loudonmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Listowel, Ontario, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/listowelontariocanada""   },   {     ""snameBirthPlace4"": ""Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/indianaunitedstates""   },   {     ""snameBirthPlace4"": ""Tyumen, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tyumenrussia""   },   {     ""snameBirthPlace4"": ""India"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/india""   },   {     ""snameBirthPlace4"": ""Fort Madison, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fortmadisoniowaunitedstates""   },   {     ""snameBirthPlace4"": ""Winnipeg, Ontario, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/winnipegontariocanada""   },   {     ""snameBirthPlace4"": ""Switzerland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/switzerland""   },   {     ""snameBirthPlace4"": ""Nebo, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nebokentuckyunitedstates""   },   {     ""snameBirthPlace4"": ""Wu Ching, China"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wuchingchina""   },   {     ""snameBirthPlace4"": ""Vinton, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vintoniowaunitedstates""   },   {     ""snameBirthPlace4"": ""Suffield, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/suffieldconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Gloster, Mississippi, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/glostermississippiunitedstates""   },   {     ""snameBirthPlace4"": ""Skylight, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/skylightkentuckyunitedstates""   },   {     ""snameBirthPlace4"": ""Lubbock, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lubbocktexasunitedstates""   },   {     ""snameBirthPlace4"": ""Sandwich, Ontario, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sandwichontariocanada""   },   {     ""snameBirthPlace4"": ""Harmosand, Sweden"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/harmosandsweden""   },   {     ""snameBirthPlace4"": ""Zloczew, Austria-Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/zloczewaustriahungary""   },   {     ""snameBirthPlace4"": ""Gonzales, Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gonzaleslouisianaunitedstates""   },   {     ""snameBirthPlace4"": ""West Bend, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westbendwisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Inglewood, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/inglewoodcaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""La Porte, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/laporteindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Southbridge, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/southbridgemassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Lisbon, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lisbonnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Strasbourg, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/strasbourgfrance""   },   {     ""snameBirthPlace4"": ""Springfield, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/springfieldpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""St. Andrew's Parish, Maryland, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/standrewsparishmarylandunitedstates""   },   {     ""snameBirthPlace4"": ""Merion, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/merionpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Muhlen-on-Neckar, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/muhlenonneckargermany""   },   {     ""snameBirthPlace4"": ""Waterloo, South Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/waterloosouthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Sutton, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/suttonmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Oskaloosa, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oskaloosaiowaunitedstates""   },   {     ""snameBirthPlace4"": ""South Dakota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/southdakotaunitedstates""   },   {     ""snameBirthPlace4"": ""Punxsutawney, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/punxsutawneypennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""North Easton, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/northeastonmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Winthrop, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/winthropmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Stryker, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/strykerohiounitedstates""   },   {     ""snameBirthPlace4"": ""Little Rose, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/littlerosewisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Luedenscheid, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/luedenscheidgermany""   },   {     ""snameBirthPlace4"": ""Opator, Poland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/opatorpoland""   },   {     ""snameBirthPlace4"": ""Turners, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/turnersnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Whitman, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/whitmanmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Whitten, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/whittengermany""   },   {     ""snameBirthPlace4"": ""Tillamook, Oregon, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tillamookoregonunitedstates""   },   {     ""snameBirthPlace4"": ""Garwin, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/garwiniowaunitedstates""   },   {     ""snameBirthPlace4"": ""Lewistown, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lewistownpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Macungie, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/macungiepennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Wrexham, Wales"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wrexhamwales""   },   {     ""snameBirthPlace4"": ""Marquette, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/marquettemichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Mt. Desert Island, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mtdesertislandmaineunitedstates""   },   {     ""snameBirthPlace4"": ""Springdale, Arkansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/springdalearkansasunitedstates""   },   {     ""snameBirthPlace4"": ""Ossett, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ossettengland""   },   {     ""snameBirthPlace4"": ""Mayfield, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mayfieldkentuckyunitedstates""   },   {     ""snameBirthPlace4"": ""Seymour, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/seymouriowaunitedstates""   },   {     ""snameBirthPlace4"": ""Penegoes, Wales"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/penegoeswales""   },   {     ""snameBirthPlace4"": ""Parker, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/parkerpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Vilna, Poland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vilnapoland""   },   {     ""snameBirthPlace4"": ""Jackson, Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jacksontennesseeunitedstates""   },   {     ""snameBirthPlace4"": ""Manistee, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/manisteemichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Acoma, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/acomanewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Amsterdam, New York"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/amsterdamnewyork""   },   {     ""snameBirthPlace4"": ""Atchison, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/atchisonkansasunitedstates""   },   {     ""snameBirthPlace4"": ""Hagerstown, Maryland, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hagerstownmarylandunitedstates""   },   {     ""snameBirthPlace4"": ""Patterson, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pattersonnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Furth, Bavaria, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/furthbavariagermany""   },   {     ""snameBirthPlace4"": ""Raton, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ratonnewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Fraser, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/frasermichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Janesville, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/janesvilleiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Orby, Sweden"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/orbysweden""   },   {     ""snameBirthPlace4"": ""Madison, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/madisonindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Jerusalem, Israel"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jerusalemisrael""   },   {     ""snameBirthPlace4"": ""Scarborough, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/scarboroughengland""   },   {     ""snameBirthPlace4"": ""Lexington, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lexingtonmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Kalamazoo, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kalamazoomichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Reno, Nevada, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/renonevadaunitedstates""   },   {     ""snameBirthPlace4"": ""Los Alamos, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/losalamosnewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Port Chester, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/portchesternewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Tuscaloosa, Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tuscaloosaalabamaunitedstates""   },   {     ""snameBirthPlace4"": ""Madison, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/madisonconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Chicago, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chicagoillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Buffalo, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/buffalonewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Antwerp, Belgium"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/antwerpbelgium""   },   {     ""snameBirthPlace4"": ""Charlestown, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/charlestownmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Baltimore, Maryland, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/baltimoremarylandunitedstates""   },   {     ""snameBirthPlace4"": ""Buenos Aires, Argentina"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/buenosairesargentina""   },   {     ""snameBirthPlace4"": ""Charleston, South Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/charlestonsouthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Boston, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bostonmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Budapest, Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/budapesthungary""   },   {     ""snameBirthPlace4"": ""Cambridge, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cambridgemassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Berlin, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/berlingermany""   },   {     ""snameBirthPlace4"": ""Brooklyn, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/brooklynnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Albany, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/albanynewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Basel, Switzerland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/baselswitzerland""   },   {     ""snameBirthPlace4"": ""Atlanta, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/atlantageorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Albuquerque, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/albuquerquenewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Amherst, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/amherstmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Berkeley, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/berkeleycaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Boulder, Colorado, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bouldercoloradounitedstates""   },   {     ""snameBirthPlace4"": ""Annapolis, Maryland, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/annapolismarylandunitedstates""   },   {     ""snameBirthPlace4"": ""Cheshire, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cheshireconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Chapel Hill, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chapelhillnorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Ann Arbor, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/annarbormichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Caen, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/caenfrance""   },   {     ""snameBirthPlace4"": ""Augusta, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/augustamaineunitedstates""   },   {     ""snameBirthPlace4"": ""Amsterdam, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/amsterdamnetherlands""   },   {     ""snameBirthPlace4"": ""Camden, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/camdennewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Bronxville, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bronxvillenewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Seoul, South Korea"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/seoulsouthkorea""   },   {     ""snameBirthPlace4"": ""Charlottesville, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/charlottesvillevirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Fall River, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fallrivermassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""District of Columbia, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/districtofcolumbiawashingtonunitedstates""   },   {     ""snameBirthPlace4"": ""Camaguey, Cuba"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/camagueycuba""   },   {     ""snameBirthPlace4"": ""Birmingham, Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/birminghamalabamaunitedstates""   },   {     ""snameBirthPlace4"": ""Bangor, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bangormaineunitedstates""   },   {     ""snameBirthPlace4"": ""Edgartown, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/edgartownmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Reykjavik, Iceland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/reykjavikiceland""   },   {     ""snameBirthPlace4"": ""Nashua, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nashuanewhampshireunitedstates""   },   {     ""snameBirthPlace4"": ""Calgary, Alberta, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/calgaryalbertacanada""   },   {     ""snameBirthPlace4"": ""South Orange, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/southorangenewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Brussels, Belgium"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/brusselsbelgium""   },   {     ""snameBirthPlace4"": ""Asheville, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ashevillenorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Carlisle, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/carlislepennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Ireland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ireland""   },   {     ""snameBirthPlace4"": ""Waltham, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/walthammassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/connecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Troy, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/troynewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Riga, Latvia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rigalatvia""   },   {     ""snameBirthPlace4"": ""Bellingham, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bellinghamwashingtonunitedstates""   },   {     ""snameBirthPlace4"": ""Glen Cove, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/glencovenewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/italy""   },   {     ""snameBirthPlace4"": ""Chestnut Hill, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chestnuthillmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Kovno, Lithuania"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kovnolithuania""   },   {     ""snameBirthPlace4"": ""Canandaigua, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/canandaiguanewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Benton Harbor, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bentonharbormichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Arlington, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/arlingtonnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Athens, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/athensgeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Lake Forest, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lakeforestillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Napoleon, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/napoleonohiounitedstates""   },   {     ""snameBirthPlace4"": ""Antwerp, Flanders"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/antwerpflanders""   },   {     ""snameBirthPlace4"": ""Elgin, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/elginillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Castlemaine, Australia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/castlemaineaustralia""   },   {     ""snameBirthPlace4"": ""Warren, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/warrenpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Fox Chase, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/foxchasepennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Brno, Czechoslovakia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/brnoczechoslovakia""   },   {     ""snameBirthPlace4"": ""Electric City, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/electriccitywashingtonunitedstates""   },   {     ""snameBirthPlace4"": ""Canton, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cantonohiounitedstates""   },   {     ""snameBirthPlace4"": ""Kansas City, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kansascitykansasunitedstates""   },   {     ""snameBirthPlace4"": ""Montabour, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/montabourgermany""   },   {     ""snameBirthPlace4"": ""Ayr, Ontario, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ayrontariocanada""   },   {     ""snameBirthPlace4"": ""Saint Catherine's, Ontario, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/saintcatherinesontariocanada""   },   {     ""snameBirthPlace4"": ""Yasi, Romania"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/yasiromania""   },   {     ""snameBirthPlace4"": ""Gnieveshev, Poland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gnieveshevpoland""   },   {     ""snameBirthPlace4"": ""Massillon, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/massillonohiounitedstates""   },   {     ""snameBirthPlace4"": ""Denmark"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/denmark""   },   {     ""snameBirthPlace4"": ""Vershire, Vermont, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vershirevermontunitedstates""   },   {     ""snameBirthPlace4"": ""Suffern, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/suffernnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Painesville, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/painesvilleohiounitedstates""   },   {     ""snameBirthPlace4"": ""Greenlaw, Scotland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/greenlawscotland""   },   {     ""snameBirthPlace4"": ""Lvov, Ukraine"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lvovukraine""   },   {     ""snameBirthPlace4"": ""Voronez, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/voronezrussia""   },   {     ""snameBirthPlace4"": ""Massapequa, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/massapequanewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Valdosta, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/valdostageorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Butler, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/butlerpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Swampscott, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/swampscottmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Corning, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/corningnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Kobe, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kobejapan""   },   {     ""snameBirthPlace4"": ""Clermont, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/clermontnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Ida Grove, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/idagroveiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Highland Park, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/highlandparknewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Manchester, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/manchesternewhampshireunitedstates""   },   {     ""snameBirthPlace4"": ""East Hampton, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/easthamptonconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Moscow, U.S.S.R."",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/moscowussr""   },   {     ""snameBirthPlace4"": ""Cardiff, Wales"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cardiffwales""   },   {     ""snameBirthPlace4"": ""Murano, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/muranoitaly""   },   {     ""snameBirthPlace4"": ""Deer Lodge, Montana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/deerlodgemontanaunitedstates""   },   {     ""snameBirthPlace4"": ""Hoquiam, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hoquiamwashingtonunitedstates""   },   {     ""snameBirthPlace4"": ""Sedalia, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sedaliamissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Zell am Harmersbach, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/zellamharmersbachgermany""   },   {     ""snameBirthPlace4"": ""Carrollton, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/carrolltongeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""North Wilkesboro, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/northwilkesboronorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Spring Hill, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/springhillkansasunitedstates""   },   {     ""snameBirthPlace4"": ""Santiago de los Caballeros, Dominican Republic"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/santiagodeloscaballerosdominicanrepublic""   },   {     ""snameBirthPlace4"": ""Lauder, Manitoba, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/laudermanitobacanada""   },   {     ""snameBirthPlace4"": ""Statesville, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/statesvillenorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Compton, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/comptoncaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Fulton, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fultonmissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Bredfield, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bredfieldengland""   },   {     ""snameBirthPlace4"": ""Los Angeles, California, USA"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/losangelescaliforniausa""   },   {     ""snameBirthPlace4"": ""Emporia, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/emporiakansasunitedstates""   },   {     ""snameBirthPlace4"": ""Coraopolis, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/coraopolispennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Ludvinovka, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ludvinovkarussia""   },   {     ""snameBirthPlace4"": ""Newport, Vermont, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newportvermontunitedstates""   },   {     ""snameBirthPlace4"": ""Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tennesseeunitedstates""   },   {     ""snameBirthPlace4"": ""Margaretville, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/margaretvillenewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""North Dakota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/northdakotaunitedstates""   },   {     ""snameBirthPlace4"": ""Revere, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/reveremassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Burlingame, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/burlingamecaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Mt. Airy, Maryland, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mtairymarylandunitedstates""   },   {     ""snameBirthPlace4"": ""Austell, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/austellgeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Marengo, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/marengoiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Dover, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/doverohiounitedstates""   },   {     ""snameBirthPlace4"": ""Seneca, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/senecakansasunitedstates""   },   {     ""snameBirthPlace4"": ""St. John, Virgin Islands, Danish West Indies"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stjohnvirginislandsdanishwestindies""   },   {     ""snameBirthPlace4"": ""Fibbiano, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fibbianoitaly""   },   {     ""snameBirthPlace4"": ""Ho Chi Minh City, Vietnam"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hochiminhcityvietnam""   },   {     ""snameBirthPlace4"": ""Winsted, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/winstedconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Sevierville, Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/seviervilletennesseeunitedstates""   },   {     ""snameBirthPlace4"": ""Cub Run, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cubrunkentuckyunitedstates""   },   {     ""snameBirthPlace4"": ""Malnate, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/malnateitaly""   },   {     ""snameBirthPlace4"": ""Stowe, Vermont, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stowevermontunitedstates""   },   {     ""snameBirthPlace4"": ""Woodbury, Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/woodburytennesseeunitedstates""   },   {     ""snameBirthPlace4"": ""New Kensington, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newkensingtonpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Camp Springs, Maryland, USA"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/campspringsmarylandusa""   },   {     ""snameBirthPlace4"": ""Orlienas, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/orlienasfrance""   },   {     ""snameBirthPlace4"": ""Herford, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/herfordgermany""   },   {     ""snameBirthPlace4"": ""Williamsport, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/williamsportpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Park City, Utah, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/parkcityutahunitedstates""   },   {     ""snameBirthPlace4"": ""Buzeu, Romania"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/buzeuromania""   },   {     ""snameBirthPlace4"": ""Santo Domingo"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/santodomingo""   },   {     ""snameBirthPlace4"": ""Tipton, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tiptoniowaunitedstates""   },   {     ""snameBirthPlace4"": ""Bar Harbor, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/barharbormaineunitedstates""   },   {     ""snameBirthPlace4"": ""Lebanon, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lebanonnewhampshireunitedstates""   },   {     ""snameBirthPlace4"": ""Red Bank, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/redbanknewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Woodland, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/woodlandcaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Tashkent, Uzbekistan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tashkentuzbekistan""   },   {     ""snameBirthPlace4"": ""Bay City, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/baycitymichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Chicago Heights, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chicagoheightsillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Bath, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bathengland""   },   {     ""snameBirthPlace4"": ""Bieltsy, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bieltsyrussia""   },   {     ""snameBirthPlace4"": ""Bedford, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bedfordengland""   },   {     ""snameBirthPlace4"": ""Amesbury, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/amesburymassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Amoy, China"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/amoychina""   },   {     ""snameBirthPlace4"": ""Bristol, Rhode Island, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bristolrhodeislandunitedstates""   },   {     ""snameBirthPlace4"": ""Bluffton, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/blufftonindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Charenton-Saint-Maurice, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/charentonsaintmauricefrance""   },   {     ""snameBirthPlace4"": ""Albany, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/albanycaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Ashland, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ashlandohiounitedstates""   },   {     ""snameBirthPlace4"": ""Bournemouth, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bournemouthengland""   },   {     ""snameBirthPlace4"": ""Busk, U.S.S.R."",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/buskussr""   },   {     ""snameBirthPlace4"": ""Borghorst, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/borghorstgermany""   },   {     ""snameBirthPlace4"": ""Canig, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/caniggermany""   },   {     ""snameBirthPlace4"": ""Aywaille, Belgium"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/aywaillebelgium""   },   {     ""snameBirthPlace4"": ""Alverstoke, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/alverstokeengland""   },   {     ""snameBirthPlace4"": ""Benicia, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/beniciacaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/alabamaunitedstates""   },   {     ""snameBirthPlace4"": ""Auburn, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/auburnwashingtonunitedstates""   },   {     ""snameBirthPlace4"": ""Canfield, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/canfieldillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Bayonne, Basses-Pyrenees, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bayonnebassespyreneesfrance""   },   {     ""snameBirthPlace4"": ""Castellaneta, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/castellanetaitaly""   },   {     ""snameBirthPlace4"": ""Charlevoix, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/charlevoixmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Carnegie, Oklahoma, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/carnegieoklahomaunitedstates""   },   {     ""snameBirthPlace4"": ""Cedar Creek, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cedarcreekvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Alsace, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/alsacefrance""   },   {     ""snameBirthPlace4"": ""Alsen, New York"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/alsennewyork""   },   {     ""snameBirthPlace4"": ""Broons, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/broonsfrance""   },   {     ""snameBirthPlace4"": ""Tuttlingen, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tuttlingengermany""   },   {     ""snameBirthPlace4"": ""Reudnitz, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/reudnitzgermany""   },   {     ""snameBirthPlace4"": ""Creswick, Victoria, Australia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/creswickvictoriaaustralia""   },   {     ""snameBirthPlace4"": ""Bordeaux, Gironde, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bordeauxgirondefrance""   },   {     ""snameBirthPlace4"": ""Krefeld, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/krefeldgermany""   },   {     ""snameBirthPlace4"": ""Sarawak, East Malaysia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sarawakeastmalaysia""   },   {     ""snameBirthPlace4"": ""California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/californiaunitedstates""   },   {     ""snameBirthPlace4"": ""Brighton, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/brightonengland""   },   {     ""snameBirthPlace4"": ""Carmel, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/carmelcaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Ventura, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/venturacaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Grand Rapids, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/grandrapidsmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""London, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/londonengland""   },   {     ""snameBirthPlace4"": ""Cleveland, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/clevelandohiounitedstates""   },   {     ""snameBirthPlace4"": ""Detroit, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/detroitmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Florence, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/florenceitaly""   },   {     ""snameBirthPlace4"": ""Ithaca, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ithacanewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/england""   },   {     ""snameBirthPlace4"": ""Liverpool, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/liverpoolengland""   },   {     ""snameBirthPlace4"": ""Hingham, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hinghammassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Kansas City, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kansascitymissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Colorado Springs, Colorado, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/coloradospringscoloradounitedstates""   },   {     ""snameBirthPlace4"": ""Columbus, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/columbusohiounitedstates""   },   {     ""snameBirthPlace4"": ""Guatemala City, Guatemala"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/guatemalacityguatemala""   },   {     ""snameBirthPlace4"": ""Elberfeld, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/elberfeldgermany""   },   {     ""snameBirthPlace4"": ""La Grange, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lagrangeillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""LaGrange, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lagrangeillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Flint, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/flintmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Honolulu, Hawaii, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/honoluluhawaiiunitedstates""   },   {     ""snameBirthPlace4"": ""Cincinnati, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cincinnatiohiounitedstates""   },   {     ""snameBirthPlace4"": ""Leeds, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/leedsengland""   },   {     ""snameBirthPlace4"": ""Edinburgh, Scotland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/edinburghscotland""   },   {     ""snameBirthPlace4"": ""Danville, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/danvillevirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Huntsville, Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/huntsvillealabamaunitedstates""   },   {     ""snameBirthPlace4"": ""Greenville, South Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/greenvillesouthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Kiev, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kievrussia""   },   {     ""snameBirthPlace4"": ""Cologne, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/colognegermany""   },   {     ""snameBirthPlace4"": ""Hartford, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hartfordconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Fresno, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fresnocaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Denver, Colorado, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/denvercoloradounitedstates""   },   {     ""snameBirthPlace4"": ""Houston, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/houstontexasunitedstates""   },   {     ""snameBirthPlace4"": ""Indianapolis, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/indianapolisindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Hudson, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hudsonnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Lakewood, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lakewoodohiounitedstates""   },   {     ""snameBirthPlace4"": ""Kent, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kentohiounitedstates""   },   {     ""snameBirthPlace4"": ""Jackson, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jacksonmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Des Moines, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/desmoinesiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Englewood, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/englewoodnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Knoxville, Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/knoxvilletennesseeunitedstates""   },   {     ""snameBirthPlace4"": ""Greenwich, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/greenwichconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Iowa City, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/iowacityiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Gloucester, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gloucestermassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Hoboken, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hobokennewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Fort Collins, Colorado, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fortcollinscoloradounitedstates""   },   {     ""snameBirthPlace4"": ""Huntington, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/huntingtonnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Fort Wayne, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fortwayneindianaunitedstates""   },   {     ""snameBirthPlace4"": ""La Jolla, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lajollacaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Covington, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/covingtonkentuckyunitedstates""   },   {     ""snameBirthPlace4"": ""Litchfield, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/litchfieldconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Leavenworth, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/leavenworthkansasunitedstates""   },   {     ""snameBirthPlace4"": ""Jamestown, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jamestownnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Hackensack, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hackensacknewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Dresden, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dresdengermany""   },   {     ""snameBirthPlace4"": ""Easton, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eastonpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Erie, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eriepennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Georgetown, District of Columbia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/georgetowndistrictofcolumbiaunitedstates""   },   {     ""snameBirthPlace4"": ""Exeter, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/exeterengland""   },   {     ""snameBirthPlace4"": ""East Chicago, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eastchicagoindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Hague, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/haguenetherlands""   },   {     ""snameBirthPlace4"": ""Krakow, Poland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/krakowpoland""   },   {     ""snameBirthPlace4"": ""Eureka, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eurekacaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Hulst, Flanders"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hulstflanders""   },   {     ""snameBirthPlace4"": ""Hendersonville, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hendersonvillenorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Flemingville, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/flemingvillenewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Lexington, Oklahoma, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lexingtonoklahomaunitedstates""   },   {     ""snameBirthPlace4"": ""Kalvaria, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kalvariarussia""   },   {     ""snameBirthPlace4"": ""Cripple Creek, Colorado, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cripplecreekcoloradounitedstates""   },   {     ""snameBirthPlace4"": ""Edgecomb, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/edgecombmaineunitedstates""   },   {     ""snameBirthPlace4"": ""Fruitvale, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fruitvalecaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Hartford, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hartfordkentuckyunitedstates""   },   {     ""snameBirthPlace4"": ""Dunavant, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dunavantkansasunitedstates""   },   {     ""snameBirthPlace4"": ""Harper's Ferry, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/harpersferryvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Fort Monmouth, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fortmonmouthnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Hastings-on-Hudson, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hastingsonhudsonnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Hastings on Hudson, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hastingsonhudsonnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Gothland, Sweden"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gothlandsweden""   },   {     ""snameBirthPlace4"": ""Hagios Nikolaos, Greece"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hagiosnikolaosgreece""   },   {     ""snameBirthPlace4"": ""Lake Valley, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lakevalleynewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Krokeai, Sparta, Greece"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/krokeaispartagreece""   },   {     ""snameBirthPlace4"": ""Chrenovna, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chrenovnarussia""   },   {     ""snameBirthPlace4"": ""Hilversum, Holland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hilversumholland""   },   {     ""snameBirthPlace4"": ""Kilbirnie, Scotland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kilbirniescotland""   },   {     ""snameBirthPlace4"": ""Jerome, Arizona, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jeromearizonaunitedstates""   },   {     ""snameBirthPlace4"": ""Guadalajara, Spain"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/guadalajaraspain""   },   {     ""snameBirthPlace4"": ""Givet, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/givetfrance""   },   {     ""snameBirthPlace4"": ""Katranitsa, Greece"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/katranitsagreece""   },   {     ""snameBirthPlace4"": ""Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hungary""   },   {     ""snameBirthPlace4"": ""Lancaster, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lancasterpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Langres, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/langresfrance""   },   {     ""snameBirthPlace4"": ""Fort-de-France, Martinique"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fortdefrancemartinique""   },   {     ""snameBirthPlace4"": ""Goshen, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/goshenindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Krasnagorka, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/krasnagorkarussia""   },   {     ""snameBirthPlace4"": ""Courtrai, Belgium"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/courtraibelgium""   },   {     ""snameBirthPlace4"": ""Eldorado, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eldoradokansasunitedstates""   },   {     ""snameBirthPlace4"": ""Debrecen, Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/debrecenhungary""   },   {     ""snameBirthPlace4"": ""Little Gap, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/littlegappennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Florida, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/floridaunitedstates""   },   {     ""snameBirthPlace4"": ""Genoa, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/genoaitaly""   },   {     ""snameBirthPlace4"": ""Fairburn, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fairburngeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Lansing, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lansingmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Liberty, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/libertyvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Ewa, Hawaii, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ewahawaiiunitedstates""   },   {     ""snameBirthPlace4"": ""Church Hill, Mississippi, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/churchhillmississippiunitedstates""   },   {     ""snameBirthPlace4"": ""Christchurch, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/christchurchengland""   },   {     ""snameBirthPlace4"": ""Ipswich, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ipswichmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Horse Cave, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/horsecavekentuckyunitedstates""   },   {     ""snameBirthPlace4"": ""Irvington-on-Hudson, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/irvingtononhudsonnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Jerry City, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jerrycityohiounitedstates""   },   {     ""snameBirthPlace4"": ""Forney, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/forneytexasunitedstates""   },   {     ""snameBirthPlace4"": ""Ichteghem, Belgium"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ichteghembelgium""   },   {     ""snameBirthPlace4"": ""Jefferson Village, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jeffersonvillagenewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Farnsborough, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/farnsboroughengland""   },   {     ""snameBirthPlace4"": ""Henderson, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hendersontexasunitedstates""   },   {     ""snameBirthPlace4"": ""Hardesty, Oklahoma, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hardestyoklahomaunitedstates""   },   {     ""snameBirthPlace4"": ""Hancock, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hancocknewhampshireunitedstates""   },   {     ""snameBirthPlace4"": ""La Valette, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lavalettefrance""   },   {     ""snameBirthPlace4"": ""Donovan, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/donovanillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Dunquerque, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dunquerquefrance""   },   {     ""snameBirthPlace4"": ""Joliet, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jolietillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Germania, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/germaniatexasunitedstates""   },   {     ""snameBirthPlace4"": ""Fredericksburg, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fredericksburgvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Lincolnshire, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lincolnshireengland""   },   {     ""snameBirthPlace4"": ""Huntly, Scotland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/huntlyscotland""   },   {     ""snameBirthPlace4"": ""Forrest, Mississippi, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/forrestmississippiunitedstates""   },   {     ""snameBirthPlace4"": ""Kewanee, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kewaneeillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Lebanon, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lebanonpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Delaware, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/delawareohiounitedstates""   },   {     ""snameBirthPlace4"": ""Johnstown, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/johnstownpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Coos Bay, Oregon, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/coosbayoregonunitedstates""   },   {     ""snameBirthPlace4"": ""Kazan, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kazanrussia""   },   {     ""snameBirthPlace4"": ""Fernie, British Columbia, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ferniebritishcolumbiacanada""   },   {     ""snameBirthPlace4"": ""Leverett, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/leverettmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Gloucestershire, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gloucestershireengland""   },   {     ""snameBirthPlace4"": ""Delaplane, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/delaplanevirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Gelnhausen, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gelnhausengermany""   },   {     ""snameBirthPlace4"": ""Delphos, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/delphosiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Fuenterrabia, Guipuzcoa, Spain"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fuenterrabiaguipuzcoaspain""   },   {     ""snameBirthPlace4"": ""Glen Ridge, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/glenridgenewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Newark, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newarknewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""New York, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newyorknewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""New Orleans, Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/neworleanslouisianaunitedstates""   },   {     ""snameBirthPlace4"": ""Los Angeles, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/losangelescaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Loudon, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/loudonnewhampshireunitedstates""   },   {     ""snameBirthPlace4"": ""Milwaukee, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/milwaukeewisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Naples, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/naplesitaly""   },   {     ""snameBirthPlace4"": ""Mobile, Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mobilealabamaunitedstates""   },   {     ""snameBirthPlace4"": ""Montclair, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/montclairnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""New Haven, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newhavenconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Madison, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/madisonwisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Minneapolis, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/minneapolisminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Mexico City, Mexico"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mexicocitymexico""   },   {     ""snameBirthPlace4"": ""Nashville, Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nashvilletennesseeunitedstates""   },   {     ""snameBirthPlace4"": ""Memphis, Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/memphistennesseeunitedstates""   },   {     ""snameBirthPlace4"": ""Natick, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/natickmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Newport, Rhode Island, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newportrhodeislandunitedstates""   },   {     ""snameBirthPlace4"": ""Mulhouse, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mulhousefrance""   },   {     ""snameBirthPlace4"": ""Miami, Florida, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/miamifloridaunitedstates""   },   {     ""snameBirthPlace4"": ""Lorain, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lorainohiounitedstates""   },   {     ""snameBirthPlace4"": ""Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/massachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Madison, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/madisongeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Mount Holly, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mounthollynewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Newport, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newportkentuckyunitedstates""   },   {     ""snameBirthPlace4"": ""Minneapolis, Minnesota"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/minneapolisminnesota""   },   {     ""snameBirthPlace4"": ""Milton, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/miltonpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Madrid, Spain"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/madridspain""   },   {     ""snameBirthPlace4"": ""Marsala, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/marsalaitaly""   },   {     ""snameBirthPlace4"": ""Monterey, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/montereycaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Nagoya, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nagoyajapan""   },   {     ""snameBirthPlace4"": ""Managua, Nicaragua"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/managuanicaragua""   },   {     ""snameBirthPlace4"": ""Lowville, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lowvillenewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Nelson, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nelsonnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Milton, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/miltonconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Morristown, Vermont, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/morristownvermontunitedstates""   },   {     ""snameBirthPlace4"": ""Mount Pleasant, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mountpleasantiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Lucerne, Switzerland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lucerneswitzerland""   },   {     ""snameBirthPlace4"": ""Long Creek, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/longcreeknorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Loveland, Colorado, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lovelandcoloradounitedstates""   },   {     ""snameBirthPlace4"": ""Needham, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/needhammassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Newton, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newtonmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Niagara Falls, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/niagarafallsnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Niagara Falls, Ontario, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/niagarafallsontariocanada""   },   {     ""snameBirthPlace4"": ""Norfolk, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/norfolkvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Niles, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nilesmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Philadelphia, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/philadelphiapennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Paris, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/parisfrance""   },   {     ""snameBirthPlace4"": ""Orange, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/orangenewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Pittsburgh, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pittsburghpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Rome, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/romeitaly""   },   {     ""snameBirthPlace4"": ""Rochester, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rochesternewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Portland, Oregon, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/portlandoregonunitedstates""   },   {     ""snameBirthPlace4"": ""Omaha, Nebraska, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/omahanebraskaunitedstates""   },   {     ""snameBirthPlace4"": ""Oakland, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oaklandcaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Richmond, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/richmondvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Paterson, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/patersonnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Nuremberg, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nuremberggermany""   },   {     ""snameBirthPlace4"": ""Nyack, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nyacknewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Providence, Rhode Island, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/providencerhodeislandunitedstates""   },   {     ""snameBirthPlace4"": ""Raleigh, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/raleighnorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Perth Amboy, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/perthamboynewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Pasadena, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pasadenacaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Norwich, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/norwichconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Osaka, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/osakajapan""   },   {     ""snameBirthPlace4"": ""Oswego, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oswegonewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Racine, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/racinewisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Piermont, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/piermontnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Plainfield, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/plainfieldnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Quincy, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/quincymassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Rome, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/romegeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Pendleton, Oregon, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pendletonoregonunitedstates""   },   {     ""snameBirthPlace4"": ""Rockport, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rockportmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Reading, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/readingpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Puy, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/puyfrance""   },   {     ""snameBirthPlace4"": ""Pratt, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/prattkansasunitedstates""   },   {     ""snameBirthPlace4"": ""Portsmouth, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/portsmouthvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Nutley, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nutleynewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Plymouth, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/plymouthwisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Old Town, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oldtownmaineunitedstates""   },   {     ""snameBirthPlace4"": ""Pontremoli, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pontremoliitaly""   },   {     ""snameBirthPlace4"": ""Normal, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/normalillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Pisa, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pisaitaly""   },   {     ""snameBirthPlace4"": ""Riga, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rigarussia""   },   {     ""snameBirthPlace4"": ""North Platte, Nebraska, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/northplattenebraskaunitedstates""   },   {     ""snameBirthPlace4"": ""Palermo, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/palermoitaly""   },   {     ""snameBirthPlace4"": ""Ponta Pora, Brazil"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pontaporabrazil""   },   {     ""snameBirthPlace4"": ""Piano de Cilento, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pianodecilentoitaly""   },   {     ""snameBirthPlace4"": ""Prucisca, Croatia, Austria-Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pruciscacroatiaaustriahungary""   },   {     ""snameBirthPlace4"": ""Phoebus, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/phoebusvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Radautz, Austria-Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/radautzaustriahungary""   },   {     ""snameBirthPlace4"": ""Prelouc, Austria"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/preloucaustria""   },   {     ""snameBirthPlace4"": ""Paxton, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/paxtonmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Philipsburg, Quebec, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/philipsburgquebeccanada""   },   {     ""snameBirthPlace4"": ""Norwich, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/norwichnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Oslo, Norway"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oslonorway""   },   {     ""snameBirthPlace4"": ""Philipsburg, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/philipsburgpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Osage City, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/osagecitykansasunitedstates""   },   {     ""snameBirthPlace4"": ""Ribeauville, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ribeauvillefrance""   },   {     ""snameBirthPlace4"": ""Price, Utah, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/priceutahunitedstates""   },   {     ""snameBirthPlace4"": ""Oyster Bay, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oysterbaynewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Richmond, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/richmondengland""   },   {     ""snameBirthPlace4"": ""Riverton, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rivertonnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Plattsburgh, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/plattsburghnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Pelham Manor, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pelhammanornewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Orleans, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/orleansmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Norwalk, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/norwalkconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Rhinebeck, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rhinebecknewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/unitedstates""   },   {     ""snameBirthPlace4"": ""Tokyo, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tokyojapan""   },   {     ""snameBirthPlace4"": ""Zurich, Switzerland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/zurichswitzerland""   },   {     ""snameBirthPlace4"": ""St. Louis, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stlouismissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Santa Monica, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/santamonicacaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Toledo, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/toledoohiounitedstates""   },   {     ""snameBirthPlace4"": ""Seattle, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/seattlewashingtonunitedstates""   },   {     ""snameBirthPlace4"": ""Scranton, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/scrantonpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Washington, District of Columbia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/washingtondistrictofcolumbiaunitedstates""   },   {     ""snameBirthPlace4"": ""Stamford, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stamfordconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""San Francisco, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sanfranciscocaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Sao Paulo, Brazil"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/saopaulobrazil""   },   {     ""snameBirthPlace4"": ""Roxbury, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/roxburymassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Stockholm, Sweden"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stockholmsweden""   },   {     ""snameBirthPlace4"": ""Winston-Salem, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/winstonsalemnorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/virginiaunitedstates""   },   {     ""snameBirthPlace4"": ""St. Paul, Minnesota, United states"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stpaulminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""St. Paul, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stpaulminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Tampa, Florida, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tampafloridaunitedstates""   },   {     ""snameBirthPlace4"": ""Toronto, Ontario, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/torontoontariocanada""   },   {     ""snameBirthPlace4"": ""Worcester, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/worcestermassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Wichita, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wichitakansasunitedstates""   },   {     ""snameBirthPlace4"": ""St. Petersburg, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stpetersburgrussia""   },   {     ""snameBirthPlace4"": ""Tacoma, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tacomawashingtonunitedstates""   },   {     ""snameBirthPlace4"": ""Tours, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/toursfrance""   },   {     ""snameBirthPlace4"": ""Superior, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/superiorwisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Yonkers, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/yonkersnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Syracuse, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/syracusenewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Roswell, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/roswellnewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Utica, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/uticanewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Topeka, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/topekakansasunitedstates""   },   {     ""snameBirthPlace4"": ""Savannah, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/savannahgeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Spokane, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/spokanewashingtonunitedstates""   },   {     ""snameBirthPlace4"": ""Wilkes-Barre, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wilkesbarrepennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Tucson, Arizona, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tucsonarizonaunitedstates""   },   {     ""snameBirthPlace4"": ""Venice, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/venicecaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Santurce, Puerto Rico"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/santurcepuertorico""   },   {     ""snameBirthPlace4"": ""Springfield, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/springfieldmissouriunitedstates""   },   {     ""snameBirthPlace4"": ""San Juan, Puerto Rico"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sanjuanpuertorico""   },   {     ""snameBirthPlace4"": ""Steubenville, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/steubenvilleohiounitedstates""   },   {     ""snameBirthPlace4"": ""Shanghai, China"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/shanghaichina""   },   {     ""snameBirthPlace4"": ""St. Augustine, Florida, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/staugustinefloridaunitedstates""   },   {     ""snameBirthPlace4"": ""Santiago, Chile"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/santiagochile""   },   {     ""snameBirthPlace4"": ""Tesuque, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tesuquenewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Toulouse, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/toulousefrance""   },   {     ""snameBirthPlace4"": ""Springfield, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/springfieldillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Vilna, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vilnarussia""   },   {     ""snameBirthPlace4"": ""Waukegan, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/waukeganillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Vallejo, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vallejocaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Skowhegan, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/skowheganmaineunitedstates""   },   {     ""snameBirthPlace4"": ""Warren, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/warrenohiounitedstates""   },   {     ""snameBirthPlace4"": ""Sumter, South Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sumtersouthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Saginaw, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/saginawmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Springfield, Vermont, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/springfieldvermontunitedstates""   },   {     ""snameBirthPlace4"": ""Waterford, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/waterfordconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Windham, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/windhamconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Rotterdam, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rotterdamnetherlands""   },   {     ""snameBirthPlace4"": ""Seneca Falls, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/senecafallsnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Wayland, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/waylandnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Wurzburg, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wurzburggermany""   },   {     ""snameBirthPlace4"": ""St. Catharines, Ontario, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stcatharinesontariocanada""   },   {     ""snameBirthPlace4"": ""Saskatoon, Saskatchewan, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/saskatoonsaskatchewancanada""   },   {     ""snameBirthPlace4"": ""San Fratello, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sanfratelloitaly""   },   {     ""snameBirthPlace4"": ""Rossville, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rossvillenewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Whitewater, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/whitewaterwisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Springville, Utah, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/springvilleutahunitedstates""   },   {     ""snameBirthPlace4"": ""San Pietro di Cadore, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sanpietrodicadoreitaly""   },   {     ""snameBirthPlace4"": ""Salonika, Greece"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/salonikagreece""   },   {     ""snameBirthPlace4"": ""Waterville, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/watervilleminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Wexford, Ireland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wexfordireland""   },   {     ""snameBirthPlace4"": ""Smolensk, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/smolenskrussia""   },   {     ""snameBirthPlace4"": ""Sridharkhola, India"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sridharkholaindia""   },   {     ""snameBirthPlace4"": ""Santa Ana, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/santaanacaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Wallingford, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wallingfordconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Wethersfield, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wethersfieldconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""San Rafael, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sanrafaelcaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Santa Cruz, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/santacruznewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Watsonville, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/watsonvillecaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Suffolk, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/suffolkvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Uniopolis, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/uniopolisohiounitedstates""   },   {     ""snameBirthPlace4"": ""Waynesboro, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/waynesboropennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Surrey, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/surreyengland""   },   {     ""snameBirthPlace4"": ""Wichita Falls, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wichitafallstexasunitedstates""   },   {     ""snameBirthPlace4"": ""Shilova, Lithuania"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/shilovalithuania""   },   {     ""snameBirthPlace4"": ""Verona, Veneto, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/veronavenetoitaly""   },   {     ""snameBirthPlace4"": ""Trenton, Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/trentontennesseeunitedstates""   },   {     ""snameBirthPlace4"": ""St. Petersburg, Florida, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stpetersburgfloridaunitedstates""   },   {     ""snameBirthPlace4"": ""Trinidad, Colorado, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/trinidadcoloradounitedstates""   },   {     ""snameBirthPlace4"": ""Valley Head, Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/valleyheadalabamaunitedstates""   },   {     ""snameBirthPlace4"": ""Sunbury, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sunburypennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Wetumpka, Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wetumpkaalabamaunitedstates""   },   {     ""snameBirthPlace4"": ""Barberton, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/barbertonohiounitedstates""   },   {     ""snameBirthPlace4"": ""Anamosa, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/anamosaiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Avon, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/avonillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Amsterdam, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/amsterdamnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Alameda, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/alamedacaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Amersfoort, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/amersfoortnetherlands""   },   {     ""snameBirthPlace4"": ""Alliance, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/allianceohiounitedstates""   },   {     ""snameBirthPlace4"": ""Appleton City, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/appletoncitymissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Aliceville, Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/alicevillealabamaunitedstates""   },   {     ""snameBirthPlace4"": ""Wilmington, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wilmingtonnorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Attica, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/atticanewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Attleboro, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/attleboromassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Allendale, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/allendalenewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Bartica, Guyana"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/barticaguyana""   },   {     ""snameBirthPlace4"": ""Auburn, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/auburnindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Angouleme, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/angoulemefrance""   },   {     ""snameBirthPlace4"": ""Barlae Mill, Scotland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/barlaemillscotland""   },   {     ""snameBirthPlace4"": ""Barnstaple, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/barnstapleengland""   },   {     ""snameBirthPlace4"": ""Arden, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ardennorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Avignon, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/avignonfrance""   },   {     ""snameBirthPlace4"": ""Ashtabula Harbor, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ashtabulaharborohiounitedstates""   },   {     ""snameBirthPlace4"": ""Amherst, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/amherstnewhampshireunitedstates""   },   {     ""snameBirthPlace4"": ""Anson, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ansontexasunitedstates""   },   {     ""snameBirthPlace4"": ""Tappan, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tappannewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Apache, Oklahoma, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/apacheoklahomaunitedstates""   },   {     ""snameBirthPlace4"": ""Artesia, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/artesianewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Alexandria, Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/alexandrialouisianaunitedstates""   },   {     ""snameBirthPlace4"": ""Basco, Batanes, Philippines"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bascobatanesphilippines""   },   {     ""snameBirthPlace4"": ""Alhambra, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/alhambracaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Arcola, Saskatchewan, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/arcolasaskatchewancanada""   },   {     ""snameBirthPlace4"": ""Ada, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/adaohiounitedstates""   },   {     ""snameBirthPlace4"": ""Battiest, Oklahoma, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/battiestoklahomaunitedstates""   },   {     ""snameBirthPlace4"": ""Ask, Denmark"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/askdenmark""   },   {     ""snameBirthPlace4"": ""Ayrshire, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ayrshireiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Anadarko, Oklahoma, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/anadarkooklahomaunitedstates""   },   {     ""snameBirthPlace4"": ""Abbeville, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/abbevillefrance""   },   {     ""snameBirthPlace4"": ""Albion, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/albionmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Baldwin, Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/baldwinlouisianaunitedstates""   },   {     ""snameBirthPlace4"": ""Accri, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/accriitaly""   },   {     ""snameBirthPlace4"": ""Bartlett, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bartletttexasunitedstates""   },   {     ""snameBirthPlace4"": ""Abington, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/abingtonindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Almeria, Spain"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/almeriaspain""   },   {     ""snameBirthPlace4"": ""Andelys, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/andelysfrance""   },   {     ""snameBirthPlace4"": ""Altmar, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/altmarnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Appleton, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/appletonminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Ashfield, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ashfieldmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Auburn, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/auburnillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Anascaul, Ireland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/anascaulireland""   },   {     ""snameBirthPlace4"": ""Arachova, Greece"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/arachovagreece""   },   {     ""snameBirthPlace4"": ""Beverwyck, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/beverwycknetherlands""   },   {     ""snameBirthPlace4"": ""Bellport, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bellportnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Belding, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/beldingmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Bogata, Colombia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bogatacolombia""   },   {     ""snameBirthPlace4"": ""Bologne, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bologneitaly""   },   {     ""snameBirthPlace4"": ""Bayeux, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bayeuxfrance""   },   {     ""snameBirthPlace4"": ""Bessemer, Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bessemeralabamaunitedstates""   },   {     ""snameBirthPlace4"": ""Beaumont, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/beaumonttexasunitedstates""   },   {     ""snameBirthPlace4"": ""Blois, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bloisfrance""   },   {     ""snameBirthPlace4"": ""Bethpage, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bethpagenewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Blanco Canyon, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/blancocanyonnewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Beryl, Utah, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/berylutahunitedstates""   },   {     ""snameBirthPlace4"": ""Beaver Dam, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/beaverdamwisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Bolton-le-Moor, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/boltonlemoorengland""   },   {     ""snameBirthPlace4"": ""Burslem, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/burslemengland""   },   {     ""snameBirthPlace4"": ""Olathe, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/olathekansasunitedstates""   },   {     ""snameBirthPlace4"": ""Burri, Khartoum, Sudan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/burrikhartoumsudan""   },   {     ""snameBirthPlace4"": ""Salmon, Idaho, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/salmonidahounitedstates""   },   {     ""snameBirthPlace4"": ""Malden, Australia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/maldenaustralia""   },   {     ""snameBirthPlace4"": ""Cassopolis, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cassopolismichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Shenandoah, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/shenandoahiowaunitedstates""   },   {     ""snameBirthPlace4"": ""San Saba, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sansabatexasunitedstates""   },   {     ""snameBirthPlace4"": ""Moose Jaw, Saskatchewan, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/moosejawsaskatchewancanada""   },   {     ""snameBirthPlace4"": ""Chile"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chile""   },   {     ""snameBirthPlace4"": ""East London, South Africa"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eastlondonsouthafrica""   },   {     ""snameBirthPlace4"": ""Lakeland, Florida, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lakelandfloridaunitedstates""   },   {     ""snameBirthPlace4"": ""Rajaburi, Thailand"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rajaburithailand""   },   {     ""snameBirthPlace4"": ""Hatch, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hatchnewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Estline, South Dakota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/estlinesouthdakotaunitedstates""   },   {     ""snameBirthPlace4"": ""Indian Orchard, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/indianorchardmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Guthrie, Oklahoma, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/guthrieoklahomaunitedstates""   },   {     ""snameBirthPlace4"": ""Mineola, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mineolanewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Cheltenham, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cheltenhampennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Hapeville, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hapevillegeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Samer, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/samerfrance""   },   {     ""snameBirthPlace4"": ""Hyde Park, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hydeparkmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Clarkstown, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/clarkstownnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Montpelier, Vermont, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/montpeliervermontunitedstates""   },   {     ""snameBirthPlace4"": ""Lynn, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lynnmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Seekonk, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/seekonkmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Wahpeton, North Dakota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wahpetonnorthdakotaunitedstates""   },   {     ""snameBirthPlace4"": ""Evans Creek, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/evanscreekohiounitedstates""   },   {     ""snameBirthPlace4"": ""Chadds Ford, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chaddsfordpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Isari, Greece"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/isarigreece""   },   {     ""snameBirthPlace4"": ""Harpoot, Armenia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/harpootarmenia""   },   {     ""snameBirthPlace4"": ""Honolulu, Hawaii"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/honoluluhawaii""   },   {     ""snameBirthPlace4"": ""Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/illinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Bryan, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bryanohiounitedstates""   },   {     ""snameBirthPlace4"": ""Wide Ruins, Arizona, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wideruinsarizonaunitedstates""   },   {     ""snameBirthPlace4"": ""Window Rock, Arizona, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/windowrockarizonaunitedstates""   },   {     ""snameBirthPlace4"": ""Rodenbach, Bavaria, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rodenbachbavariagermany""   },   {     ""snameBirthPlace4"": ""Linz, Austria-Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/linzaustriahungary""   },   {     ""snameBirthPlace4"": ""Panama City, Panama"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/panamacitypanama""   },   {     ""snameBirthPlace4"": ""Tiflis, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tiflisrussia""   },   {     ""snameBirthPlace4"": ""Ste. Genevieve, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stegenevievemissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ohiounitedstates""   },   {     ""snameBirthPlace4"": ""Montbeliard, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/montbeliardfrance""   },   {     ""snameBirthPlace4"": ""Deventer, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/deventernetherlands""   },   {     ""snameBirthPlace4"": ""Montenero, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/monteneroitaly""   },   {     ""snameBirthPlace4"": ""Portsmith, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/portsmithohiounitedstates""   },   {     ""snameBirthPlace4"": ""Eurburg, Lithuania"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eurburglithuania""   },   {     ""snameBirthPlace4"": ""Mora, Sweden"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/morasweden""   },   {     ""snameBirthPlace4"": ""Camargo, Oklahoma, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/camargooklahomaunitedstates""   },   {     ""snameBirthPlace4"": ""San Angelo in Vado, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sanangeloinvadoitaly""   },   {     ""snameBirthPlace4"": ""Cava dei Tirreni, Campania, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cavadeitirrenicampaniaitaly""   },   {     ""snameBirthPlace4"": ""Shavli, Lithuania"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/shavlilithuania""   },   {     ""snameBirthPlace4"": ""Edo, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/edojapan""   },   {     ""snameBirthPlace4"": ""Buckhead, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/buckheadgeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Mossy Creek, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mossycreekgeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Wooster, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/woosterohiounitedstates""   },   {     ""snameBirthPlace4"": ""Sulphur Lick Springs, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sulphurlickspringsohiounitedstates""   },   {     ""snameBirthPlace4"": ""Pecs, Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pecshungary""   },   {     ""snameBirthPlace4"": ""High Forest, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/highforestminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Potosi, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/potosimissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Linstead, Jamaica"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/linsteadjamaica""   },   {     ""snameBirthPlace4"": ""Crisfield, Maryland, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/crisfieldmarylandunitedstates""   },   {     ""snameBirthPlace4"": ""Corsicana, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/corsicanatexasunitedstates""   },   {     ""snameBirthPlace4"": ""Tamworth, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tamworthengland""   },   {     ""snameBirthPlace4"": ""Georgetown, South Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/georgetownsouthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Trondheim, Norway"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/trondheimnorway""   },   {     ""snameBirthPlace4"": ""Greensboro, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/greensborogeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Natosha, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/natoshawisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Tuskegee, Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tuskegeealabamaunitedstates""   },   {     ""snameBirthPlace4"": ""Garden Grove, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gardengrovecaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Fremont, Nebraska, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fremontnebraskaunitedstates""   },   {     ""snameBirthPlace4"": ""Greenfield, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/greenfieldillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Newton Center, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newtoncentermassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Padula, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/padulaitaly""   },   {     ""snameBirthPlace4"": ""Mincy, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mincymissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Jamestown, North Dakota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jamestownnorthdakotaunitedstates""   },   {     ""snameBirthPlace4"": ""Sayre, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sayrepennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Hillsdale, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hillsdalenewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Fort Smith, Arkansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fortsmitharkansasunitedstates""   },   {     ""snameBirthPlace4"": ""Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/georgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Kearney, Nebraska, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kearneynebraskaunitedstates""   },   {     ""snameBirthPlace4"": ""Fort Morgan, Colorado, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fortmorgancoloradounitedstates""   },   {     ""snameBirthPlace4"": ""Obihiro, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/obihirojapan""   },   {     ""snameBirthPlace4"": ""Greenwich, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/greenwichnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Evergreen Park, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/evergreenparkillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""West Haven, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westhavenconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Monahans, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/monahanstexasunitedstates""   },   {     ""snameBirthPlace4"": ""Wellsville, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wellsvillekansasunitedstates""   },   {     ""snameBirthPlace4"": ""Lac du Flambeau, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lacduflambeauwisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Caines Ridge, Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cainesridgealabamaunitedstates""   },   {     ""snameBirthPlace4"": ""Pinpoint, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pinpointgeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Tallapoosa, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tallapoosageorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Deniston, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/denistonkentuckyunitedstates""   },   {     ""snameBirthPlace4"": ""Dodd's City, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/doddscitytexasunitedstates""   },   {     ""snameBirthPlace4"": ""Summerfield, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/summerfieldillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Piedras Negras, Mexico"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/piedrasnegrasmexico""   },   {     ""snameBirthPlace4"": ""Maryville, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/maryvillemissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Shelbyville, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/shelbyvilleindianaunitedstates""   },   {     ""snameBirthPlace4"": ""St. Charles, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stcharlesillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""East Los Angeles, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eastlosangelescaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Dinuba, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dinubacaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Fraser, Colorado, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/frasercoloradounitedstates""   },   {     ""snameBirthPlace4"": ""Morelia, Mexico"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/moreliamexico""   },   {     ""snameBirthPlace4"": ""North Attleboro, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/northattleboromassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Endicott, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/endicottnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Cottonwood, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cottonwoodtexasunitedstates""   },   {     ""snameBirthPlace4"": ""Bozanquit, Ontario, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bozanquitontariocanada""   },   {     ""snameBirthPlace4"": ""Wieliczka, Poland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wieliczkapoland""   },   {     ""snameBirthPlace4"": ""Marion, Arkansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/marionarkansasunitedstates""   },   {     ""snameBirthPlace4"": ""Middletown, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/middletownohiounitedstates""   },   {     ""snameBirthPlace4"": ""Fitzgerald, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fitzgeraldgeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Dresden, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dresdennewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Munkacs, Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/munkacshungary""   },   {     ""snameBirthPlace4"": ""Taylor, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/taylortexasunitedstates""   },   {     ""snameBirthPlace4"": ""Estherville, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/esthervilleiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Coldwater, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/coldwatermichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Reims, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/reimsfrance""   },   {     ""snameBirthPlace4"": ""Itri, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/itriitaly""   },   {     ""snameBirthPlace4"": ""Leyden, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/leydenmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Morrisville, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/morrisvillenorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Manila, Philippines"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/manilaphilippines""   },   {     ""snameBirthPlace4"": ""Emelle, Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/emellealabamaunitedstates""   },   {     ""snameBirthPlace4"": ""Durham, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/durhamengland""   },   {     ""snameBirthPlace4"": ""Macklin, Saskatchewan, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/macklinsaskatchewancanada""   },   {     ""snameBirthPlace4"": ""Boulogne, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/boulognefrance""   },   {     ""snameBirthPlace4"": ""Denton, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dentontexasunitedstates""   },   {     ""snameBirthPlace4"": ""Portland, Colorado, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/portlandcoloradounitedstates""   },   {     ""snameBirthPlace4"": ""Tela, Honduras"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/telahonduras""   },   {     ""snameBirthPlace4"": ""Chino, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chinocaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Huntingdon, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/huntingdonpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Thomasville, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/thomasvillegeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Hamilton, Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hamiltonalabamaunitedstates""   },   {     ""snameBirthPlace4"": ""Dyersburg, Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dyersburgtennesseeunitedstates""   },   {     ""snameBirthPlace4"": ""Louisiana, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/louisianamissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Tompkinsville, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tompkinsvillenewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""New Milford, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newmilfordpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Elkhart, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/elkhartindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Caprese, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/capreseitaly""   },   {     ""snameBirthPlace4"": ""Gilroy, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gilroycaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""National City, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nationalcitycaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Vladivostok, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vladivostokrussia""   },   {     ""snameBirthPlace4"": ""Laurel, Florida, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/laurelfloridaunitedstates""   },   {     ""snameBirthPlace4"": ""Dover Plains, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/doverplainsnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Oden, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/odenmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Saxony, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/saxonygermany""   },   {     ""snameBirthPlace4"": ""Cadillac, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cadillacmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""New Baltimore, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newbaltimoremichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Bordentown City, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bordentowncitynewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Bradford, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bradfordengland""   },   {     ""snameBirthPlace4"": ""Santiago de Compostela, Spain"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/santiagodecompostelaspain""   },   {     ""snameBirthPlace4"": ""Madrid, Nebraska, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/madridnebraskaunitedstates""   },   {     ""snameBirthPlace4"": ""Taylorville, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/taylorvilleillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Campground Church, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/campgroundchurchtexasunitedstates""   },   {     ""snameBirthPlace4"": ""Milton, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/miltonohiounitedstates""   },   {     ""snameBirthPlace4"": ""Saline, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/salinemichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Shelbyville, Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/shelbyvilletennesseeunitedstates""   },   {     ""snameBirthPlace4"": ""Rantoul, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rantoulillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Eustis, Florida, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eustisfloridaunitedstates""   },   {     ""snameBirthPlace4"": ""Mulhouse, Alsace, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mulhousealsacefrance""   },   {     ""snameBirthPlace4"": ""Liege, Flanders"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/liegeflanders""   },   {     ""snameBirthPlace4"": ""Henderson, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hendersonkentuckyunitedstates""   },   {     ""snameBirthPlace4"": ""Damvillers, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/damvillersfrance""   },   {     ""snameBirthPlace4"": ""La Rochelle, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/larochellefrance""   },   {     ""snameBirthPlace4"": ""Courrieres, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/courrieresfrance""   },   {     ""snameBirthPlace4"": ""Walworth, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/walworthengland""   },   {     ""snameBirthPlace4"": ""Pirmasens, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pirmasensgermany""   },   {     ""snameBirthPlace4"": ""Siena, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sienaitaly""   },   {     ""snameBirthPlace4"": ""Correggio, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/correggioitaly""   },   {     ""snameBirthPlace4"": ""Calcutta, India"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/calcuttaindia""   },   {     ""snameBirthPlace4"": ""La Roque d'Antheron, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/laroquedantheronfrance""   },   {     ""snameBirthPlace4"": ""Sansepolcro, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sansepolcroitaly""   },   {     ""snameBirthPlace4"": ""Carpentras, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/carpentrasfrance""   },   {     ""snameBirthPlace4"": ""Somersetshire, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/somersetshireengland""   },   {     ""snameBirthPlace4"": ""Maui, Hawaii, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mauihawaiiunitedstates""   },   {     ""snameBirthPlace4"": ""Vesoul, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vesoulfrance""   },   {     ""snameBirthPlace4"": ""Boulogne-sur-Mer, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/boulognesurmerfrance""   },   {     ""snameBirthPlace4"": ""Speicher, Switzerland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/speicherswitzerland""   },   {     ""snameBirthPlace4"": ""Rouvres, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rouvresfrance""   },   {     ""snameBirthPlace4"": ""Metz, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/metzfrance""   },   {     ""snameBirthPlace4"": ""Cameron Orchard, West Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cameronorchardwestvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""West Point, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westpointgeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Dallas, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dallasgeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Soest, Westphalia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/soestwestphalia""   },   {     ""snameBirthPlace4"": ""Schrobenhausen, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/schrobenhausengermany""   },   {     ""snameBirthPlace4"": ""San Giovanni, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sangiovanniitaly""   },   {     ""snameBirthPlace4"": ""Haydon Bridge, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/haydonbridgeengland""   },   {     ""snameBirthPlace4"": ""Troyes, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/troyesfrance""   },   {     ""snameBirthPlace4"": ""Bondio, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bondioitaly""   },   {     ""snameBirthPlace4"": ""Les Andelys, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lesandelysfrance""   },   {     ""snameBirthPlace4"": ""Gaeta, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gaetaitaly""   },   {     ""snameBirthPlace4"": ""Middletown, Connecticut"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/middletownconnecticut""   },   {     ""snameBirthPlace4"": ""Urbino, Marches, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/urbinomarchesitaly""   },   {     ""snameBirthPlace4"": ""Muscatine, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/muscatineiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Brompton, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bromptonengland""   },   {     ""snameBirthPlace4"": ""Sunderland, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sunderlandengland""   },   {     ""snameBirthPlace4"": ""Lander, Wyoming, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/landerwyomingunitedstates""   },   {     ""snameBirthPlace4"": ""Memmingen, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/memmingengermany""   },   {     ""snameBirthPlace4"": ""Livesey Hall, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/liveseyhallengland""   },   {     ""snameBirthPlace4"": ""Venice"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/venice""   },   {     ""snameBirthPlace4"": ""Pieve di Cadore, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pievedicadoreitaly""   },   {     ""snameBirthPlace4"": ""Hector, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hectornewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Sevres, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sevresfrance""   },   {     ""snameBirthPlace4"": ""Tournai, Belgium"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tournaibelgium""   },   {     ""snameBirthPlace4"": ""Serina, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/serinaitaly""   },   {     ""snameBirthPlace4"": ""Salank, Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/salankhungary""   },   {     ""snameBirthPlace4"": ""Wolkenburg, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wolkenburggermany""   },   {     ""snameBirthPlace4"": ""South Stoke, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/southstokeengland""   },   {     ""snameBirthPlace4"": ""Innsbruck, Austria"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/innsbruckaustria""   },   {     ""snameBirthPlace4"": ""Hertford, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hertfordengland""   },   {     ""snameBirthPlace4"": ""South Hadley, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/southhadleymassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Cults, Scotland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cultsscotland""   },   {     ""snameBirthPlace4"": ""Merthyr Tydfil, Wales"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/merthyrtydfilwales""   },   {     ""snameBirthPlace4"": ""Ipswich, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ipswichengland""   },   {     ""snameBirthPlace4"": ""Escheviller, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eschevillerfrance""   },   {     ""snameBirthPlace4"": ""Pitigliano, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pitiglianoitaly""   },   {     ""snameBirthPlace4"": ""Fuente de Cantos, Spain"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fuentedecantosspain""   },   {     ""snameBirthPlace4"": ""Bushnell, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bushnellillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Lodi, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lodicaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Richmond, Virginia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/richmondvirginia""   },   {     ""snameBirthPlace4"": ""Rochester, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rochesterohiounitedstates""   },   {     ""snameBirthPlace4"": ""Junction City, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/junctioncitykansasunitedstates""   },   {     ""snameBirthPlace4"": ""Lenox, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lenoxmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Dessau, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dessaugermany""   },   {     ""snameBirthPlace4"": ""Salisbury, Maryland, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/salisburymarylandunitedstates""   },   {     ""snameBirthPlace4"": ""Sanger, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sangercaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Pinsk, Poland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pinskpoland""   },   {     ""snameBirthPlace4"": ""Chinle, Arizona, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chinlearizonaunitedstates""   },   {     ""snameBirthPlace4"": ""Fort Des Moines, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fortdesmoinesiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Lewisburg, Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lewisburgtennesseeunitedstates""   },   {     ""snameBirthPlace4"": ""Derby, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/derbyconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Fairmont City, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fairmontcitypennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""South Raub, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/southraubindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Great Bend, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/greatbendkansasunitedstates""   },   {     ""snameBirthPlace4"": ""Grafton, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/graftonmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""London, Ontario, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/londonontariocanada""   },   {     ""snameBirthPlace4"": ""Sonneberg, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sonneberggermany""   },   {     ""snameBirthPlace4"": ""Lake George, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lakegeorgenewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Plainfield, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/plainfieldconnecticutunitedstates""   },   {     ""snameBirthPlace4"": ""Nottingham, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nottinghamengland""   },   {     ""snameBirthPlace4"": ""Hanover, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hanovergermany""   },   {     ""snameBirthPlace4"": ""Westminster, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westminstermassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Goffstown, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/goffstownnewhampshireunitedstates""   },   {     ""snameBirthPlace4"": ""Burlington, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/burlingtonnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Moudon, Switzerland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/moudonswitzerland""   },   {     ""snameBirthPlace4"": ""Winterhaven, Florida, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/winterhavenfloridaunitedstates""   },   {     ""snameBirthPlace4"": ""Galesburg, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/galesburgillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Monroe Falls, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/monroefallsohiounitedstates""   },   {     ""snameBirthPlace4"": ""Morrisania, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/morrisanianewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Trhova Kamenice, Austria-Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/trhovakameniceaustriahungary""   },   {     ""snameBirthPlace4"": ""Tillsonburg, Ontario, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tillsonburgontariocanada""   },   {     ""snameBirthPlace4"": ""Wilton, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wiltonnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""La Salle, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lasalleillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""West Carlisle, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westcarlisleohiounitedstates""   },   {     ""snameBirthPlace4"": ""Guelph, Ontario, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/guelphontariocanada""   },   {     ""snameBirthPlace4"": ""Findlay, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/findlayohiounitedstates""   },   {     ""snameBirthPlace4"": ""Bumble Bee, Arizona, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bumblebeearizonaunitedstates""   },   {     ""snameBirthPlace4"": ""Kingsville, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kingsvilletexasunitedstates""   },   {     ""snameBirthPlace4"": ""Owatonna, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/owatonnaminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Spalato, Dalmatia, Yugoslavia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/spalatodalmatiayugoslavia""   },   {     ""snameBirthPlace4"": ""Hornell, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hornellnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Mijdrecht, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mijdrechtnetherlands""   },   {     ""snameBirthPlace4"": ""Two Rivers, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tworiverswisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Dodgeville, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dodgevillewisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Manchester, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/manchesterengland""   },   {     ""snameBirthPlace4"": ""Chamita, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chamitanewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Greensboro, Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/greensboroalabamaunitedstates""   },   {     ""snameBirthPlace4"": ""Laredo, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/laredotexasunitedstates""   },   {     ""snameBirthPlace4"": ""Villahermosa, Mexico"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/villahermosamexico""   },   {     ""snameBirthPlace4"": ""Richmond, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/richmondcaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Delft, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/delftnetherlands""   },   {     ""snameBirthPlace4"": ""Clichy, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/clichyfrance""   },   {     ""snameBirthPlace4"": ""Stamford, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stamfordtexasunitedstates""   },   {     ""snameBirthPlace4"": ""Kutztown, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kutztownpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Paris, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/paristexasunitedstates""   },   {     ""snameBirthPlace4"": ""Pittsfield, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pittsfieldillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Dummerston, Vermont, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dummerstonvermontunitedstates""   },   {     ""snameBirthPlace4"": ""Cornish, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cornishmaineunitedstates""   },   {     ""snameBirthPlace4"": ""Dickson, Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dicksontennesseeunitedstates""   },   {     ""snameBirthPlace4"": ""Hartford, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hartfordmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Witchita Falls, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/witchitafallstexasunitedstates""   },   {     ""snameBirthPlace4"": ""Ottumwa, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ottumwaiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Niederrossbach, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/niederrossbachgermany""   },   {     ""snameBirthPlace4"": ""Wolkovisk, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wolkoviskrussia""   },   {     ""snameBirthPlace4"": ""Glen Ellyn, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/glenellynillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Engayrac, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/engayracfrance""   },   {     ""snameBirthPlace4"": ""Lerna, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lernaillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Sewanee, Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sewaneetennesseeunitedstates""   },   {     ""snameBirthPlace4"": ""Changchun, China"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/changchunchina""   },   {     ""snameBirthPlace4"": ""Lawnton, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lawntonpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Michigan City, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/michigancityindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Hemet, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hemetcaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Rock Island, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rockislandillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Oxford, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oxfordillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Phillips, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/phillipsmaineunitedstates""   },   {     ""snameBirthPlace4"": ""Union City, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/unioncitynewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Tarentum, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tarentumpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Torrance, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/torrancecaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Sioux Falls, South Dakota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/siouxfallssouthdakotaunitedstates""   },   {     ""snameBirthPlace4"": ""Woonsocket, Rhode Island, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/woonsocketrhodeislandunitedstates""   },   {     ""snameBirthPlace4"": ""Kingsburg, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kingsburgcaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Mahanoy City, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mahanoycitypennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Saratoga Springs, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/saratogaspringsnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Silver Creek, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/silvercreeknewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Buckhannon, West Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/buckhannonwestvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Hanover, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hanoverpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Union Township, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/uniontownshippennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""San German, Puerto Rico"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sangermanpuertorico""   },   {     ""snameBirthPlace4"": ""Orocovis, Puerto Rico"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/orocovispuertorico""   },   {     ""snameBirthPlace4"": ""Strassburg, West Prussia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/strassburgwestprussia""   },   {     ""snameBirthPlace4"": ""Centerville, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/centervilleindianaunitedstates""   },   {     ""snameBirthPlace4"": ""West Fairlee, Vermont, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westfairleevermontunitedstates""   },   {     ""snameBirthPlace4"": ""East Sudbury, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eastsudburymassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""West Medford, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westmedfordmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Charleston, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/charlestonmissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Clarendon Hills, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/clarendonhillsillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Tracy, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tracycaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""San Giorgio Albanese, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sangiorgioalbaneseitaly""   },   {     ""snameBirthPlace4"": ""Owosso, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/owossomichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Woburn, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/woburnmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Rush City, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rushcityminnesotaunitedstates""   },   {     ""snameBirthPlace4"": ""Port Hueneme, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/porthuenemecaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Possagno, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/possagnoitaly""   },   {     ""snameBirthPlace4"": ""Nahant, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nahantmassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Gifu Prefecture, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gifuprefecturejapan""   },   {     ""snameBirthPlace4"": ""Grant's Pass, Oregon, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/grantspassoregonunitedstates""   },   {     ""snameBirthPlace4"": ""Valley Forge, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/valleyforgepennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Manorhamilton, Ireland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/manorhamiltonireland""   },   {     ""snameBirthPlace4"": ""Teuton, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/teutonnewjerseyunitedstates""   },   {     ""snameBirthPlace4"": ""Plattsmouth, Nebraska, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/plattsmouthnebraskaunitedstates""   },   {     ""snameBirthPlace4"": ""Capac, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/capacmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Franklin, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/franklinnewhampshireunitedstates""   },   {     ""snameBirthPlace4"": ""Springville, Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/springvilletennesseeunitedstates""   },   {     ""snameBirthPlace4"": ""Caravaggio, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/caravaggioitaly""   },   {     ""snameBirthPlace4"": ""Olcott, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/olcottnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Swatow, China"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/swatowchina""   },   {     ""snameBirthPlace4"": ""Mantua, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mantuaitaly""   },   {     ""snameBirthPlace4"": ""Quito, Ecuador"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/quitoecuador""   },   {     ""snameBirthPlace4"": ""Konigsberg, Prussia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/konigsbergprussia""   },   {     ""snameBirthPlace4"": ""Colton, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/coltoncaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""Parma, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/parmaitaly""   },   {     ""snameBirthPlace4"": ""Claysville, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/claysvillepennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""St. Helena Island, South Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sthelenaislandsouthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Mudtown, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mudtownillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""El Rito, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/elritonewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Shamrock, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/shamrockmissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Latania, Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/latanialouisianaunitedstates""   },   {     ""snameBirthPlace4"": ""Brookhaven, Mississippi, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/brookhavenmississippiunitedstates""   },   {     ""snameBirthPlace4"": ""Mirano, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/miranoitaly""   },   {     ""snameBirthPlace4"": ""Galisteo, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/galisteonewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Stuart, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stuartvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Burnham, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/burnhamnewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Sweetwater, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sweetwaternewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Vega Baja, Puerto Rico"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vegabajapuertorico""   },   {     ""snameBirthPlace4"": ""Wasamasaw, South Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wasamasawsouthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Monero, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/moneronewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Oxford, Mississippi, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oxfordmississippiunitedstates""   },   {     ""snameBirthPlace4"": ""Glen Alta, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/glenaltageorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Wilcox County, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wilcoxcountygeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Orina, Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/orinalouisianaunitedstates""   },   {     ""snameBirthPlace4"": ""Eden, Mississippi, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/edenmississippiunitedstates""   },   {     ""snameBirthPlace4"": ""Dixon, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dixonnewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Porto Castillo, Honduras"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/portocastillohonduras""   },   {     ""snameBirthPlace4"": ""Clinton, Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/clintonlouisianaunitedstates""   },   {     ""snameBirthPlace4"": ""Fort Defiance, Arizona, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fortdefiancearizonaunitedstates""   },   {     ""snameBirthPlace4"": ""Scaria, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/scariaitaly""   },   {     ""snameBirthPlace4"": ""Deltaville, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/deltavillevirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Raymond, Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/raymondalabamaunitedstates""   },   {     ""snameBirthPlace4"": ""Eagle Shute, Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eagleshutelouisianaunitedstates""   },   {     ""snameBirthPlace4"": ""Crystal Springs, Mississippi, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/crystalspringsmississippiunitedstates""   },   {     ""snameBirthPlace4"": ""Rockdale, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rockdaletexasunitedstates""   },   {     ""snameBirthPlace4"": ""Sandersville, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sandersvillegeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Silver Springs, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/silverspringscaliforniaunitedstates""   },   {     ""snameBirthPlace4"": ""North Montgomery, Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/northmontgomeryalabamaunitedstates""   },   {     ""snameBirthPlace4"": ""Haiti"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/haiti""   },   {     ""snameBirthPlace4"": ""Terry, Mississippi, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/terrymississippiunitedstates""   },   {     ""snameBirthPlace4"": ""Saltville, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/saltvillevirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Cow Springs, Arizona, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cowspringsarizonaunitedstates""   },   {     ""snameBirthPlace4"": ""Cochiti Pueblo, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cochitipueblonewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Hickory, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hickorynorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Lula, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lulageorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Tuba City, Arizona, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tubacityarizonaunitedstates""   },   {     ""snameBirthPlace4"": ""Morenci, Arizona, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/morenciarizonaunitedstates""   },   {     ""snameBirthPlace4"": ""Shonto/Cow Springs, Arizona, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/shontocowspringsarizonaunitedstates""   },   {     ""snameBirthPlace4"": ""Kolsebro, Sweden"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kolsebrosweden""   },   {     ""snameBirthPlace4"": ""Polacca, Arizona, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/polaccaarizonaunitedstates""   },   {     ""snameBirthPlace4"": ""Pine Springs, Arizona, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pinespringsarizonaunitedstates""   },   {     ""snameBirthPlace4"": ""Sweetwater, Arizona, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sweetwaterarizonaunitedstates""   },   {     ""snameBirthPlace4"": ""Gallegos Canyon, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gallegoscanyonnewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Bonnieres-sur-Seine, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bonnieressurseinefrance""   },   {     ""snameBirthPlace4"": ""Vico, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vicoitaly""   },   {     ""snameBirthPlace4"": ""Brownstown, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/brownstownpennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Portsmouth, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/portsmouthohiounitedstates""   },   {     ""snameBirthPlace4"": ""Watertown, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/watertownnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Partinico, Sicily, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/partinicosicilyitaly""   },   {     ""snameBirthPlace4"": ""Chevry-Cossigny, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chevrycossignyfrance""   },   {     ""snameBirthPlace4"": ""Brillion, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/brillionwisconsinunitedstates""   },   {     ""snameBirthPlace4"": ""Kodiak, Alaska, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kodiakalaskaunitedstates""   },   {     ""snameBirthPlace4"": ""Cocconato, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cocconatoitaly""   },   {     ""snameBirthPlace4"": ""Sorio, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sorioitaly""   },   {     ""snameBirthPlace4"": ""Titusville, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/titusvillepennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Citta di Castello, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cittadicastelloitaly""   },   {     ""snameBirthPlace4"": ""Terni, Umbria, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/terniumbriaitaly""   },   {     ""snameBirthPlace4"": ""Wilcox, Arizona, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wilcoxarizonaunitedstates""   },   {     ""snameBirthPlace4"": ""Erzurum, Turkey"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/erzurumturkey""   },   {     ""snameBirthPlace4"": ""Cainesville, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cainesvillemissouriunitedstates""   },   {     ""snameBirthPlace4"": ""Rochester, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rochesterindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Fennville, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fennvillemichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Cresco, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/crescoiowaunitedstates""   },   {     ""snameBirthPlace4"": ""Whitby, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/whitbyengland""   },   {     ""snameBirthPlace4"": ""Mortagne, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mortagnefrance""   },   {     ""snameBirthPlace4"": ""Morristown, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/morristownnewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Tamaroa, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tamaroaillinoisunitedstates""   },   {     ""snameBirthPlace4"": ""Cussy-en-Morvan, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cussyenmorvanfrance""   },   {     ""snameBirthPlace4"": ""Williamsburg, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/williamsburgindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Wagonmound, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wagonmoundnewmexicounitedstates""   },   {     ""snameBirthPlace4"": ""Wusih, China"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wusihchina""   },   {     ""snameBirthPlace4"": ""Opelika, Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/opelikaalabamaunitedstates""   },   {     ""snameBirthPlace4"": ""Hoy Ping, China"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hoypingchina""   },   {     ""snameBirthPlace4"": ""Taiwan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/taiwan""   },   {     ""snameBirthPlace4"": ""Cozad, Nebraska, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cozadnebraskaunitedstates""   },   {     ""snameBirthPlace4"": ""Edinburg, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/edinburgindianaunitedstates""   },   {     ""snameBirthPlace4"": ""Cambodia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cambodia""   },   {     ""snameBirthPlace4"": ""Pinsk, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pinskrussia""   },   {     ""snameBirthPlace4"": ""Montreal, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/montrealcanada""   },   {     ""snameBirthPlace4"": ""Rockingham, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rockinghamgeorgiaunitedstates""   },   {     ""snameBirthPlace4"": ""Malta, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/maltaohiounitedstates""   },   {     ""snameBirthPlace4"": ""Keyser, West Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/keyserwestvirginiaunitedstates""   },   {     ""snameBirthPlace4"": ""Newbury, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newburymassachusettsunitedstates""   },   {     ""snameBirthPlace4"": ""Monroe, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/monroewashingtonunitedstates""   },   {     ""snameBirthPlace4"": ""Thetford, Vermont, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/thetfordvermontunitedstates""   },   {     ""snameBirthPlace4"": ""Perkasie, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/perkasiepennsylvaniaunitedstates""   },   {     ""snameBirthPlace4"": ""Cleveland Heights, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/clevelandheightsohiounitedstates""   },   {     ""snameBirthPlace4"": ""Midvale, Utah, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/midvaleutahunitedstates""   },   {     ""snameBirthPlace4"": ""Pima, Arizona, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pimaarizonaunitedstates""   },   {     ""snameBirthPlace4"": ""Jay, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jaymaineunitedstates""   },   {     ""snameBirthPlace4"": ""Edmonds, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/edmondswashingtonunitedstates""   },   {     ""snameBirthPlace4"": ""Riverdale, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/riverdalenewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Bronson, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bronsonmichiganunitedstates""   },   {     ""snameBirthPlace4"": ""Waterville, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/watervillenewyorkunitedstates""   },   {     ""snameBirthPlace4"": ""Chelsea, Vermont, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chelseavermontunitedstates""   },   {     ""snameBirthPlace4"": ""Manson, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mansonwashingtonunitedstates""   },   {     ""snameBirthPlace4"": ""Oxford, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oxfordohiounitedstates""   },   {     ""snameBirthPlace4"": ""Meteren, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/meterenfrance""   },   {     ""snameBirthPlace4"": ""Grand Coteau, Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/grandcoteaulouisianaunitedstates""   },   {     ""snameBirthPlace4"": ""McPherson, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mcphersonkansasunitedstates""   },   {     ""snameBirthPlace4"": ""East Bergholt, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eastbergholtengland""   },   {     ""snameBirthPlace4"": ""Hillsboro, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hillsboronorthcarolinaunitedstates""   },   {     ""snameBirthPlace4"": ""Vittoria, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vittoriaitaly""   },   {     ""snameBirthPlace4"": ""Liege, Belgium"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/liegebelgium""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27404"",""label"":""Red Weldon Sandlin"",""placeLabel"":""Owensboro, Kentucky, United States""}]","false"
"Which is the birth place of David White?"," X1-be-is-null,X2-which-Which-null,X4-David White-David-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-David White,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-David White-David-null, X1-subj-X2,X1-obj-X3,X4-has_name-David White,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, David White, David, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, David White, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, David White, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David White"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Ridley Park, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ridleyparkpennsylvaniaunitedstates"",     ""snameArtist3"": ""David White"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18609""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18609"",""label"":""David White"",""placeLabel"":""Ridley Park, Pennsylvania, United States""}]","true"
"Which is the birth place of James Gill?"," X1-be-is-null,X2-which-Which-null,X4-James Gill-James-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-James Gill,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-James Gill-James-null, X1-subj-X2,X1-obj-X3,X4-has_name-James Gill,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, James Gill, James, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, James Gill, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, James Gill, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James Gill"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Tahoka, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tahokatexasunitedstates"",     ""snameArtist3"": ""James Gill"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1807""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1807"",""label"":""James Gill"",""placeLabel"":""Tahoka, Texas, United States""}]","true"
"Which is the birth place of Ernest Briggs?"," X1-be-is-null,X2-which-Which-null,X4-Ernest Briggs-Ernest-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ernest Briggs,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ernest Briggs-Ernest-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ernest Briggs,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ernest Briggs, Ernest, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ernest Briggs, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ernest Briggs, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ernest Briggs"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""San Diego, California"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sandiegocalifornia"",     ""snameArtist3"": ""Ernest Briggs"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/28286""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/28286"",""label"":""Ernest Briggs"",""placeLabel"":""San Diego, California""}]","true"
"Which is the birth place of Ray K. Metzker?"," X1-be-is-null,X2-which-Which-null,X4-Ray K. Metzker-Ray-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ray K. Metzker,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ray K. Metzker-Ray-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ray K. Metzker,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ray K. Metzker, Ray, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ray K. Metzker, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ray K. Metzker, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ray K\\. Metzker"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Milwaukee, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/milwaukeewisconsinunitedstates"",     ""snameArtist3"": ""Ray K. Metzker"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3298""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3298"",""label"":""Ray K. Metzker"",""placeLabel"":""Milwaukee, Wisconsin, United States""}]","true"
"Which is the birth place of Vera Klement?"," X1-be-is-null,X2-which-Which-null,X4-Vera Klement-Vera-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Vera Klement,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Vera Klement-Vera-null, X1-subj-X2,X1-obj-X3,X4-has_name-Vera Klement,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Vera Klement, Vera, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Vera Klement, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Vera Klement, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Vera Klement"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Danzig, Poland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/danzigpoland"",     ""snameArtist3"": ""Vera Klement"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2657""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2657"",""label"":""Vera Klement"",""placeLabel"":""Danzig, Poland""}]","true"
"Which is the birth place of Masuo Ojima?"," X1-be-is-null,X2-which-Which-null,X4-Masuo Ojima-Masuo-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Masuo Ojima,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Masuo Ojima-Masuo-null, X1-subj-X2,X1-obj-X3,X4-has_name-Masuo Ojima,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Masuo Ojima, Masuo, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Masuo Ojima, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Masuo Ojima, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Masuo Ojima"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Shizuoka, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/shizuokajapan"",     ""snameArtist3"": ""Masuo Ojima"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18537""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18537"",""label"":""Masuo Ojima"",""placeLabel"":""Shizuoka, Japan""}]","true"
"Which is the birth place of Larry Thomas?"," X1-be-is-null,X2-which-Which-null,X4-Larry Thomas-Larry-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Larry Thomas,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Larry Thomas-Larry-null, X1-subj-X2,X1-obj-X3,X4-has_name-Larry Thomas,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Larry Thomas, Larry, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Larry Thomas, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Larry Thomas, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Larry Thomas"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Memphis, Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/memphistennesseeunitedstates"",     ""snameArtist3"": ""Larry Thomas"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/6124""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/6124"",""label"":""Larry Thomas"",""placeLabel"":""Memphis, Tennessee, United States""}]","true"
"Which is the birth place of Erik Gronborg?"," X1-be-is-null,X2-which-Which-null,X4-Erik Gronborg-Erik-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Erik Gronborg,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Erik Gronborg-Erik-null, X1-subj-X2,X1-obj-X3,X4-has_name-Erik Gronborg,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Erik Gronborg, Erik, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Erik Gronborg, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Erik Gronborg, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Erik Gronborg"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Copenhagen, Denmark"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/copenhagendenmark"",     ""snameArtist3"": ""Erik Gronborg"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/29032""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/29032"",""label"":""Erik Gronborg"",""placeLabel"":""Copenhagen, Denmark""}]","true"
"Which is the birth place of Hyman Katz?"," X1-be-is-null,X2-which-Which-null,X4-Hyman Katz-Hyman-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Hyman Katz,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Hyman Katz-Hyman-null, X1-subj-X2,X1-obj-X3,X4-has_name-Hyman Katz,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Hyman Katz, Hyman, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Hyman Katz, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Hyman Katz, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Hyman Katz"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Poland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/poland"",     ""snameArtist3"": ""Hyman Katz"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2559""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2559"",""label"":""Hyman Katz"",""placeLabel"":""Poland""}]","true"
"Which is the birth place of Rex Clawson?"," X1-be-is-null,X2-which-Which-null,X4-Rex Clawson-Rex-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Rex Clawson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Rex Clawson-Rex-null, X1-subj-X2,X1-obj-X3,X4-has_name-Rex Clawson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Rex Clawson, Rex, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Rex Clawson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Rex Clawson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Rex Clawson"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Dallas, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dallastexasunitedstates"",     ""snameArtist3"": ""Rex Clawson"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/7399""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/7399"",""label"":""Rex Clawson"",""placeLabel"":""Dallas, Texas, United States""}]","true"
"Which is the birth place of George A. Tice?"," X1-be-is-null,X2-which-Which-null,X4-George A. Tice-George-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-George A. Tice,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-George A. Tice-George-null, X1-subj-X2,X1-obj-X3,X4-has_name-George A. Tice,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, George A. Tice, George, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, George A. Tice, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, George A. Tice, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""George A\\. Tice"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Newark, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newarknewjerseyunitedstates"",     ""snameArtist3"": ""George A. Tice"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4810""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4810"",""label"":""George A. Tice"",""placeLabel"":""Newark, New Jersey, United States""}]","true"
"Which is the birth place of Ted Kuykendall?"," X1-be-is-null,X2-which-Which-null,X4-Ted Kuykendall-Ted-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ted Kuykendall,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ted Kuykendall-Ted-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ted Kuykendall,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ted Kuykendall, Ted, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ted Kuykendall, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ted Kuykendall, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ted Kuykendall"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Roswell, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/roswellnewmexicounitedstates"",     ""snameArtist3"": ""Ted Kuykendall"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2750""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2750"",""label"":""Ted Kuykendall"",""placeLabel"":""Roswell, New Mexico, United States""}]","true"
"Which is the birth place of Basil Ede?"," X1-be-is-null,X2-which-Which-null,X4-Basil Ede-Basil-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Basil Ede,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Basil Ede-Basil-null, X1-subj-X2,X1-obj-X3,X4-has_name-Basil Ede,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Basil Ede, Basil, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Basil Ede, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Basil Ede, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Basil Ede"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Surrey, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/surreyengland"",     ""snameArtist3"": ""Basil Ede"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1402""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1402"",""label"":""Basil Ede"",""placeLabel"":""Surrey, England""}]","true"
"Which is the birth place of Clyde F. Jenkins?"," X1-be-is-null,X2-which-Which-null,X4-Clyde F. Jenkins-Clyde-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Clyde F. Jenkins,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Clyde F. Jenkins-Clyde-null, X1-subj-X2,X1-obj-X3,X4-has_name-Clyde F. Jenkins,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Clyde F. Jenkins, Clyde, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Clyde F. Jenkins, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Clyde F. Jenkins, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Clyde F\\. Jenkins"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Luray, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lurayvirginiaunitedstates"",     ""snameArtist3"": ""Clyde F. Jenkins"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/30084""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/30084"",""label"":""Clyde F. Jenkins"",""placeLabel"":""Luray, Virginia, United States""}]","true"
"Which is the birth place of Edward Lambert?"," X1-be-is-null,X2-which-Which-null,X4-Edward Lambert-Edward-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Edward Lambert,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Edward Lambert-Edward-null, X1-subj-X2,X1-obj-X3,X4-has_name-Edward Lambert,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Edward Lambert, Edward, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Edward Lambert, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Edward Lambert, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Edward Lambert"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Superior, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/superiorwisconsinunitedstates"",     ""snameArtist3"": ""Edward Lambert"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/28090""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/28090"",""label"":""Edward Lambert"",""placeLabel"":""Superior, Wisconsin, United States""}]","true"
"Which is the birth place of Ralph E. Eckerstrom?"," X1-be-is-null,X2-which-Which-null,X4-Ralph E. Eckerstrom-Ralph-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ralph E. Eckerstrom,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ralph E. Eckerstrom-Ralph-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ralph E. Eckerstrom,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ralph E. Eckerstrom, Ralph, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ralph E. Eckerstrom, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ralph E. Eckerstrom, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ralph E\\. Eckerstrom"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Donovan, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/donovanillinoisunitedstates"",     ""snameArtist3"": ""Ralph E. Eckerstrom"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1398""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1398"",""label"":""Ralph E. Eckerstrom"",""placeLabel"":""Donovan, Illinois, United States""}]","true"
"Which is the birth place of Rupert D. Turnbull?"," X1-be-is-null,X2-which-Which-null,X4-Rupert D. Turnbull-Rupert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Rupert D. Turnbull,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Rupert D. Turnbull-Rupert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Rupert D. Turnbull,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Rupert D. Turnbull, Rupert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Rupert D. Turnbull, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Rupert D. Turnbull, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Rupert D\\. Turnbull"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""East Orange, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eastorangenewjerseyunitedstates"",     ""snameArtist3"": ""Rupert D. Turnbull"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4880""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4880"",""label"":""Rupert D. Turnbull"",""placeLabel"":""East Orange, New Jersey, United States""}]","true"
"Which is the birth place of William K. Greiner?"," X1-be-is-null,X2-which-Which-null,X4-William K. Greiner-William-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-William K. Greiner,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-William K. Greiner-William-null, X1-subj-X2,X1-obj-X3,X4-has_name-William K. Greiner,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, William K. Greiner, William, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, William K. Greiner, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, William K. Greiner, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William K\\. Greiner"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""New Orleans, Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/neworleanslouisianaunitedstates"",     ""snameArtist3"": ""William K. Greiner"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/6292""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/6292"",""label"":""William K. Greiner"",""placeLabel"":""New Orleans, Louisiana, United States""}]","true"
"Which is the birth place of Ken Graves?"," X1-be-is-null,X2-which-Which-null,X4-Ken Grave-Ken-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ken Grave,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ken Grave-Ken-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ken Grave,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ken Grave, Ken, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ken Grave, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ken Grave, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ken Grave"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Fox Valley, Oregon, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/foxvalleyoregonunitedstates"",     ""snameArtist3"": ""Ken Graves"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1909""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1909"",""label"":""Ken Graves"",""placeLabel"":""Fox Valley, Oregon, United States""}]","true"
"Which is the birth place of James L. Enyeart?"," X1-be-is-null,X2-which-Which-null,X4-James L. Enyeart-James-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-James L. Enyeart,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-James L. Enyeart-James-null, X1-subj-X2,X1-obj-X3,X4-has_name-James L. Enyeart,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, James L. Enyeart, James, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, James L. Enyeart, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, James L. Enyeart, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James L\\. Enyeart"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Auburn, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/auburnwashingtonunitedstates"",     ""snameArtist3"": ""James L. Enyeart"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1449""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1449"",""label"":""James L. Enyeart"",""placeLabel"":""Auburn, Washington, United States""}]","true"
"Which is the birth place of Christo?"," X1-be-is-null,X2-which-Which-null,X4-Christo-Christo-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Christo,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Christo-Christo-null, X1-subj-X2,X1-obj-X3,X4-has_name-Christo,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Christo, Christo, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Christo, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Christo, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Christo"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""New York, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newyorknewyorkunitedstates"",     ""snameArtist3"": ""Christopher Dawson"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/17752""   },   {     ""snameBirthPlace4"": ""Gabrovo, Bulgaria"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gabrovobulgaria"",     ""snameArtist3"": ""Christo"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27236""   },   {     ""snameBirthPlace4"": ""Brockton, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/brocktonmassachusettsunitedstates"",     ""snameArtist3"": ""Christopher Sabin"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4206""   },   {     ""snameBirthPlace4"": ""Boston, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bostonmassachusettsunitedstates"",     ""snameArtist3"": ""Christopher Sproat"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4586""   },   {     ""snameBirthPlace4"": ""France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/france"",     ""snameArtist3"": ""Christoffel Wüst"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5498""   },   {     ""snameBirthPlace4"": ""Boston, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bostonmassachusettsunitedstates"",     ""snameArtist3"": ""Christopher James"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/6061""   },   {     ""snameBirthPlace4"": ""London, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/londonengland"",     ""snameArtist3"": ""Christopher Prater"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/6890""   },   {     ""snameBirthPlace4"": ""Munich, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/munichgermany"",     ""snameArtist3"": ""Christoph Voll"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/7068""   },   {     ""snameBirthPlace4"": ""St. Louis, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stlouismissouriunitedstates"",     ""snameArtist3"": ""Christopher French"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/6785""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27236"",""label"":""Christo"",""placeLabel"":""Gabrovo, Bulgaria""},{""actor"":""http://data.americanart.si.edu/constituent/id/5498"",""label"":""Christoffel Wüst"",""placeLabel"":""France""},{""actor"":""http://data.americanart.si.edu/constituent/id/7068"",""label"":""Christoph Voll"",""placeLabel"":""Munich, Germany""},{""actor"":""http://data.americanart.si.edu/constituent/id/4206"",""label"":""Christopher Sabin"",""placeLabel"":""Brockton, Massachusetts, United States""},{""actor"":""http://data.americanart.si.edu/constituent/id/4586"",""label"":""Christopher Sproat"",""placeLabel"":""Boston, Massachusetts, United States""},{""actor"":""http://data.americanart.si.edu/constituent/id/6061"",""label"":""Christopher James"",""placeLabel"":""Boston, Massachusetts, United States""},{""actor"":""http://data.americanart.si.edu/constituent/id/17752"",""label"":""Christopher Dawson"",""placeLabel"":""New York, New York, United States""},{""actor"":""http://data.americanart.si.edu/constituent/id/6890"",""label"":""Christopher Prater"",""placeLabel"":""London, England""},{""actor"":""http://data.americanart.si.edu/constituent/id/6785"",""label"":""Christopher French"",""placeLabel"":""St. Louis, Missouri, United States""}]","true"
"Which is the birth place of Bernard Schardt?"," X1-be-is-null,X2-which-Which-null,X4-Bernard Schardt-Bernard-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Bernard Schardt,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Bernard Schardt-Bernard-null, X1-subj-X2,X1-obj-X3,X4-has_name-Bernard Schardt,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Bernard Schardt, Bernard, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Bernard Schardt, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Bernard Schardt, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Bernard Schardt"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Milwaukee, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/milwaukeewisconsinunitedstates"",     ""snameArtist3"": ""Bernard Schardt"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4288""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4288"",""label"":""Bernard Schardt"",""placeLabel"":""Milwaukee, Wisconsin, United States""}]","true"
"Which is the birth place of Marion Hildebrandt?"," X1-be-is-null,X2-which-Which-null,X4-Marion Hildebrandt-Marion-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Marion Hildebrandt,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Marion Hildebrandt-Marion-null, X1-subj-X2,X1-obj-X3,X4-has_name-Marion Hildebrandt,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Marion Hildebrandt, Marion, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Marion Hildebrandt, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Marion Hildebrandt, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Marion Hildebrandt"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Glendale, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/glendalecaliforniaunitedstates"",     ""snameArtist3"": ""Marion Hildebrandt"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18340""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18340"",""label"":""Marion Hildebrandt"",""placeLabel"":""Glendale, California, United States""}]","true"
"Which is the birth place of John Samuel Agar?"," X1-be-is-null,X2-which-Which-null,X4-John Samuel Agar-John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John Samuel Agar,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John Samuel Agar-John-null, X1-subj-X2,X1-obj-X3,X4-has_name-John Samuel Agar,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John Samuel Agar, John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John Samuel Agar, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John Samuel Agar, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Samuel Agar"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/england"",     ""snameArtist3"": ""John Samuel Agar"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/33""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/33"",""label"":""John Samuel Agar"",""placeLabel"":""England""}]","true"
"Which is the birth place of Robert A. Nelson?"," X1-be-is-null,X2-which-Which-null,X4-Robert A. Nelson-Robert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Robert A. Nelson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Robert A. Nelson-Robert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Robert A. Nelson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Robert A. Nelson, Robert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Robert A. Nelson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Robert A. Nelson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert A\\. Nelson"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Milwaukee, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/milwaukeewisconsinunitedstates"",     ""snameArtist3"": ""Robert A. Nelson"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27101""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27101"",""label"":""Robert A. Nelson"",""placeLabel"":""Milwaukee, Wisconsin, United States""}]","true"
"Which is the birth place of Ken Gonzales-Day?"," X1-be-is-null,X2-which-Which-null,X4-Ken Gonzales-Ken-null,X3-birth place Day-birth place-the, X1-subj-X2,X4-has_name-Ken Gonzales,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place Day-birth place-the,X4-Ken Gonzales-Ken-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ken Gonzales,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ken Gonzales, Ken, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place Day, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ken Gonzales, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ken Gonzales, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place Day, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 2]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ken Gonzales"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Santa Clara, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/santaclaracaliforniaunitedstates"",     ""snameArtist3"": ""Ken Gonzales-Day"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/30048""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/30048"",""label"":""Ken Gonzales-Day"",""placeLabel"":""Santa Clara, California, United States""}]","true"
"Which is the birth place of Haskell Coffin?"," X1-be-is-null,X2-which-Which-null,X4-Haskell Coffin-Haskell-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Haskell Coffin,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Haskell Coffin-Haskell-null, X1-subj-X2,X1-obj-X3,X4-has_name-Haskell Coffin,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Haskell Coffin, Haskell, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Haskell Coffin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Haskell Coffin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Haskell Coffin"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Charleston, South Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/charlestonsouthcarolinaunitedstates"",     ""snameArtist3"": ""Haskell Coffin"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/28240""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/28240"",""label"":""Haskell Coffin"",""placeLabel"":""Charleston, South Carolina, United States""}]","true"
"Which is the birth place of Ruth Chaney?"," X1-be-is-null,X2-which-Which-null,X4-Ruth Chaney-Ruth-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ruth Chaney,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ruth Chaney-Ruth-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ruth Chaney,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ruth Chaney, Ruth, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ruth Chaney, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ruth Chaney, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ruth Chaney"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Kansas City, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kansascitymissouriunitedstates"",     ""snameArtist3"": ""Ruth Chaney"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/823""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/823"",""label"":""Ruth Chaney"",""placeLabel"":""Kansas City, Missouri, United States""}]","true"
"Which is the birth place of Wanda Gág?"," X1-be-is-null,X2-which-Which-null,X4-Wanda Gág-Wanda-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Wanda Gág,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Wanda Gág-Wanda-null, X1-subj-X2,X1-obj-X3,X4-has_name-Wanda Gág,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Wanda Gág, Wanda, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Wanda Gág, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Wanda Gág, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Wanda Gág"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""New Ulm, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newulmminnesotaunitedstates"",     ""snameArtist3"": ""Wanda Gág"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1713""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1713"",""label"":""Wanda Gág"",""placeLabel"":""New Ulm, Minnesota, United States""}]","true"
"Which is the birth place of L. A. Shafer?"," X1-be-is-null,X2-which-Which-null,X4-L. A. Shafer-L.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-L. A. Shafer,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-L. A. Shafer-L.-null, X1-subj-X2,X1-obj-X3,X4-has_name-L. A. Shafer,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, L. A. Shafer, L., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, L. A. Shafer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, L. A. Shafer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""L\\. A\\. Shafer"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Geneseo, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/geneseoillinoisunitedstates"",     ""snameArtist3"": ""L. A. Shafer"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/28235""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/28235"",""label"":""L. A. Shafer"",""placeLabel"":""Geneseo, Illinois, United States""}]","true"
"Which is the birth place of Johann Leonhard Appold?"," X1-be-is-null,X2-which-Which-null,X4-Johann Leonhard Appold-Johann-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Johann Leonhard Appold,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Johann Leonhard Appold-Johann-null, X1-subj-X2,X1-obj-X3,X4-has_name-Johann Leonhard Appold,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Johann Leonhard Appold, Johann, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Johann Leonhard Appold, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Johann Leonhard Appold, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Johann Leonhard Appold"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Dennenlohe, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dennenlohegermany"",     ""snameArtist3"": ""Johann Leonhard Appold"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27442""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27442"",""label"":""Johann Leonhard Appold"",""placeLabel"":""Dennenlohe, Germany""}]","true"
"Which is the birth place of John Satterfield?"," X1-be-is-null,X2-which-Which-null,X4-John Satterfield-John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John Satterfield,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John Satterfield-John-null, X1-subj-X2,X1-obj-X3,X4-has_name-John Satterfield,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John Satterfield, John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John Satterfield, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John Satterfield, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Satterfield"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Clearwater, Florida, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/clearwaterfloridaunitedstates"",     ""snameArtist3"": ""John Satterfield"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27623""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27623"",""label"":""John Satterfield"",""placeLabel"":""Clearwater, Florida, United States""}]","true"
"Which is the birth place of Jean Paul Laurens?"," X1-be-is-null,X2-which-Which-null,X4-Jean Paul Laurens-Jean-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jean Paul Laurens,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jean Paul Laurens-Jean-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jean Paul Laurens,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jean Paul Laurens, Jean, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jean Paul Laurens, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jean Paul Laurens, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jean Paul Laurens"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Fourquevoux, Haute-Garonne, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fourquevouxhautegaronnefrance"",     ""snameArtist3"": ""Jean Paul Laurens"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2819""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2819"",""label"":""Jean Paul Laurens"",""placeLabel"":""Fourquevoux, Haute-Garonne, France""}]","true"
"Which is the birth place of María Martínez-Cañas?"," X1-be-is-null,X2-which-Which-null,X4-María Martínez-María-null,X3-birth place Cañas-birth place-the, X1-subj-X2,X4-has_name-María Martínez,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place Cañas-birth place-the,X4-María Martínez-María-null, X1-subj-X2,X1-obj-X3,X4-has_name-María Martínez,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, María Martínez, María, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place Cañas, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, María Martínez, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, María Martínez, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place Cañas, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 2]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""María Martínez"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Havana, Cuba"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/havanacuba"",     ""snameArtist3"": ""María Martínez-Cañas"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/7288""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/7288"",""label"":""María Martínez-Cañas"",""placeLabel"":""Havana, Cuba""}]","true"
"Which is the birth place of Lewis W. Hine?"," X1-be-is-null,X2-which-Which-null,X4-Lewis W. Hine-Lewis-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Lewis W. Hine,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Lewis W. Hine-Lewis-null, X1-subj-X2,X1-obj-X3,X4-has_name-Lewis W. Hine,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Lewis W. Hine, Lewis, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Lewis W. Hine, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Lewis W. Hine, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lewis W\\. Hine"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Oshkosh, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oshkoshwisconsinunitedstates"",     ""snameArtist3"": ""Lewis W. Hine"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2232""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2232"",""label"":""Lewis W. Hine"",""placeLabel"":""Oshkosh, Wisconsin, United States""}]","true"
"Which is the birth place of Chris Irick?"," X1-be-is-null,X2-which-Which-null,X4-Chris Irick-Chris-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Chris Irick,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Chris Irick-Chris-null, X1-subj-X2,X1-obj-X3,X4-has_name-Chris Irick,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Chris Irick, Chris, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Chris Irick, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Chris Irick, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Chris Irick"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Santa Maria, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/santamariacaliforniaunitedstates"",     ""snameArtist3"": ""Chris Irick"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/28034""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/28034"",""label"":""Chris Irick"",""placeLabel"":""Santa Maria, California, United States""}]","true"
"Which is the birth place of Dotty Attie?"," X1-be-is-null,X2-which-Which-null,X4-Dotty Attie-Dotty-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Dotty Attie,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Dotty Attie-Dotty-null, X1-subj-X2,X1-obj-X3,X4-has_name-Dotty Attie,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Dotty Attie, Dotty, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Dotty Attie, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Dotty Attie, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Dotty Attie"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Pennsauken, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pennsaukennewjerseyunitedstates"",     ""snameArtist3"": ""Dotty Attie"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/159""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/159"",""label"":""Dotty Attie"",""placeLabel"":""Pennsauken, New Jersey, United States""}]","true"
"Which is the birth place of Dorothy Gill Barnes?"," X1-be-is-null,X2-which-Which-null,X4-Dorothy Gill Barnes-Dorothy-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Dorothy Gill Barnes,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Dorothy Gill Barnes-Dorothy-null, X1-subj-X2,X1-obj-X3,X4-has_name-Dorothy Gill Barnes,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Dorothy Gill Barnes, Dorothy, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Dorothy Gill Barnes, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Dorothy Gill Barnes, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Dorothy Gill Barnes"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Strawberry Point, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/strawberrypointiowaunitedstates"",     ""snameArtist3"": ""Dorothy Gill Barnes"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18336""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18336"",""label"":""Dorothy Gill Barnes"",""placeLabel"":""Strawberry Point, Iowa, United States""}]","true"
"Which is the birth place of Thomas Hicks?"," X1-be-is-null,X2-which-Which-null,X4-Thomas Hick-Thomas-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Thomas Hick,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Thomas Hick-Thomas-null, X1-subj-X2,X1-obj-X3,X4-has_name-Thomas Hick,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Thomas Hick, Thomas, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Thomas Hick, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Thomas Hick, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Thomas Hick"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Newtown, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newtownpennsylvaniaunitedstates"",     ""snameArtist3"": ""Thomas Hicks"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2206""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2206"",""label"":""Thomas Hicks"",""placeLabel"":""Newtown, Pennsylvania, United States""}]","true"
"Which is the birth place of Alexander Robertson?"," X1-be-is-null,X2-which-Which-null,X4-Alexander Robertson-Alexander-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Alexander Robertson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Alexander Robertson-Alexander-null, X1-subj-X2,X1-obj-X3,X4-has_name-Alexander Robertson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Alexander Robertson, Alexander, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Alexander Robertson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Alexander Robertson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alexander Robertson"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Aberdeen, Scotland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/aberdeenscotland"",     ""snameArtist3"": ""Alexander Robertson"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4073""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4073"",""label"":""Alexander Robertson"",""placeLabel"":""Aberdeen, Scotland""}]","true"
"Which is the birth place of Jacob van Strij?"," X1-be-is-null,X2-which-Which-null,X4-Jacob van Strij-Jacob-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jacob van Strij,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jacob van Strij-Jacob-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jacob van Strij,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jacob van Strij, Jacob, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jacob van Strij, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jacob van Strij, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jacob van Strij"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Dordrecht, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dordrechtnetherlands"",     ""snameArtist3"": ""Jacob van Strij"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5121""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5121"",""label"":""Jacob van Strij"",""placeLabel"":""Dordrecht, Netherlands""}]","true"
"Which is the birth place of Tom Patti?"," X1-be-is-null,X2-which-Which-null,X4-Tom Patti-Tom-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Tom Patti,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Tom Patti-Tom-null, X1-subj-X2,X1-obj-X3,X4-has_name-Tom Patti,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Tom Patti, Tom, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Tom Patti, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Tom Patti, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Tom Patti"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Pittsfield, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pittsfieldmassachusettsunitedstates"",     ""snameArtist3"": ""Tom Patti"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3706""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3706"",""label"":""Tom Patti"",""placeLabel"":""Pittsfield, Massachusetts, United States""}]","true"
"Which is the birth place of Luis Cruz Azaceta?"," X1-be-is-null,X2-which-Which-null,X4-Luis Cruz Azaceta-Luis-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Luis Cruz Azaceta,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Luis Cruz Azaceta-Luis-null, X1-subj-X2,X1-obj-X3,X4-has_name-Luis Cruz Azaceta,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Luis Cruz Azaceta, Luis, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Luis Cruz Azaceta, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Luis Cruz Azaceta, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Luis Cruz Azaceta"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Marianao, Province of Havana, Cuba"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/marianaoprovinceofhavanacuba"",     ""snameArtist3"": ""Luis Cruz Azaceta"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18314""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18314"",""label"":""Luis Cruz Azaceta"",""placeLabel"":""Marianao, Province of Havana, Cuba""}]","true"
"Which is the birth place of Nicholas Africano?"," X1-be-is-null,X2-which-Which-null,X4-Nicholas Africano-Nicholas-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Nicholas Africano,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Nicholas Africano-Nicholas-null, X1-subj-X2,X1-obj-X3,X4-has_name-Nicholas Africano,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Nicholas Africano, Nicholas, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Nicholas Africano, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Nicholas Africano, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Nicholas Africano"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Kankakee, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kankakeeillinoisunitedstates"",     ""snameArtist3"": ""Nicholas Africano"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18200""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18200"",""label"":""Nicholas Africano"",""placeLabel"":""Kankakee, Illinois, United States""}]","true"
"Which is the birth place of Harry W. Scheuch?"," X1-be-is-null,X2-which-Which-null,X4-Harry W. Scheuch-Harry-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Harry W. Scheuch,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Harry W. Scheuch-Harry-null, X1-subj-X2,X1-obj-X3,X4-has_name-Harry W. Scheuch,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Harry W. Scheuch, Harry, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Harry W. Scheuch, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Harry W. Scheuch, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Harry W\\. Scheuch"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Elizabeth, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/elizabethnewjerseyunitedstates"",     ""snameArtist3"": ""Harry W. Scheuch"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4294""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4294"",""label"":""Harry W. Scheuch"",""placeLabel"":""Elizabeth, New Jersey, United States""}]","true"
"Which is the birth place of Blanche Grambs?"," X1-be-is-null,X2-which-Which-null,X4-Blanche Grambs-Blanche-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Blanche Grambs,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Blanche Grambs-Blanche-null, X1-subj-X2,X1-obj-X3,X4-has_name-Blanche Grambs,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Blanche Grambs, Blanche, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Blanche Grambs, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Blanche Grambs, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Blanche Grambs"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""China"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/china"",     ""snameArtist3"": ""Blanche Grambs"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1899""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1899"",""label"":""Blanche Grambs"",""placeLabel"":""China""}]","true"
"Which is the birth place of Lois M. Johnson?"," X1-be-is-null,X2-which-Which-null,X4-Lois M. Johnson-Lois-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Lois M. Johnson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Lois M. Johnson-Lois-null, X1-subj-X2,X1-obj-X3,X4-has_name-Lois M. Johnson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Lois M. Johnson, Lois, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Lois M. Johnson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Lois M. Johnson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lois M\\. Johnson"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Grand Forks, North Dakota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/grandforksnorthdakotaunitedstates"",     ""snameArtist3"": ""Lois M. Johnson"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2481""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2481"",""label"":""Lois M. Johnson"",""placeLabel"":""Grand Forks, North Dakota, United States""}]","true"
"Which is the birth place of David Glines?"," X1-be-is-null,X2-which-Which-null,X4-David Gline-David-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-David Gline,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-David Gline-David-null, X1-subj-X2,X1-obj-X3,X4-has_name-David Gline,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, David Gline, David, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, David Gline, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, David Gline, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David Gline"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/iowaunitedstates"",     ""snameArtist3"": ""David Glines"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1833""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1833"",""label"":""David Glines"",""placeLabel"":""Iowa, United States""}]","true"
"Which is the birth place of William L. Garver?"," X1-be-is-null,X2-which-Which-null,X4-William L. Garver-William-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-William L. Garver,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-William L. Garver-William-null, X1-subj-X2,X1-obj-X3,X4-has_name-William L. Garver,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, William L. Garver, William, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, William L. Garver, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, William L. Garver, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William L\\. Garver"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Independence, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/independencemissouriunitedstates"",     ""snameArtist3"": ""William L. Garver"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1743""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1743"",""label"":""William L. Garver"",""placeLabel"":""Independence, Missouri, United States""}]","true"
"Which is the birth place of Steven K. Roberts?"," X1-be-is-null,X2-which-Which-null,X4-Steven K. Roberts-Steven-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Steven K. Roberts,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Steven K. Roberts-Steven-null, X1-subj-X2,X1-obj-X3,X4-has_name-Steven K. Roberts,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Steven K. Roberts, Steven, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Steven K. Roberts, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Steven K. Roberts, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Steven K\\. Roberts"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""San Diego, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sandiegocaliforniaunitedstates"",     ""snameArtist3"": ""Steven K. Roberts"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4072""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4072"",""label"":""Steven K. Roberts"",""placeLabel"":""San Diego, California, United States""}]","true"
"Which is the birth place of Maximilian Rainer Facklam?"," X1-be-is-null,X2-which-Which-null,X4-Maximilian Rainer Facklam-Maximilian-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Maximilian Rainer Facklam,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Maximilian Rainer Facklam-Maximilian-null, X1-subj-X2,X1-obj-X3,X4-has_name-Maximilian Rainer Facklam,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Maximilian Rainer Facklam, Maximilian, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Maximilian Rainer Facklam, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Maximilian Rainer Facklam, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Maximilian Rainer Facklam"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Dusseldorf, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dusseldorfgermany"",     ""snameArtist3"": ""Maximilian Rainer Facklam"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/17970""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/17970"",""label"":""Maximilian Rainer Facklam"",""placeLabel"":""Dusseldorf, Germany""}]","true"
"Which is the birth place of Frederick Franck?"," X1-be-is-null,X2-which-Which-null,X4-Frederick Franck-Frederick-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Frederick Franck,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Frederick Franck-Frederick-null, X1-subj-X2,X1-obj-X3,X4-has_name-Frederick Franck,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Frederick Franck, Frederick, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Frederick Franck, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Frederick Franck, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frederick Franck"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Maastricht, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/maastrichtnetherlands"",     ""snameArtist3"": ""Frederick Franck"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1633""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1633"",""label"":""Frederick Franck"",""placeLabel"":""Maastricht, Netherlands""}]","true"
"Which is the birth place of Emile Auguste Carolus-Duran?"," X1-be-is-null,X2-which-Which-null,X4-Emile Auguste Carolus-Emile-null,X3-birth place Duran-birth place-the, X1-subj-X2,X4-has_name-Emile Auguste Carolus,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place Duran-birth place-the,X4-Emile Auguste Carolus-Emile-null, X1-subj-X2,X1-obj-X3,X4-has_name-Emile Auguste Carolus,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Emile Auguste Carolus, Emile, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place Duran, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Emile Auguste Carolus, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Emile Auguste Carolus, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place Duran, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 2]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Emile Auguste Carolus"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Lille, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lillefrance"",     ""snameArtist3"": ""Emile Auguste Carolus-Duran"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/751""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/751"",""label"":""Emile Auguste Carolus-Duran"",""placeLabel"":""Lille, France""}]","true"
"Which is the birth place of William Charles?"," X1-be-is-null,X2-which-Which-null,X4-William Charles-William-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-William Charles,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-William Charles-William-null, X1-subj-X2,X1-obj-X3,X4-has_name-William Charles,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, William Charles, William, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, William Charles, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, William Charles, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William Charles"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Edinburgh, Scotland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/edinburghscotland"",     ""snameArtist3"": ""William Charles"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/832""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/832"",""label"":""William Charles"",""placeLabel"":""Edinburgh, Scotland""}]","true"
"Which is the birth place of Rembrandt Peale?"," X1-be-is-null,X2-which-Which-null,X4-Rembrandt Peale-Rembrandt-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Rembrandt Peale,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Rembrandt Peale-Rembrandt-null, X1-subj-X2,X1-obj-X3,X4-has_name-Rembrandt Peale,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Rembrandt Peale, Rembrandt, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Rembrandt Peale, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Rembrandt Peale, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Rembrandt Peale"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pennsylvaniaunitedstates"",     ""snameArtist3"": ""Rembrandt Peale"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3725""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3725"",""label"":""Rembrandt Peale"",""placeLabel"":""Pennsylvania, United States""}]","true"
"Which is the birth place of Eluid Levi Martinez?"," X1-be-is-null,X2-which-Which-null,X4-Eluid Levi Martinez-Eluid-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Eluid Levi Martinez,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Eluid Levi Martinez-Eluid-null, X1-subj-X2,X1-obj-X3,X4-has_name-Eluid Levi Martinez,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Eluid Levi Martinez, Eluid, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Eluid Levi Martinez, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Eluid Levi Martinez, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Eluid Levi Martinez"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Cordova, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cordovanewmexicounitedstates"",     ""snameArtist3"": ""Eluid Levi Martinez"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5870""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5870"",""label"":""Eluid Levi Martinez"",""placeLabel"":""Cordova, New Mexico, United States""}]","true"
"Which is the birth place of Ramón José López?"," X1-be-is-null,X2-which-Which-null,X4-Ramón José López-Ramón-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ramón José López,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ramón José López-Ramón-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ramón José López,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ramón José López, Ramón, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ramón José López, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ramón José López, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ramón José López"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Santa Fe, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/santafenewmexicounitedstates"",     ""snameArtist3"": ""Ramón José López"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18392""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18392"",""label"":""Ramón José López"",""placeLabel"":""Santa Fe, New Mexico, United States""}]","true"
"Which is the birth place of Priscilla Roberts?"," X1-be-is-null,X2-which-Which-null,X4-Priscilla Roberts-Priscilla-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Priscilla Roberts,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Priscilla Roberts-Priscilla-null, X1-subj-X2,X1-obj-X3,X4-has_name-Priscilla Roberts,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Priscilla Roberts, Priscilla, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Priscilla Roberts, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Priscilla Roberts, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Priscilla Roberts"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Glen Ridge, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/glenridgenewjerseyunitedstates"",     ""snameArtist3"": ""Priscilla Roberts"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5943""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5943"",""label"":""Priscilla Roberts"",""placeLabel"":""Glen Ridge, New Jersey, United States""}]","true"
"Which is the birth place of Jules Edouard Roiné?"," X1-be-is-null,X2-which-Which-null,X4-Jules Edouard Roiné-Jules-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jules Edouard Roiné,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jules Edouard Roiné-Jules-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jules Edouard Roiné,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jules Edouard Roiné, Jules, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jules Edouard Roiné, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jules Edouard Roiné, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jules Edouard Roiné"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Nantes, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nantesfrance"",     ""snameArtist3"": ""Jules Edouard Roiné"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4102""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4102"",""label"":""Jules Edouard Roiné"",""placeLabel"":""Nantes, France""}]","true"
"Which is the birth place of Hollis Holbrook?"," X1-be-is-null,X2-which-Which-null,X4-Hollis Holbrook-Hollis-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Hollis Holbrook,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Hollis Holbrook-Hollis-null, X1-subj-X2,X1-obj-X3,X4-has_name-Hollis Holbrook,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Hollis Holbrook, Hollis, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Hollis Holbrook, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Hollis Holbrook, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Hollis Holbrook"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Natick, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/natickmassachusettsunitedstates"",     ""snameArtist3"": ""Hollis Holbrook"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2268""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2268"",""label"":""Hollis Holbrook"",""placeLabel"":""Natick, Massachusetts, United States""}]","true"
"Which is the birth place of Frank Stella?"," X1-be-is-null,X2-which-Which-null,X4-Frank Stella-Frank-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Frank Stella,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Frank Stella-Frank-null, X1-subj-X2,X1-obj-X3,X4-has_name-Frank Stella,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Frank Stella, Frank, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Frank Stella, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Frank Stella, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frank Stella"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Malden, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/maldenmassachusettsunitedstates"",     ""snameArtist3"": ""Frank Stella"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4623""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4623"",""label"":""Frank Stella"",""placeLabel"":""Malden, Massachusetts, United States""}]","true"
"Which is the birth place of Matsumi Kanemitsu?"," X1-be-is-null,X2-which-Which-null,X4-Matsumi Kanemitsu-Matsumi-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Matsumi Kanemitsu,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Matsumi Kanemitsu-Matsumi-null, X1-subj-X2,X1-obj-X3,X4-has_name-Matsumi Kanemitsu,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Matsumi Kanemitsu, Matsumi, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Matsumi Kanemitsu, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Matsumi Kanemitsu, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Matsumi Kanemitsu"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Ogden, Utah, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ogdenutahunitedstates"",     ""snameArtist3"": ""Matsumi Kanemitsu"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2540""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2540"",""label"":""Matsumi Kanemitsu"",""placeLabel"":""Ogden, Utah, United States""}]","true"
"Which is the birth place of William Leslie?"," X1-be-is-null,X2-which-Which-null,X4-William Leslie-William-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-William Leslie,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-William Leslie-William-null, X1-subj-X2,X1-obj-X3,X4-has_name-William Leslie,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, William Leslie, William, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, William Leslie, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, William Leslie, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William Leslie"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/england"",     ""snameArtist3"": ""William Leslie"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18561""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18561"",""label"":""William Leslie"",""placeLabel"":""England""}]","true"
"Which is the birth place of Jacob Frymire?"," X1-be-is-null,X2-which-Which-null,X4-Jacob Frymire-Jacob-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jacob Frymire,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jacob Frymire-Jacob-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jacob Frymire,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jacob Frymire, Jacob, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jacob Frymire, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jacob Frymire, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jacob Frymire"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pennsylvaniaunitedstates"",     ""snameArtist3"": ""Jacob Frymire"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1694""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1694"",""label"":""Jacob Frymire"",""placeLabel"":""Pennsylvania, United States""}]","true"
"Which is the birth place of Harold Emerson Keeler?"," X1-be-is-null,X2-which-Which-null,X4-Harold Emerson Keeler-Harold-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Harold Emerson Keeler,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Harold Emerson Keeler-Harold-null, X1-subj-X2,X1-obj-X3,X4-has_name-Harold Emerson Keeler,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Harold Emerson Keeler, Harold, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Harold Emerson Keeler, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Harold Emerson Keeler, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Harold Emerson Keeler"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Denver, Colorado, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/denvercoloradounitedstates"",     ""snameArtist3"": ""Harold Emerson Keeler"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2579""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2579"",""label"":""Harold Emerson Keeler"",""placeLabel"":""Denver, Colorado, United States""}]","true"
"Which is the birth place of Thomas Barker?"," X1-be-is-null,X2-which-Which-null,X4-Thomas Barker-Thomas-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Thomas Barker,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Thomas Barker-Thomas-null, X1-subj-X2,X1-obj-X3,X4-has_name-Thomas Barker,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Thomas Barker, Thomas, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Thomas Barker, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Thomas Barker, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Thomas Barker"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Pontypool, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pontypoolengland"",     ""snameArtist3"": ""Thomas Barker"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/238""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/238"",""label"":""Thomas Barker"",""placeLabel"":""Pontypool, England""}]","true"
"Which is the birth place of Thomas Ball?"," X1-be-is-null,X2-which-Which-null,X4-Thomas Ball-Thomas-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Thomas Ball,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Thomas Ball-Thomas-null, X1-subj-X2,X1-obj-X3,X4-has_name-Thomas Ball,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Thomas Ball, Thomas, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Thomas Ball, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Thomas Ball, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Thomas Ball"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Charlestown, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/charlestownmassachusettsunitedstates"",     ""snameArtist3"": ""Thomas Ball"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/218""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/218"",""label"":""Thomas Ball"",""placeLabel"":""Charlestown, Massachusetts, United States""}]","true"
"Which is the birth place of Jennifer Trask?"," X1-be-is-null,X2-which-Which-null,X4-Jennifer Trask-Jennifer-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jennifer Trask,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jennifer Trask-Jennifer-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jennifer Trask,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jennifer Trask, Jennifer, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jennifer Trask, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jennifer Trask, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jennifer Trask"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Cape Cod, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/capecodmassachusettsunitedstates"",     ""snameArtist3"": ""Jennifer Trask"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/28001""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/28001"",""label"":""Jennifer Trask"",""placeLabel"":""Cape Cod, Massachusetts, United States""}]","true"
"Which is the birth place of Edgar Melville Ward?"," X1-be-is-null,X2-which-Which-null,X4-Edgar Melville Ward-Edgar Ward-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Edgar Melville Ward,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Edgar Melville Ward-Edgar Ward-null, X1-subj-X2,X1-obj-X3,X4-has_name-Edgar Melville Ward,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Edgar Melville Ward, Edgar Ward, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Edgar Melville Ward, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Edgar Melville Ward, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Edgar Melville Ward"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Urbana, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/urbanaohiounitedstates"",     ""snameArtist3"": ""Edgar Melville Ward"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5229""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5229"",""label"":""Edgar Melville Ward"",""placeLabel"":""Urbana, Ohio, United States""}]","true"
"Which is the birth place of LeRoy Neiman?"," X1-be-is-null,X2-which-Which-null,X4-LeRoy Neiman-LeRoy-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-LeRoy Neiman,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-LeRoy Neiman-LeRoy-null, X1-subj-X2,X1-obj-X3,X4-has_name-LeRoy Neiman,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, LeRoy Neiman, LeRoy, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, LeRoy Neiman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, LeRoy Neiman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""LeRoy Neiman"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Saint Paul, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/saintpaulminnesotaunitedstates"",     ""snameArtist3"": ""LeRoy Neiman"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27851""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27851"",""label"":""LeRoy Neiman"",""placeLabel"":""Saint Paul, Minnesota, United States""}]","true"
"Which is the birth place of Ruth Grotenrath?"," X1-be-is-null,X2-which-Which-null,X4-Ruth Grotenrath-Ruth-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ruth Grotenrath,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ruth Grotenrath-Ruth-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ruth Grotenrath,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ruth Grotenrath, Ruth, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ruth Grotenrath, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ruth Grotenrath, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ruth Grotenrath"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Milwaukee, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/milwaukeewisconsinunitedstates"",     ""snameArtist3"": ""Ruth Grotenrath"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1968""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1968"",""label"":""Ruth Grotenrath"",""placeLabel"":""Milwaukee, Wisconsin, United States""}]","true"
"Which is the birth place of George T. Morgan?"," X1-be-is-null,X2-which-Which-null,X4-George T. Morgan-George-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-George T. Morgan,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-George T. Morgan-George-null, X1-subj-X2,X1-obj-X3,X4-has_name-George T. Morgan,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, George T. Morgan, George, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, George T. Morgan, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, George T. Morgan, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""George T\\. Morgan"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Birmingham, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/birminghamengland"",     ""snameArtist3"": ""George T. Morgan"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/28414""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/28414"",""label"":""George T. Morgan"",""placeLabel"":""Birmingham, England""}]","true"
"Which is the birth place of Lester E. Varian?"," X1-be-is-null,X2-which-Which-null,X4-Lester E. Varian-Lester-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Lester E. Varian,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Lester E. Varian-Lester-null, X1-subj-X2,X1-obj-X3,X4-has_name-Lester E. Varian,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Lester E. Varian, Lester, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Lester E. Varian, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Lester E. Varian, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lester E\\. Varian"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Denver, Colorado, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/denvercoloradounitedstates"",     ""snameArtist3"": ""Lester E. Varian"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5131""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5131"",""label"":""Lester E. Varian"",""placeLabel"":""Denver, Colorado, United States""}]","true"
"Which is the birth place of Paul Albert Baudouin?"," X1-be-is-null,X2-which-Which-null,X4-Paul Albert Baudouin-Paul-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Paul Albert Baudouin,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Paul Albert Baudouin-Paul-null, X1-subj-X2,X1-obj-X3,X4-has_name-Paul Albert Baudouin,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Paul Albert Baudouin, Paul, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Paul Albert Baudouin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Paul Albert Baudouin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Paul Albert Baudouin"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Rouen, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rouenfrance"",     ""snameArtist3"": ""Paul Albert Baudouin"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/278""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/278"",""label"":""Paul Albert Baudouin"",""placeLabel"":""Rouen, France""}]","true"
"Which is the birth place of Frederick W. Harer?"," X1-be-is-null,X2-which-Which-null,X4-Frederick W. Harer-Frederick-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Frederick W. Harer,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Frederick W. Harer-Frederick-null, X1-subj-X2,X1-obj-X3,X4-has_name-Frederick W. Harer,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Frederick W. Harer, Frederick, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Frederick W. Harer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Frederick W. Harer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frederick W\\. Harer"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Blossburg, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/blossburgpennsylvaniaunitedstates"",     ""snameArtist3"": ""Frederick W. Harer"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2076""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2076"",""label"":""Frederick W. Harer"",""placeLabel"":""Blossburg, Pennsylvania, United States""}]","true"
"Which is the birth place of C. K. Chatterton?"," X1-be-is-null,X2-which-Which-null,X4-C. K. Chatterton-C.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-C. K. Chatterton,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-C. K. Chatterton-C.-null, X1-subj-X2,X1-obj-X3,X4-has_name-C. K. Chatterton,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, C. K. Chatterton, C., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, C. K. Chatterton, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, C. K. Chatterton, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""C\\. K\\. Chatterton"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Newburgh, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newburghnewyorkunitedstates"",     ""snameArtist3"": ""C. K. Chatterton"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/842""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/842"",""label"":""C. K. Chatterton"",""placeLabel"":""Newburgh, New York, United States""}]","true"
"Which is the birth place of Carl Holty?"," X1-be-is-null,X2-which-Which-null,X4-Carl Holty-Carl-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Carl Holty,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Carl Holty-Carl-null, X1-subj-X2,X1-obj-X3,X4-has_name-Carl Holty,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Carl Holty, Carl, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Carl Holty, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Carl Holty, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Carl Holty"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Freiburg, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/freiburggermany"",     ""snameArtist3"": ""Carl Holty"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2282""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2282"",""label"":""Carl Holty"",""placeLabel"":""Freiburg, Germany""}]","true"
"Which is the birth place of Eugenio Landesio?"," X1-be-is-null,X2-which-Which-null,X4-Eugenio Landesio-Eugenio-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Eugenio Landesio,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Eugenio Landesio-Eugenio-null, X1-subj-X2,X1-obj-X3,X4-has_name-Eugenio Landesio,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Eugenio Landesio, Eugenio, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Eugenio Landesio, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Eugenio Landesio, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Eugenio Landesio"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Venaria Reale, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/venariarealeitaly"",     ""snameArtist3"": ""Eugenio Landesio"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2779""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2779"",""label"":""Eugenio Landesio"",""placeLabel"":""Venaria Reale, Italy""}]","true"
"Which is the birth place of Katherine Merrill?"," X1-be-is-null,X2-which-Which-null,X4-Katherine Merrill-Katherine-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Katherine Merrill,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Katherine Merrill-Katherine-null, X1-subj-X2,X1-obj-X3,X4-has_name-Katherine Merrill,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Katherine Merrill, Katherine, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Katherine Merrill, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Katherine Merrill, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Katherine Merrill"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Milwaukee, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/milwaukeewisconsinunitedstates"",     ""snameArtist3"": ""Katherine Merrill"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3284""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3284"",""label"":""Katherine Merrill"",""placeLabel"":""Milwaukee, Wisconsin, United States""}]","true"
"Which is the birth place of Paul McCarthy?"," X1-be-is-null,X2-which-Which-null,X4-Paul McCarthy-Paul-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Paul McCarthy,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Paul McCarthy-Paul-null, X1-subj-X2,X1-obj-X3,X4-has_name-Paul McCarthy,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Paul McCarthy, Paul, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Paul McCarthy, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Paul McCarthy, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Paul McCarthy"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Salt Lake City, Utah, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/saltlakecityutahunitedstates"",     ""snameArtist3"": ""Paul McCarthy"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/28963""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/28963"",""label"":""Paul McCarthy"",""placeLabel"":""Salt Lake City, Utah, United States""}]","true"
"Which is the birth place of Macowin Tuttle?"," X1-be-is-null,X2-which-Which-null,X4-Macowin Tuttle-Macowin-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Macowin Tuttle,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Macowin Tuttle-Macowin-null, X1-subj-X2,X1-obj-X3,X4-has_name-Macowin Tuttle,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Macowin Tuttle, Macowin, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Macowin Tuttle, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Macowin Tuttle, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Macowin Tuttle"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Muncie, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/muncieindianaunitedstates"",     ""snameArtist3"": ""Macowin Tuttle"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4900""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4900"",""label"":""Macowin Tuttle"",""placeLabel"":""Muncie, Indiana, United States""}]","true"
"Which is the birth place of Simon Sparrow?"," X1-be-is-null,X2-which-Which-null,X4-Simon Sparrow-Simon-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Simon Sparrow,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Simon Sparrow-Simon-null, X1-subj-X2,X1-obj-X3,X4-has_name-Simon Sparrow,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Simon Sparrow, Simon, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Simon Sparrow, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Simon Sparrow, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Simon Sparrow"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""West Africa"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westafrica"",     ""snameArtist3"": ""Simon Sparrow"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18275""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18275"",""label"":""Simon Sparrow"",""placeLabel"":""West Africa""}]","true"
"Which is the birth place of Ingeborg Gerdes?"," X1-be-is-null,X2-which-Which-null,X4-Ingeborg Gerdes-Ingeborg-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ingeborg Gerdes,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ingeborg Gerdes-Ingeborg-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ingeborg Gerdes,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ingeborg Gerdes, Ingeborg, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ingeborg Gerdes, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ingeborg Gerdes, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ingeborg Gerdes"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Merseburg, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/merseburggermany"",     ""snameArtist3"": ""Ingeborg Gerdes"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1780""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1780"",""label"":""Ingeborg Gerdes"",""placeLabel"":""Merseburg, Germany""}]","true"
"Which is the birth place of Carl Dern?"," X1-be-is-null,X2-which-Which-null,X4-Carl Dern-Carl-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Carl Dern,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Carl Dern-Carl-null, X1-subj-X2,X1-obj-X3,X4-has_name-Carl Dern,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Carl Dern, Carl, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Carl Dern, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Carl Dern, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Carl Dern"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Salt Lake City, Utah, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/saltlakecityutahunitedstates"",     ""snameArtist3"": ""Carl Dern"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18338""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18338"",""label"":""Carl Dern"",""placeLabel"":""Salt Lake City, Utah, United States""}]","true"
"Which is the birth place of Hermann J. Meyer?"," X1-be-is-null,X2-which-Which-null,X4-Hermann J. Meyer-Hermann-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Hermann J. Meyer,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Hermann J. Meyer-Hermann-null, X1-subj-X2,X1-obj-X3,X4-has_name-Hermann J. Meyer,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Hermann J. Meyer, Hermann, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Hermann J. Meyer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Hermann J. Meyer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Hermann J\\. Meyer"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/germany"",     ""snameArtist3"": ""Hermann J. Meyer"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3299""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3299"",""label"":""Hermann J. Meyer"",""placeLabel"":""Germany""}]","true"
"Which is the birth place of Dan Graham?"," X1-be-is-null,X2-which-Which-null,X4-Dan Graham-Dan-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Dan Graham,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Dan Graham-Dan-null, X1-subj-X2,X1-obj-X3,X4-has_name-Dan Graham,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Dan Graham, Dan, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Dan Graham, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Dan Graham, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Dan Graham"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Urbana, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/urbanaillinoisunitedstates"",     ""snameArtist3"": ""Dan Graham"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/28959""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/28959"",""label"":""Dan Graham"",""placeLabel"":""Urbana, Illinois, United States""}]","true"
"Which is the birth place of Margo Hoff?"," X1-be-is-null,X2-which-Which-null,X4-Margo Hoff-Margo-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Margo Hoff,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Margo Hoff-Margo-null, X1-subj-X2,X1-obj-X3,X4-has_name-Margo Hoff,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Margo Hoff, Margo, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Margo Hoff, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Margo Hoff, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Margo Hoff"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Carthage, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/carthagemissouriunitedstates"",     ""snameArtist3"": ""Margo Hoff"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2257""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2257"",""label"":""Margo Hoff"",""placeLabel"":""Carthage, Missouri, United States""}]","true"
"Which is the birth place of Robert Ladbrooke?"," X1-be-is-null,X2-which-Which-null,X4-Robert Ladbrooke-Robert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Robert Ladbrooke,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Robert Ladbrooke-Robert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Robert Ladbrooke,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Robert Ladbrooke, Robert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Robert Ladbrooke, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Robert Ladbrooke, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert Ladbrooke"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Norwich, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/norwichengland"",     ""snameArtist3"": ""Robert Ladbrooke"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2756""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2756"",""label"":""Robert Ladbrooke"",""placeLabel"":""Norwich, England""}]","true"
"Which is the birth place of Antonio Barone?"," X1-be-is-null,X2-which-Which-null,X4-Antonio Barone-Antonio-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Antonio Barone,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Antonio Barone-Antonio-null, X1-subj-X2,X1-obj-X3,X4-has_name-Antonio Barone,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Antonio Barone, Antonio, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Antonio Barone, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Antonio Barone, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Antonio Barone"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Valledolmo, Sicily, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/valledolmosicilyitaly"",     ""snameArtist3"": ""Antonio Barone"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/251""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/251"",""label"":""Antonio Barone"",""placeLabel"":""Valledolmo, Sicily, Italy""}]","true"
"Which is the birth place of M. A. Honeywell?"," X1-be-is-null,X2-which-Which-null,X4-M. A. Honeywell-M.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-M. A. Honeywell,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-M. A. Honeywell-M.-null, X1-subj-X2,X1-obj-X3,X4-has_name-M. A. Honeywell,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, M. A. Honeywell, M., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, M. A. Honeywell, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, M. A. Honeywell, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""M\\. A\\. Honeywell"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Lempster, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lempsternewhampshireunitedstates"",     ""snameArtist3"": ""M. A. Honeywell"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2287""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2287"",""label"":""M. A. Honeywell"",""placeLabel"":""Lempster, New Hampshire, United States""}]","true"
"Which is the birth place of Attilio Salemme?"," X1-be-is-null,X2-which-Which-null,X4-Attilio Salemme-Attilio-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Attilio Salemme,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Attilio Salemme-Attilio-null, X1-subj-X2,X1-obj-X3,X4-has_name-Attilio Salemme,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Attilio Salemme, Attilio, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Attilio Salemme, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Attilio Salemme, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Attilio Salemme"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Chestnut Hill, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chestnuthillmassachusettsunitedstates"",     ""snameArtist3"": ""Attilio Salemme"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4220""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4220"",""label"":""Attilio Salemme"",""placeLabel"":""Chestnut Hill, Massachusetts, United States""}]","true"
"Which is the birth place of John William Gear?"," X1-be-is-null,X2-which-Which-null,X4-John William Gear-John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John William Gear,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John William Gear-John-null, X1-subj-X2,X1-obj-X3,X4-has_name-John William Gear,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John William Gear, John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John William Gear, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John William Gear, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John William Gear"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/england"",     ""snameArtist3"": ""John William Gear"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/6857""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/6857"",""label"":""John William Gear"",""placeLabel"":""England""}]","true"
"Which is the birth place of Xavier González?"," X1-be-is-null,X2-which-Which-null,X4-Xavier González-Xavier-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Xavier González,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Xavier González-Xavier-null, X1-subj-X2,X1-obj-X3,X4-has_name-Xavier González,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Xavier González, Xavier, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Xavier González, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Xavier González, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Xavier González"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Almeria, Andalusia, Spain"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/almeriaandalusiaspain"",     ""snameArtist3"": ""Xavier González"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1859""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1859"",""label"":""Xavier González"",""placeLabel"":""Almeria, Andalusia, Spain""}]","true"
"Which is the birth place of Janet E. Turner?"," X1-be-is-null,X2-which-Which-null,X4-Janet E. Turner-Janet-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Janet E. Turner,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Janet E. Turner-Janet-null, X1-subj-X2,X1-obj-X3,X4-has_name-Janet E. Turner,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Janet E. Turner, Janet, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Janet E. Turner, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Janet E. Turner, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Janet E\\. Turner"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Kansas City, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kansascitymissouriunitedstates"",     ""snameArtist3"": ""Janet E. Turner"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4888""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4888"",""label"":""Janet E. Turner"",""placeLabel"":""Kansas City, Missouri, United States""}]","true"
"Which is the birth place of Frederic Marvin?"," X1-be-is-null,X2-which-Which-null,X4-Frederic Marvin-Frederic-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Frederic Marvin,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Frederic Marvin-Frederic-null, X1-subj-X2,X1-obj-X3,X4-has_name-Frederic Marvin,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Frederic Marvin, Frederic, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Frederic Marvin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Frederic Marvin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frederic Marvin"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Montreal, Quebec, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/montrealquebeccanada"",     ""snameArtist3"": ""Frederic Marvin"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3147""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3147"",""label"":""Frederic Marvin"",""placeLabel"":""Montreal, Quebec, Canada""}]","true"
"Which is the birth place of Douglas Kenney?"," X1-be-is-null,X2-which-Which-null,X4-Douglas Kenney-Douglas-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Douglas Kenney,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Douglas Kenney-Douglas-null, X1-subj-X2,X1-obj-X3,X4-has_name-Douglas Kenney,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Douglas Kenney, Douglas, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Douglas Kenney, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Douglas Kenney, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Douglas Kenney"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""San Diego, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sandiegocaliforniaunitedstates"",     ""snameArtist3"": ""Douglas Kenney"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27584""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27584"",""label"":""Douglas Kenney"",""placeLabel"":""San Diego, California, United States""}]","true"
"Which is the birth place of Bernard Arnest?"," X1-be-is-null,X2-which-Which-null,X4-Bernard Arnest-Bernard-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Bernard Arnest,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Bernard Arnest-Bernard-null, X1-subj-X2,X1-obj-X3,X4-has_name-Bernard Arnest,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Bernard Arnest, Bernard, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Bernard Arnest, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Bernard Arnest, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Bernard Arnest"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Denver, Colorado, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/denvercoloradounitedstates"",     ""snameArtist3"": ""Bernard Arnest"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/141""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/141"",""label"":""Bernard Arnest"",""placeLabel"":""Denver, Colorado, United States""}]","true"
"Which is the birth place of Jules Lion?"," X1-be-is-null,X2-which-Which-null,X4-Jules Lion-Jules-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jules Lion,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jules Lion-Jules-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jules Lion,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jules Lion, Jules, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jules Lion, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jules Lion, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jules Lion"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/france"",     ""snameArtist3"": ""Jules Lion"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/7120""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/7120"",""label"":""Jules Lion"",""placeLabel"":""France""}]","true"
"Which is the birth place of James Lawton?"," X1-be-is-null,X2-which-Which-null,X4-James Lawton-James-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-James Lawton,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-James Lawton-James-null, X1-subj-X2,X1-obj-X3,X4-has_name-James Lawton,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, James Lawton, James, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, James Lawton, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, James Lawton, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James Lawton"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Fairborn, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fairbornohiounitedstates"",     ""snameArtist3"": ""James Lawton"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27722""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27722"",""label"":""James Lawton"",""placeLabel"":""Fairborn, Ohio, United States""}]","true"
"Which is the birth place of Art Green?"," X1-be-is-null,X2-which-Which-null,X4-Art Green-Art-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Art Green,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Art Green-Art-null, X1-subj-X2,X1-obj-X3,X4-has_name-Art Green,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Art Green, Art, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Art Green, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Art Green, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Art Green"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Frankfort, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/frankfortindianaunitedstates"",     ""snameArtist3"": ""Art Green"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1925""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1925"",""label"":""Art Green"",""placeLabel"":""Frankfort, Indiana, United States""}]","true"
"Which is the birth place of Robert Havell, Jr.?"," X1-be-is-null,X2-which-Which-null,X4-Robert Havell Jr.-Robert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Robert Havell Jr.,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Robert Havell Jr.-Robert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Robert Havell Jr.,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Robert Havell Jr., Robert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Robert Havell Jr., propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Robert Havell Jr., propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert Havell Jr\\."",""i"")) . }"," []","[{""actor"":""http://data.americanart.si.edu/constituent/id/2120"",""label"":""Robert Havell, Jr."",""placeLabel"":""Reading, England""}]","false"
"Which is the birth place of Barbara Tisserat?"," X1-be-is-null,X2-which-Which-null,X4-Barbara Tisserat-Barbara-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Barbara Tisserat,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Barbara Tisserat-Barbara-null, X1-subj-X2,X1-obj-X3,X4-has_name-Barbara Tisserat,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Barbara Tisserat, Barbara, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Barbara Tisserat, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Barbara Tisserat, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Barbara Tisserat"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Denver, Colorado, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/denvercoloradounitedstates"",     ""snameArtist3"": ""Barbara Tisserat"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4820""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4820"",""label"":""Barbara Tisserat"",""placeLabel"":""Denver, Colorado, United States""}]","true"
"Which is the birth place of Martin Johnson Heade?"," X1-be-is-null,X2-which-Which-null,X4-Martin Johnson Heade-Martin-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Martin Johnson Heade,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Martin Johnson Heade-Martin-null, X1-subj-X2,X1-obj-X3,X4-has_name-Martin Johnson Heade,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Martin Johnson Heade, Martin, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Martin Johnson Heade, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Martin Johnson Heade, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Martin Johnson Heade"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Lumberville, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lumbervillepennsylvaniaunitedstates"",     ""snameArtist3"": ""Martin Johnson Heade"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/28788""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/28788"",""label"":""Martin Johnson Heade"",""placeLabel"":""Lumberville, Pennsylvania, United States""}]","true"
"Which is the birth place of Robert Indiana?"," X1-be-is-null,X2-which-Which-null,X4-Robert Indiana-Robert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Robert Indiana,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Robert Indiana-Robert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Robert Indiana,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Robert Indiana, Robert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Robert Indiana, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Robert Indiana, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert Indiana"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""New Castle, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newcastleindianaunitedstates"",     ""snameArtist3"": ""Robert Indiana"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2385""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2385"",""label"":""Robert Indiana"",""placeLabel"":""New Castle, Indiana, United States""}]","true"
"Which is the birth place of Karl Kelpe?"," X1-be-is-null,X2-which-Which-null,X4-Karl Kelpe-Karl-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Karl Kelpe,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Karl Kelpe-Karl-null, X1-subj-X2,X1-obj-X3,X4-has_name-Karl Kelpe,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Karl Kelpe, Karl, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Karl Kelpe, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Karl Kelpe, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Karl Kelpe"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/germany"",     ""snameArtist3"": ""Karl Kelpe"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2593""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2593"",""label"":""Karl Kelpe"",""placeLabel"":""Germany""}]","true"
"Which is the birth place of John Crookshanks King?"," X1-be-is-null,X2-which-Which-null,X4-John Crookshank King-John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John Crookshank King,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John Crookshank King-John-null, X1-subj-X2,X1-obj-X3,X4-has_name-John Crookshank King,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John Crookshank King, John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John Crookshank King, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John Crookshank King, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Crookshank King"",""i"")) . }"," []","[{""actor"":""http://data.americanart.si.edu/constituent/id/2633"",""label"":""John Crookshanks King"",""placeLabel"":""Kilwinning, Scotland""}]","false"
"Which is the birth place of Benjamin H. Frayser?"," X1-be-is-null,X2-which-Which-null,X4-Benjamin H. Frayser-Benjamin-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Benjamin H. Frayser,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Benjamin H. Frayser-Benjamin-null, X1-subj-X2,X1-obj-X3,X4-has_name-Benjamin H. Frayser,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Benjamin H. Frayser, Benjamin, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Benjamin H. Frayser, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Benjamin H. Frayser, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Benjamin H\\. Frayser"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Buchanan, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/buchananvirginiaunitedstates"",     ""snameArtist3"": ""Benjamin H. Frayser"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1649""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1649"",""label"":""Benjamin H. Frayser"",""placeLabel"":""Buchanan, Virginia, United States""}]","true"
"Which is the birth place of David Ruddell?"," X1-be-is-null,X2-which-Which-null,X4-David Ruddell-David-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-David Ruddell,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-David Ruddell-David-null, X1-subj-X2,X1-obj-X3,X4-has_name-David Ruddell,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, David Ruddell, David, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, David Ruddell, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, David Ruddell, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David Ruddell"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Palo Alto, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/paloaltocaliforniaunitedstates"",     ""snameArtist3"": ""David Ruddell"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27647""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27647"",""label"":""David Ruddell"",""placeLabel"":""Palo Alto, California, United States""}]","true"
"Which is the birth place of Francois Vivares?"," X1-be-is-null,X2-which-Which-null,X4-Francois Vivares-Francois-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Francois Vivares,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Francois Vivares-Francois-null, X1-subj-X2,X1-obj-X3,X4-has_name-Francois Vivares,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Francois Vivares, Francois, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Francois Vivares, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Francois Vivares, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Francois Vivares"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/france"",     ""snameArtist3"": ""Francois Vivares"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5158""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5158"",""label"":""Francois Vivares"",""placeLabel"":""France""}]","true"
"Which is the birth place of Charles Mottram?"," X1-be-is-null,X2-which-Which-null,X4-Charles Mottram-Charles-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Charles Mottram,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Charles Mottram-Charles-null, X1-subj-X2,X1-obj-X3,X4-has_name-Charles Mottram,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Charles Mottram, Charles, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Charles Mottram, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Charles Mottram, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charles Mottram"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/england"",     ""snameArtist3"": ""Charles Mottram"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/28097""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/28097"",""label"":""Charles Mottram"",""placeLabel"":""England""}]","true"
"Which is the birth place of Elliott Thompson?"," X1-be-is-null,X2-which-Which-null,X4-Elliott Thompson-Elliott-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Elliott Thompson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Elliott Thompson-Elliott-null, X1-subj-X2,X1-obj-X3,X4-has_name-Elliott Thompson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Elliott Thompson, Elliott, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Elliott Thompson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Elliott Thompson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Elliott Thompson"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Newport, Rhode Island, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newportrhodeislandunitedstates"",     ""snameArtist3"": ""Elliott Thompson"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4786""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4786"",""label"":""Elliott Thompson"",""placeLabel"":""Newport, Rhode Island, United States""}]","true"
"Which is the birth place of David Blue Lamm?"," X1-be-is-null,X2-which-Which-null,X4-David Blue Lamm-David-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-David Blue Lamm,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-David Blue Lamm-David-null, X1-subj-X2,X1-obj-X3,X4-has_name-David Blue Lamm,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, David Blue Lamm, David, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, David Blue Lamm, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, David Blue Lamm, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David Blue Lamm"",""i"")) . }"," []","[]","true"
"Which is the birth place of Samuel Halpert?"," X1-be-is-null,X2-which-Which-null,X4-Samuel Halpert-Samuel-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Samuel Halpert,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Samuel Halpert-Samuel-null, X1-subj-X2,X1-obj-X3,X4-has_name-Samuel Halpert,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Samuel Halpert, Samuel, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Samuel Halpert, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Samuel Halpert, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Samuel Halpert"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Bialystok, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bialystokrussia"",     ""snameArtist3"": ""Samuel Halpert"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2037""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2037"",""label"":""Samuel Halpert"",""placeLabel"":""Bialystok, Russia""}]","true"
"Which is the birth place of Ellsworth Young?"," X1-be-is-null,X2-which-Which-null,X4-Ellsworth Young-Ellsworth-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ellsworth Young,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ellsworth Young-Ellsworth-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ellsworth Young,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ellsworth Young, Ellsworth, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ellsworth Young, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ellsworth Young, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ellsworth Young"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Albia, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/albiaiowaunitedstates"",     ""snameArtist3"": ""Ellsworth Young"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/28256""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/28256"",""label"":""Ellsworth Young"",""placeLabel"":""Albia, Iowa, United States""}]","true"
"Which is the birth place of Phil Brown?"," X1-be-is-null,X2-which-Which-null,X4-Phil Brown-Phil-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Phil Brown,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Phil Brown-Phil-null, X1-subj-X2,X1-obj-X3,X4-has_name-Phil Brown,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Phil Brown, Phil, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Phil Brown, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Phil Brown, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Phil Brown"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Denver, Colorado, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/denvercoloradounitedstates"",     ""snameArtist3"": ""Phil Brown"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/6866""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/6866"",""label"":""Phil Brown"",""placeLabel"":""Denver, Colorado, United States""}]","true"
"Which is the birth place of Sean Scully?"," X1-be-is-null,X2-which-Which-null,X4-Sean Scully-Sean-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Sean Scully,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Sean Scully-Sean-null, X1-subj-X2,X1-obj-X3,X4-has_name-Sean Scully,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Sean Scully, Sean, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Sean Scully, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Sean Scully, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Sean Scully"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Dublin, Ireland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dublinireland"",     ""snameArtist3"": ""Sean Scully"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18467""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18467"",""label"":""Sean Scully"",""placeLabel"":""Dublin, Ireland""}]","true"
"Which is the birth place of Lucio Pozzi?"," X1-be-is-null,X2-which-Which-null,X4-Lucio Pozzi-Lucio-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Lucio Pozzi,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Lucio Pozzi-Lucio-null, X1-subj-X2,X1-obj-X3,X4-has_name-Lucio Pozzi,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Lucio Pozzi, Lucio, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Lucio Pozzi, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Lucio Pozzi, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lucio Pozzi"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Milan, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/milanitaly"",     ""snameArtist3"": ""Lucio Pozzi"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3870""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3870"",""label"":""Lucio Pozzi"",""placeLabel"":""Milan, Italy""}]","true"
"Which is the birth place of Tom Millea?"," X1-be-is-null,X2-which-Which-null,X4-Tom Millea-Tom-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Tom Millea,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Tom Millea-Tom-null, X1-subj-X2,X1-obj-X3,X4-has_name-Tom Millea,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Tom Millea, Tom, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Tom Millea, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Tom Millea, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Tom Millea"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Bridgeport, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bridgeportconnecticutunitedstates"",     ""snameArtist3"": ""Tom Millea"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/6121""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/6121"",""label"":""Tom Millea"",""placeLabel"":""Bridgeport, Connecticut, United States""}]","true"
"Which is the birth place of S. C. Baker?"," X1-be-is-null,X2-which-Which-null,X4-S. C. Baker-S.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-S. C. Baker,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-S. C. Baker-S.-null, X1-subj-X2,X1-obj-X3,X4-has_name-S. C. Baker,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, S. C. Baker, S., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, S. C. Baker, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, S. C. Baker, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""S\\. C\\. Baker"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""North Nodaway, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/northnodawayiowaunitedstates"",     ""snameArtist3"": ""S. C. Baker"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18268""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18268"",""label"":""S. C. Baker"",""placeLabel"":""North Nodaway, Iowa, United States""}]","true"
"Which is the birth place of Bob Thompson?"," X1-be-is-null,X2-which-Which-null,X4-Bob Thompson-Bob-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Bob Thompson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Bob Thompson-Bob-null, X1-subj-X2,X1-obj-X3,X4-has_name-Bob Thompson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Bob Thompson, Bob, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Bob Thompson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Bob Thompson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Bob Thompson"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Louisville, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/louisvillekentuckyunitedstates"",     ""snameArtist3"": ""Bob Thompson"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4784""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4784"",""label"":""Bob Thompson"",""placeLabel"":""Louisville, Kentucky, United States""}]","true"
"Which is the birth place of Baychar?"," X1-be-is-null,X2-which-Which-null,X4-Baychar-Baychar-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Baychar,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Baychar-Baychar-null, X1-subj-X2,X1-obj-X3,X4-has_name-Baychar,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Baychar, Baychar, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Baychar, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Baychar, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Baychar"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Augusta, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/augustamaineunitedstates"",     ""snameArtist3"": ""Baychar"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/284""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/284"",""label"":""Baychar"",""placeLabel"":""Augusta, Maine, United States""}]","true"
"Which is the birth place of Bernard Greenwald?"," X1-be-is-null,X2-which-Which-null,X4-Bernard Greenwald-Bernard-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Bernard Greenwald,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Bernard Greenwald-Bernard-null, X1-subj-X2,X1-obj-X3,X4-has_name-Bernard Greenwald,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Bernard Greenwald, Bernard, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Bernard Greenwald, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Bernard Greenwald, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Bernard Greenwald"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Newark, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newarknewjerseyunitedstates"",     ""snameArtist3"": ""Bernard Greenwald"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1936""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1936"",""label"":""Bernard Greenwald"",""placeLabel"":""Newark, New Jersey, United States""}]","true"
"Which is the birth place of William Bache?"," X1-be-is-null,X2-which-Which-null,X4-William Bache-William-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-William Bache,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-William Bache-William-null, X1-subj-X2,X1-obj-X3,X4-has_name-William Bache,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, William Bache, William, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, William Bache, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, William Bache, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William Bache"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Broomsgrove, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/broomsgroveengland"",     ""snameArtist3"": ""William Bache"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/186""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/186"",""label"":""William Bache"",""placeLabel"":""Broomsgrove, England""}]","true"
"Which is the birth place of Fred Genis?"," X1-be-is-null,X2-which-Which-null,X4-Fred Genis-Fred-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Fred Genis,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Fred Genis-Fred-null, X1-subj-X2,X1-obj-X3,X4-has_name-Fred Genis,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Fred Genis, Fred, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Fred Genis, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Fred Genis, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Fred Genis"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/netherlands"",     ""snameArtist3"": ""Fred Genis"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/6183""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/6183"",""label"":""Fred Genis"",""placeLabel"":""Netherlands""}]","true"
"Which is the birth place of Lori Nix?"," X1-be-is-null,X2-which-Which-null,X4-Lori Nix-Lori-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Lori Nix,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Lori Nix-Lori-null, X1-subj-X2,X1-obj-X3,X4-has_name-Lori Nix,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Lori Nix, Lori, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Lori Nix, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Lori Nix, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lori Nix"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Norton, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nortonkansasunitedstates"",     ""snameArtist3"": ""Lori Nix"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/28139""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/28139"",""label"":""Lori Nix"",""placeLabel"":""Norton, Kansas, United States""}]","true"
"Which is the birth place of Pino Janni?"," X1-be-is-null,X2-which-Which-null,X4-Pino Janni-Pino-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Pino Janni,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Pino Janni-Pino-null, X1-subj-X2,X1-obj-X3,X4-has_name-Pino Janni,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Pino Janni, Pino, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Pino Janni, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Pino Janni, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Pino Janni"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Venice, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/veniceitaly"",     ""snameArtist3"": ""Pino Janni"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2438""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2438"",""label"":""Pino Janni"",""placeLabel"":""Venice, Italy""}]","true"
"Which is the birth place of Sir John Watson Gordon?"," X1-be-is-null,X2-which-Which-null,X4-Sir John Watson Gordon-Sir John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Sir John Watson Gordon,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Sir John Watson Gordon-Sir John-null, X1-subj-X2,X1-obj-X3,X4-has_name-Sir John Watson Gordon,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Sir John Watson Gordon, Sir John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Sir John Watson Gordon, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Sir John Watson Gordon, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Sir John Watson Gordon"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Edinburgh, Scotland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/edinburghscotland"",     ""snameArtist3"": ""Sir John Watson Gordon"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1875""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1875"",""label"":""Sir John Watson Gordon"",""placeLabel"":""Edinburgh, Scotland""}]","true"
"Which is the birth place of Suzanne Klotz?"," X1-be-is-null,X2-which-Which-null,X4-Suzanne Klotz-Suzanne-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Suzanne Klotz,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Suzanne Klotz-Suzanne-null, X1-subj-X2,X1-obj-X3,X4-has_name-Suzanne Klotz,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Suzanne Klotz, Suzanne, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Suzanne Klotz, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Suzanne Klotz, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Suzanne Klotz"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Shawno, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/shawnowisconsinunitedstates"",     ""snameArtist3"": ""Suzanne Klotz"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2665""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2665"",""label"":""Suzanne Klotz"",""placeLabel"":""Shawno, Wisconsin, United States""}]","true"
"Which is the birth place of Oscar R. Castillo?"," X1-be-is-null,X2-which-Which-null,X4-Oscar R. Castillo-Oscar-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Oscar R. Castillo,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Oscar R. Castillo-Oscar-null, X1-subj-X2,X1-obj-X3,X4-has_name-Oscar R. Castillo,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Oscar R. Castillo, Oscar, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Oscar R. Castillo, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Oscar R. Castillo, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Oscar R\\. Castillo"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""El Paso, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/elpasotexasunitedstates"",     ""snameArtist3"": ""Oscar R. Castillo"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/30377""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/30377"",""label"":""Oscar R. Castillo"",""placeLabel"":""El Paso, Texas, United States""}]","true"
"Which is the birth place of Clyde Lynds?"," X1-be-is-null,X2-which-Which-null,X4-Clyde Lynds-Clyde-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Clyde Lynds,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Clyde Lynds-Clyde-null, X1-subj-X2,X1-obj-X3,X4-has_name-Clyde Lynds,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Clyde Lynds, Clyde, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Clyde Lynds, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Clyde Lynds, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Clyde Lynds"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Jersey City, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jerseycitynewjerseyunitedstates"",     ""snameArtist3"": ""Clyde Lynds"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3030""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3030"",""label"":""Clyde Lynds"",""placeLabel"":""Jersey City, New Jersey, United States""}]","true"
"Which is the birth place of Steve Ashby?"," X1-be-is-null,X2-which-Which-null,X4-Steve Ashby-Steve-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Steve Ashby,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Steve Ashby-Steve-null, X1-subj-X2,X1-obj-X3,X4-has_name-Steve Ashby,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Steve Ashby, Steve, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Steve Ashby, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Steve Ashby, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Steve Ashby"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Delaplane, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/delaplanevirginiaunitedstates"",     ""snameArtist3"": ""Steve Ashby"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/154""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/154"",""label"":""Steve Ashby"",""placeLabel"":""Delaplane, Virginia, United States""}]","true"
"Which is the birth place of Alonzo Earl Foringer?"," X1-be-is-null,X2-which-Which-null,X4-Alonzo Earl Foringer-Alonzo-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Alonzo Earl Foringer,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Alonzo Earl Foringer-Alonzo-null, X1-subj-X2,X1-obj-X3,X4-has_name-Alonzo Earl Foringer,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Alonzo Earl Foringer, Alonzo, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Alonzo Earl Foringer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Alonzo Earl Foringer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alonzo Earl Foringer"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Kaylor, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kaylorpennsylvaniaunitedstates"",     ""snameArtist3"": ""Alonzo Earl Foringer"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/28243""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/28243"",""label"":""Alonzo Earl Foringer"",""placeLabel"":""Kaylor, Pennsylvania, United States""}]","true"
"Which is the birth place of Mary Grigoriadis?"," X1-be-is-null,X2-which-Which-null,X4-Mary Grigoriadis-Mary-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Mary Grigoriadis,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Mary Grigoriadis-Mary-null, X1-subj-X2,X1-obj-X3,X4-has_name-Mary Grigoriadis,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Mary Grigoriadis, Mary, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Mary Grigoriadis, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Mary Grigoriadis, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mary Grigoriadis"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Jersey City, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jerseycitynewjerseyunitedstates"",     ""snameArtist3"": ""Mary Grigoriadis"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1951""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1951"",""label"":""Mary Grigoriadis"",""placeLabel"":""Jersey City, New Jersey, United States""}]","true"
"Which is the birth place of Stanley Edwards?"," X1-be-is-null,X2-which-Which-null,X4-Stanley Edwards-Stanley-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Stanley Edwards,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Stanley Edwards-Stanley-null, X1-subj-X2,X1-obj-X3,X4-has_name-Stanley Edwards,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Stanley Edwards, Stanley, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Stanley Edwards, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Stanley Edwards, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Stanley Edwards"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Joliet, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jolietillinoisunitedstates"",     ""snameArtist3"": ""Stanley Edwards"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1414""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1414"",""label"":""Stanley Edwards"",""placeLabel"":""Joliet, Illinois, United States""}]","true"
"Which is the birth place of Ilah Marian Kibbey?"," X1-be-is-null,X2-which-Which-null,X4-Ilah Marian Kibbey-Ilah-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ilah Marian Kibbey,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ilah Marian Kibbey-Ilah-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ilah Marian Kibbey,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ilah Marian Kibbey, Ilah, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ilah Marian Kibbey, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ilah Marian Kibbey, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ilah Marian Kibbey"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Geneva, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/genevaohiounitedstates"",     ""snameArtist3"": ""Ilah Marian Kibbey"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2615""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2615"",""label"":""Ilah Marian Kibbey"",""placeLabel"":""Geneva, Ohio, United States""}]","true"
"Which is the birth place of Sam Gilliam?"," X1-be-is-null,X2-which-Which-null,X4-Sam Gilliam-Sam-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Sam Gilliam,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Sam Gilliam-Sam-null, X1-subj-X2,X1-obj-X3,X4-has_name-Sam Gilliam,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Sam Gilliam, Sam, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Sam Gilliam, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Sam Gilliam, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Sam Gilliam"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Tupelo, Mississippi, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tupelomississippiunitedstates"",     ""snameArtist3"": ""Sam Gilliam"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1811""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1811"",""label"":""Sam Gilliam"",""placeLabel"":""Tupelo, Mississippi, United States""}]","true"
"Which is the birth place of Herschel Elarth?"," X1-be-is-null,X2-which-Which-null,X4-Herschel Elarth-Herschel Elarth-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Herschel Elarth,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Herschel Elarth-Herschel Elarth-null, X1-subj-X2,X1-obj-X3,X4-has_name-Herschel Elarth,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Herschel Elarth, Herschel Elarth, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Herschel Elarth, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Herschel Elarth, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Herschel Elarth"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Omaha, Nebraska, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/omahanebraskaunitedstates"",     ""snameArtist3"": ""Herschel Elarth"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1429""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1429"",""label"":""Herschel Elarth"",""placeLabel"":""Omaha, Nebraska, United States""}]","true"
"Which is the birth place of David Meaders?"," X1-be-is-null,X2-which-Which-null,X4-David Meaders-David-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-David Meaders,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-David Meaders-David-null, X1-subj-X2,X1-obj-X3,X4-has_name-David Meaders,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, David Meaders, David, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, David Meaders, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, David Meaders, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David Meaders"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Cleveland, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/clevelandgeorgiaunitedstates"",     ""snameArtist3"": ""David Meaders"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/31008""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/31008"",""label"":""David Meaders"",""placeLabel"":""Cleveland, Georgia, United States""}]","true"
"Which is the birth place of Sarah Goodridge?"," X1-be-is-null,X2-which-Which-null,X4-Sarah Goodridge-Sarah-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Sarah Goodridge,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Sarah Goodridge-Sarah-null, X1-subj-X2,X1-obj-X3,X4-has_name-Sarah Goodridge,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Sarah Goodridge, Sarah, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Sarah Goodridge, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Sarah Goodridge, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Sarah Goodridge"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Templeton, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/templetonmassachusettsunitedstates"",     ""snameArtist3"": ""Sarah Goodridge"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1872""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1872"",""label"":""Sarah Goodridge"",""placeLabel"":""Templeton, Massachusetts, United States""}]","true"
"Which is the birth place of Thomas D. Rogers?"," X1-be-is-null,X2-which-Which-null,X4-Thomas D. Rogers-Thomas-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Thomas D. Rogers,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Thomas D. Rogers-Thomas-null, X1-subj-X2,X1-obj-X3,X4-has_name-Thomas D. Rogers,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Thomas D. Rogers, Thomas, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Thomas D. Rogers, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Thomas D. Rogers, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Thomas D\\. Rogers"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Poughkeepsie, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/poughkeepsienewyorkunitedstates"",     ""snameArtist3"": ""Thomas D. Rogers"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/29738""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/29738"",""label"":""Thomas D. Rogers"",""placeLabel"":""Poughkeepsie, New York, United States""}]","true"
"Which is the birth place of Otto Natzler?"," X1-be-is-null,X2-which-Which-null,X4-Otto Natzler-Otto-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Otto Natzler,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Otto Natzler-Otto-null, X1-subj-X2,X1-obj-X3,X4-has_name-Otto Natzler,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Otto Natzler, Otto, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Otto Natzler, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Otto Natzler, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Otto Natzler"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Vienna, Austria"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/viennaaustria"",     ""snameArtist3"": ""Otto Natzler"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3499""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3499"",""label"":""Otto Natzler"",""placeLabel"":""Vienna, Austria""}]","true"
"Which is the birth place of Ron Davis?"," X1-be-is-null,X2-which-Which-null,X4-Ron Davis-Ron-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ron Davis,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ron Davis-Ron-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ron Davis,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ron Davis, Ron, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ron Davis, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ron Davis, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ron Davis"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Santa Monica, California"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/santamonicacalifornia"",     ""snameArtist3"": ""Ron Davis"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/28288""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/28288"",""label"":""Ron Davis"",""placeLabel"":""Santa Monica, California""}]","true"
"Which is the birth place of Walter Granville-Smith?"," X1-be-is-null,X2-which-Which-null,X4-Walter Granville-Walter-null,X3-birth place Smith-birth place-the, X1-subj-X2,X4-has_name-Walter Granville,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place Smith-birth place-the,X4-Walter Granville-Walter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Walter Granville,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Walter Granville, Walter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place Smith, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Walter Granville, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Walter Granville, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place Smith, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 2]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Walter Granville"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""South Granville, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/southgranvillenewyorkunitedstates"",     ""snameArtist3"": ""Walter Granville-Smith"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1906""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1906"",""label"":""Walter Granville-Smith"",""placeLabel"":""South Granville, New York, United States""}]","true"
"Which is the birth place of Gilbert Stuart Newton?"," X1-be-is-null,X2-which-Which-null,X4-Gilbert Stuart Newton-Gilbert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Gilbert Stuart Newton,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Gilbert Stuart Newton-Gilbert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Gilbert Stuart Newton,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Gilbert Stuart Newton, Gilbert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Gilbert Stuart Newton, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Gilbert Stuart Newton, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Gilbert Stuart Newton"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Halifax, Nova Scotia, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/halifaxnovascotiacanada"",     ""snameArtist3"": ""Gilbert Stuart Newton"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/6488""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/6488"",""label"":""Gilbert Stuart Newton"",""placeLabel"":""Halifax, Nova Scotia, Canada""}]","true"
"Which is the birth place of Thomas Gainsborough?"," X1-be-is-null,X2-which-Which-null,X4-Thomas Gainsborough-Thomas-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Thomas Gainsborough,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Thomas Gainsborough-Thomas-null, X1-subj-X2,X1-obj-X3,X4-has_name-Thomas Gainsborough,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Thomas Gainsborough, Thomas, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Thomas Gainsborough, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Thomas Gainsborough, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Thomas Gainsborough"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Sudbury, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sudburyengland"",     ""snameArtist3"": ""Thomas Gainsborough"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1716""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1716"",""label"":""Thomas Gainsborough"",""placeLabel"":""Sudbury, England""}]","true"
"Which is the birth place of Ernest Fiene?"," X1-be-is-null,X2-which-Which-null,X4-Ernest Fiene-Ernest-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ernest Fiene,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ernest Fiene-Ernest-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ernest Fiene,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ernest Fiene, Ernest, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ernest Fiene, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ernest Fiene, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ernest Fiene"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Elberfeld, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/elberfeldgermany"",     ""snameArtist3"": ""Ernest Fiene"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1537""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1537"",""label"":""Ernest Fiene"",""placeLabel"":""Elberfeld, Germany""}]","true"
"Which is the birth place of Hildegarde Haas?"," X1-be-is-null,X2-which-Which-null,X4-Hildegarde Haas-Hildegarde-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Hildegarde Haas,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Hildegarde Haas-Hildegarde-null, X1-subj-X2,X1-obj-X3,X4-has_name-Hildegarde Haas,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Hildegarde Haas, Hildegarde, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Hildegarde Haas, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Hildegarde Haas, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Hildegarde Haas"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/germany"",     ""snameArtist3"": ""Hildegarde Haas"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2003""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2003"",""label"":""Hildegarde Haas"",""placeLabel"":""Germany""}]","true"
"Which is the birth place of Ernest D. Roth?"," X1-be-is-null,X2-which-Which-null,X4-Ernest D. Roth-Ernest-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ernest D. Roth,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ernest D. Roth-Ernest-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ernest D. Roth,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ernest D. Roth, Ernest, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ernest D. Roth, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ernest D. Roth, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ernest D\\. Roth"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Stuttgart, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stuttgartgermany"",     ""snameArtist3"": ""Ernest D. Roth"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4156""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4156"",""label"":""Ernest D. Roth"",""placeLabel"":""Stuttgart, Germany""}]","true"
"Which is the birth place of Edward Goodall?"," X1-be-is-null,X2-which-Which-null,X4-Edward Goodall-Edward-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Edward Goodall,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Edward Goodall-Edward-null, X1-subj-X2,X1-obj-X3,X4-has_name-Edward Goodall,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Edward Goodall, Edward, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Edward Goodall, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Edward Goodall, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Edward Goodall"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Leeds, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/leedsengland"",     ""snameArtist3"": ""Edward Goodall"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1862""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1862"",""label"":""Edward Goodall"",""placeLabel"":""Leeds, England""}]","true"
"Which is the birth place of Bill Beckley?"," X1-be-is-null,X2-which-Which-null,X4-Bill Beckley-Bill-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Bill Beckley,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Bill Beckley-Bill-null, X1-subj-X2,X1-obj-X3,X4-has_name-Bill Beckley,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Bill Beckley, Bill, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Bill Beckley, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Bill Beckley, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Bill Beckley"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Hamburg, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hamburgpennsylvaniaunitedstates"",     ""snameArtist3"": ""Bill Beckley"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27749""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27749"",""label"":""Bill Beckley"",""placeLabel"":""Hamburg, Pennsylvania, United States""}]","true"
"Which is the birth place of Frances Felten?"," X1-be-is-null,X2-which-Which-null,X4-Frances Felten-Frances-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Frances Felten,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Frances Felten-Frances-null, X1-subj-X2,X1-obj-X3,X4-has_name-Frances Felten,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Frances Felten, Frances, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Frances Felten, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Frances Felten, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frances Felten"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Alsen, New York"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/alsennewyork"",     ""snameArtist3"": ""Frances Felten"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/15742""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/15742"",""label"":""Frances Felten"",""placeLabel"":""Alsen, New York""}]","true"
"Which is the birth place of Rick Wrigley?"," X1-be-is-null,X2-which-Which-null,X4-Rick Wrigley-Rick-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Rick Wrigley,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Rick Wrigley-Rick-null, X1-subj-X2,X1-obj-X3,X4-has_name-Rick Wrigley,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Rick Wrigley, Rick, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Rick Wrigley, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Rick Wrigley, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Rick Wrigley"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Arlington, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/arlingtonvirginiaunitedstates"",     ""snameArtist3"": ""Rick Wrigley"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27634""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27634"",""label"":""Rick Wrigley"",""placeLabel"":""Arlington, Virginia, United States""}]","true"
"Which is the birth place of John C. Johansen?"," X1-be-is-null,X2-which-Which-null,X4-John C. Johansen-John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John C. Johansen,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John C. Johansen-John-null, X1-subj-X2,X1-obj-X3,X4-has_name-John C. Johansen,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John C. Johansen, John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John C. Johansen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John C. Johansen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John C\\. Johansen"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Copenhagen, Denmark"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/copenhagendenmark"",     ""snameArtist3"": ""John C. Johansen"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2463""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2463"",""label"":""John C. Johansen"",""placeLabel"":""Copenhagen, Denmark""}]","true"
"Which is the birth place of Gwendolyn A. Magee?"," X1-be-is-null,X2-which-Which-null,X4-Gwendolyn A. Magee-Gwendolyn-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Gwendolyn A. Magee,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Gwendolyn A. Magee-Gwendolyn-null, X1-subj-X2,X1-obj-X3,X4-has_name-Gwendolyn A. Magee,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Gwendolyn A. Magee, Gwendolyn, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Gwendolyn A. Magee, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Gwendolyn A. Magee, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Gwendolyn A\\. Magee"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""High Point, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/highpointnorthcarolinaunitedstates"",     ""snameArtist3"": ""Gwendolyn A. Magee"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27825""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27825"",""label"":""Gwendolyn A. Magee"",""placeLabel"":""High Point, North Carolina, United States""}]","true"
"Which is the birth place of Mary Mullineux?"," X1-be-is-null,X2-which-Which-null,X4-Mary Mullineux-Mary-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Mary Mullineux,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Mary Mullineux-Mary-null, X1-subj-X2,X1-obj-X3,X4-has_name-Mary Mullineux,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Mary Mullineux, Mary, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Mary Mullineux, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Mary Mullineux, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mary Mullineux"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Germantown, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/germantownpennsylvaniaunitedstates"",     ""snameArtist3"": ""Mary Mullineux"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3456""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3456"",""label"":""Mary Mullineux"",""placeLabel"":""Germantown, Pennsylvania, United States""}]","true"
"Which is the birth place of Laddie John Dill?"," X1-be-is-null,X2-which-Which-null,X4-Laddie John Dill-Laddie-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Laddie John Dill,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Laddie John Dill-Laddie-null, X1-subj-X2,X1-obj-X3,X4-has_name-Laddie John Dill,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Laddie John Dill, Laddie, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Laddie John Dill, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Laddie John Dill, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Laddie John Dill"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Long Beach, California"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/longbeachcalifornia"",     ""snameArtist3"": ""Laddie John Dill"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/28292""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/28292"",""label"":""Laddie John Dill"",""placeLabel"":""Long Beach, California""}]","true"
"Which is the birth place of Gregory Conniff?"," X1-be-is-null,X2-which-Which-null,X4-Gregory Conniff-Gregory-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Gregory Conniff,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Gregory Conniff-Gregory-null, X1-subj-X2,X1-obj-X3,X4-has_name-Gregory Conniff,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Gregory Conniff, Gregory, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Gregory Conniff, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Gregory Conniff, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Gregory Conniff"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Jersey City, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jerseycitynewjerseyunitedstates"",     ""snameArtist3"": ""Gregory Conniff"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5937""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5937"",""label"":""Gregory Conniff"",""placeLabel"":""Jersey City, New Jersey, United States""}]","true"
"Which is the birth place of Masuo Ikeda?"," X1-be-is-null,X2-which-Which-null,X4-Masuo Ikeda-Masuo-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Masuo Ikeda,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Masuo Ikeda-Masuo-null, X1-subj-X2,X1-obj-X3,X4-has_name-Masuo Ikeda,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Masuo Ikeda, Masuo, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Masuo Ikeda, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Masuo Ikeda, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Masuo Ikeda"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Mukden, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mukdenjapan"",     ""snameArtist3"": ""Masuo Ikeda"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2381""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2381"",""label"":""Masuo Ikeda"",""placeLabel"":""Mukden, Japan""}]","true"
"Which is the birth place of Katja Oxman?"," X1-be-is-null,X2-which-Which-null,X4-Katja Oxman-Katja-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Katja Oxman,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Katja Oxman-Katja-null, X1-subj-X2,X1-obj-X3,X4-has_name-Katja Oxman,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Katja Oxman, Katja, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Katja Oxman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Katja Oxman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Katja Oxman"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Munich, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/munichgermany"",     ""snameArtist3"": ""Katja Oxman"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/30871""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/30871"",""label"":""Katja Oxman"",""placeLabel"":""Munich, Germany""}]","true"
"Which is the birth place of Rosa Bonheur?"," X1-be-is-null,X2-which-Which-null,X4-Rosa Bonheur-Rosa-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Rosa Bonheur,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Rosa Bonheur-Rosa-null, X1-subj-X2,X1-obj-X3,X4-has_name-Rosa Bonheur,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Rosa Bonheur, Rosa, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Rosa Bonheur, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Rosa Bonheur, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Rosa Bonheur"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Bordeaux, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bordeauxfrance"",     ""snameArtist3"": ""Rosa Bonheur"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27412""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27412"",""label"":""Rosa Bonheur"",""placeLabel"":""Bordeaux, France""}]","true"
"Which is the birth place of Robert Disraeli?"," X1-be-is-null,X2-which-Which-null,X4-Robert Disraeli-Robert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Robert Disraeli,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Robert Disraeli-Robert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Robert Disraeli,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Robert Disraeli, Robert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Robert Disraeli, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Robert Disraeli, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert Disraeli"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Cologne, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/colognegermany"",     ""snameArtist3"": ""Robert Disraeli"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5717""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5717"",""label"":""Robert Disraeli"",""placeLabel"":""Cologne, Germany""}]","true"
"Which is the birth place of James M. Haughey?"," X1-be-is-null,X2-which-Which-null,X4-James M. Haughey-James-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-James M. Haughey,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-James M. Haughey-James-null, X1-subj-X2,X1-obj-X3,X4-has_name-James M. Haughey,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, James M. Haughey, James, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, James M. Haughey, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, James M. Haughey, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James M\\. Haughey"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Courtland, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/courtlandkansasunitedstates"",     ""snameArtist3"": ""James M. Haughey"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2119""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2119"",""label"":""James M. Haughey"",""placeLabel"":""Courtland, Kansas, United States""}]","true"
"Which is the birth place of Norman Kohlhepp?"," X1-be-is-null,X2-which-Which-null,X4-Norman Kohlhepp-Norman-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Norman Kohlhepp,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Norman Kohlhepp-Norman-null, X1-subj-X2,X1-obj-X3,X4-has_name-Norman Kohlhepp,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Norman Kohlhepp, Norman, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Norman Kohlhepp, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Norman Kohlhepp, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Norman Kohlhepp"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Louisville, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/louisvillekentuckyunitedstates"",     ""snameArtist3"": ""Norman Kohlhepp"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2682""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2682"",""label"":""Norman Kohlhepp"",""placeLabel"":""Louisville, Kentucky, United States""}]","true"
"Which is the birth place of Maria Martinez?"," X1-be-is-null,X2-which-Which-null,X4-Maria Martinez-Maria-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Maria Martinez,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Maria Martinez-Maria-null, X1-subj-X2,X1-obj-X3,X4-has_name-Maria Martinez,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Maria Martinez, Maria, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Maria Martinez, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Maria Martinez, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Maria Martinez"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""San Ildefonso Pueblo, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sanildefonsopueblonewmexicounitedstates"",     ""snameArtist3"": ""Maria Martinez"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3142""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3142"",""label"":""Maria Martinez"",""placeLabel"":""San Ildefonso Pueblo, New Mexico, United States""}]","true"
"Which is the birth place of Milton Avery?"," X1-be-is-null,X2-which-Which-null,X4-Milton Avery-Milton-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Milton Avery,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Milton Avery-Milton-null, X1-subj-X2,X1-obj-X3,X4-has_name-Milton Avery,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Milton Avery, Milton, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Milton Avery, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Milton Avery, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Milton Avery"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Sand Bank, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sandbanknewyorkunitedstates"",     ""snameArtist3"": ""Milton Avery"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/176""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/176"",""label"":""Milton Avery"",""placeLabel"":""Sand Bank, New York, United States""}]","true"
"Which is the birth place of Alexandrina Robertson Harris?"," X1-be-is-null,X2-which-Which-null,X4-Alexandrina Robertson Harris-Alexandrina-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Alexandrina Robertson Harris,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Alexandrina Robertson Harris-Alexandrina-null, X1-subj-X2,X1-obj-X3,X4-has_name-Alexandrina Robertson Harris,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Alexandrina Robertson Harris, Alexandrina, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Alexandrina Robertson Harris, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Alexandrina Robertson Harris, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alexandrina Robertson Harris"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Aberdeen, Scotland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/aberdeenscotland"",     ""snameArtist3"": ""Alexandrina Robertson Harris"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2084""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2084"",""label"":""Alexandrina Robertson Harris"",""placeLabel"":""Aberdeen, Scotland""}]","true"
"Which is the birth place of Maurice Golubov?"," X1-be-is-null,X2-which-Which-null,X4-Maurice Golubov-Maurice-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Maurice Golubov,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Maurice Golubov-Maurice-null, X1-subj-X2,X1-obj-X3,X4-has_name-Maurice Golubov,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Maurice Golubov, Maurice, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Maurice Golubov, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Maurice Golubov, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Maurice Golubov"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Vetka, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vetkarussia"",     ""snameArtist3"": ""Maurice Golubov"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1856""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1856"",""label"":""Maurice Golubov"",""placeLabel"":""Vetka, Russia""}]","true"
"Which is the birth place of Armin Landeck?"," X1-be-is-null,X2-which-Which-null,X4-Armin Landeck-Armin-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Armin Landeck,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Armin Landeck-Armin-null, X1-subj-X2,X1-obj-X3,X4-has_name-Armin Landeck,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Armin Landeck, Armin, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Armin Landeck, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Armin Landeck, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Armin Landeck"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Crandon, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/crandonwisconsinunitedstates"",     ""snameArtist3"": ""Armin Landeck"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2780""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2780"",""label"":""Armin Landeck"",""placeLabel"":""Crandon, Wisconsin, United States""}]","true"
"Which is the birth place of Tony Berlant?"," X1-be-is-null,X2-which-Which-null,X4-Tony Berlant-Tony-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Tony Berlant,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Tony Berlant-Tony-null, X1-subj-X2,X1-obj-X3,X4-has_name-Tony Berlant,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Tony Berlant, Tony, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Tony Berlant, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Tony Berlant, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Tony Berlant"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""New York, New York"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newyorknewyork"",     ""snameArtist3"": ""Tony Berlant"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/28284""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/28284"",""label"":""Tony Berlant"",""placeLabel"":""New York, New York""}]","true"
"Which is the birth place of Yun Gee?"," X1-be-is-null,X2-which-Which-null,X4-Yun Gee-Yun-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Yun Gee,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Yun Gee-Yun-null, X1-subj-X2,X1-obj-X3,X4-has_name-Yun Gee,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Yun Gee, Yun, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Yun Gee, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Yun Gee, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Yun Gee"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Canton, China"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cantonchina"",     ""snameArtist3"": ""Yun Gee"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1766""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1766"",""label"":""Yun Gee"",""placeLabel"":""Canton, China""}]","true"
"Which is the birth place of John Adams Elder?"," X1-be-is-null,X2-which-Which-null,X4-John Adams elder-John Elder-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John Adams elder,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John Adams elder-John Elder-null, X1-subj-X2,X1-obj-X3,X4-has_name-John Adams elder,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John Adams elder, John Elder, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John Adams elder, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John Adams elder, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Adams elder"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Fredericksburg, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fredericksburgvirginiaunitedstates"",     ""snameArtist3"": ""John Adams Elder"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1430""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1430"",""label"":""John Adams Elder"",""placeLabel"":""Fredericksburg, Virginia, United States""}]","true"
"Which is the birth place of Carlos Santistevan?"," X1-be-is-null,X2-which-Which-null,X4-Carlos Santistevan-Carlos-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Carlos Santistevan,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Carlos Santistevan-Carlos-null, X1-subj-X2,X1-obj-X3,X4-has_name-Carlos Santistevan,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Carlos Santistevan, Carlos, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Carlos Santistevan, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Carlos Santistevan, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Carlos Santistevan"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Denver, Colorado, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/denvercoloradounitedstates"",     ""snameArtist3"": ""Carlos Santistevan"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/6044""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/6044"",""label"":""Carlos Santistevan"",""placeLabel"":""Denver, Colorado, United States""}]","true"
"Which is the birth place of Theo Hios?"," X1-be-is-null,X2-which-Which-null,X4-Theo Hio-Theo-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Theo Hio,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Theo Hio-Theo-null, X1-subj-X2,X1-obj-X3,X4-has_name-Theo Hio,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Theo Hio, Theo, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Theo Hio, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Theo Hio, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Theo Hio"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Tripi, Greece"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tripigreece"",     ""snameArtist3"": ""Theo Hios"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2238""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2238"",""label"":""Theo Hios"",""placeLabel"":""Tripi, Greece""}]","true"
"Which is the birth place of Jackson Pollock?"," X1-be-is-null,X2-which-Which-null,X4-Jackson Pollock-Jackson-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jackson Pollock,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jackson Pollock-Jackson-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jackson Pollock,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jackson Pollock, Jackson, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jackson Pollock, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jackson Pollock, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jackson Pollock"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Cody, Wyoming, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/codywyomingunitedstates"",     ""snameArtist3"": ""Jackson Pollock"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3826""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3826"",""label"":""Jackson Pollock"",""placeLabel"":""Cody, Wyoming, United States""}]","true"
"Which is the birth place of David McCosh?"," X1-be-is-null,X2-which-Which-null,X4-David McCosh-David-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-David McCosh,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-David McCosh-David-null, X1-subj-X2,X1-obj-X3,X4-has_name-David McCosh,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, David McCosh, David, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, David McCosh, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, David McCosh, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David McCosh"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Cedar Rapids, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cedarrapidsiowaunitedstates"",     ""snameArtist3"": ""David McCosh"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3210""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3210"",""label"":""David McCosh"",""placeLabel"":""Cedar Rapids, Iowa, United States""}]","true"
"Which is the birth place of T. L. Solien?"," X1-be-is-null,X2-which-Which-null,X4-T. L. Solien-T.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-T. L. Solien,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-T. L. Solien-T.-null, X1-subj-X2,X1-obj-X3,X4-has_name-T. L. Solien,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, T. L. Solien, T., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, T. L. Solien, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, T. L. Solien, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""T\\. L\\. Solien"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Fargo, North Dakota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fargonorthdakotaunitedstates"",     ""snameArtist3"": ""T. L. Solien"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18186""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18186"",""label"":""T. L. Solien"",""placeLabel"":""Fargo, North Dakota, United States""}]","true"
"Which is the birth place of Robert Reid?"," X1-be-is-null,X2-which-Which-null,X4-Robert Reid-Robert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Robert Reid,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Robert Reid-Robert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Robert Reid,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Robert Reid, Robert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Robert Reid, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Robert Reid, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert Reid"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Stockbridge, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stockbridgemassachusettsunitedstates"",     ""snameArtist3"": ""Robert Reid"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3989""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3989"",""label"":""Robert Reid"",""placeLabel"":""Stockbridge, Massachusetts, United States""}]","true"
"Which is the birth place of Patricia Tobacco Forrester?"," X1-be-is-null,X2-which-Which-null,X4-Patricia Tobacco Forrester-Patricia-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Patricia Tobacco Forrester,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Patricia Tobacco Forrester-Patricia-null, X1-subj-X2,X1-obj-X3,X4-has_name-Patricia Tobacco Forrester,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Patricia Tobacco Forrester, Patricia, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Patricia Tobacco Forrester, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Patricia Tobacco Forrester, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Patricia Tobacco Forrester"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Northampton, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/northamptonmassachusettsunitedstates"",     ""snameArtist3"": ""Patricia Tobacco Forrester"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1611""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1611"",""label"":""Patricia Tobacco Forrester"",""placeLabel"":""Northampton, Massachusetts, United States""}]","true"
"Which is the birth place of Ray E. George?"," X1-be-is-null,X2-which-Which-null,X4-Ray E. George-Ray-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ray E. George,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ray E. George-Ray-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ray E. George,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ray E. George, Ray, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ray E. George, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ray E. George, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ray E\\. George"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Cedar Falls, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cedarfallsiowaunitedstates"",     ""snameArtist3"": ""Ray E. George"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1776""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1776"",""label"":""Ray E. George"",""placeLabel"":""Cedar Falls, Iowa, United States""}]","true"
"Which is the birth place of Louis M. Eilshemius?"," X1-be-is-null,X2-which-Which-null,X4-Louis M. Eilshemius-Louis-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Louis M. Eilshemius,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Louis M. Eilshemius-Louis-null, X1-subj-X2,X1-obj-X3,X4-has_name-Louis M. Eilshemius,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Louis M. Eilshemius, Louis, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Louis M. Eilshemius, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Louis M. Eilshemius, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Louis M\\. Eilshemius"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Arlington, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/arlingtonnewjerseyunitedstates"",     ""snameArtist3"": ""Louis M. Eilshemius"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1426""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1426"",""label"":""Louis M. Eilshemius"",""placeLabel"":""Arlington, New Jersey, United States""}]","true"
"Which is the birth place of William Langenheim?"," X1-be-is-null,X2-which-Which-null,X4-William Langenheim-William-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-William Langenheim,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-William Langenheim-William-null, X1-subj-X2,X1-obj-X3,X4-has_name-William Langenheim,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, William Langenheim, William, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, William Langenheim, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, William Langenheim, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William Langenheim"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Brunswick, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/brunswickgermany"",     ""snameArtist3"": ""William Langenheim"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/6752""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/6752"",""label"":""William Langenheim"",""placeLabel"":""Brunswick, Germany""}]","true"
"Which is the birth place of Michael Davis?"," X1-be-is-null,X2-which-Which-null,X4-Michael Davis-Michael-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Michael Davis,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Michael Davis-Michael-null, X1-subj-X2,X1-obj-X3,X4-has_name-Michael Davis,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Michael Davis, Michael, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Michael Davis, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Michael Davis, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Michael Davis"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Jacksonville, Florida, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jacksonvillefloridaunitedstates"",     ""snameArtist3"": ""Michael Davis"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/7234""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/7234"",""label"":""Michael Davis"",""placeLabel"":""Jacksonville, Florida, United States""}]","true"
"Which is the birth place of Clinton Adams?"," X1-be-is-null,X2-which-Which-null,X4-Clinton Adams-Clinton-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Clinton Adams,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Clinton Adams-Clinton-null, X1-subj-X2,X1-obj-X3,X4-has_name-Clinton Adams,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Clinton Adams, Clinton, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Clinton Adams, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Clinton Adams, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Clinton Adams"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Glendale, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/glendalecaliforniaunitedstates"",     ""snameArtist3"": ""Clinton Adams"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/22""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/22"",""label"":""Clinton Adams"",""placeLabel"":""Glendale, California, United States""}]","true"
"Which is the birth place of John Woodin?"," X1-be-is-null,X2-which-Which-null,X4-John Woodin-John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John Woodin,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John Woodin-John-null, X1-subj-X2,X1-obj-X3,X4-has_name-John Woodin,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John Woodin, John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John Woodin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John Woodin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Woodin"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""New Orleans, Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/neworleanslouisianaunitedstates"",     ""snameArtist3"": ""John Woodin"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5702""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5702"",""label"":""John Woodin"",""placeLabel"":""New Orleans, Louisiana, United States""}]","true"
"Which is the birth place of Truman Howe Bartlett?"," X1-be-is-null,X2-which-Which-null,X4-Truman Howe Bartlett-Truman-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Truman Howe Bartlett,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Truman Howe Bartlett-Truman-null, X1-subj-X2,X1-obj-X3,X4-has_name-Truman Howe Bartlett,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Truman Howe Bartlett, Truman, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Truman Howe Bartlett, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Truman Howe Bartlett, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Truman Howe Bartlett"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Dorset, Vermont, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dorsetvermontunitedstates"",     ""snameArtist3"": ""Truman Howe Bartlett"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27820""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27820"",""label"":""Truman Howe Bartlett"",""placeLabel"":""Dorset, Vermont, United States""}]","true"
"Which is the birth place of Don Doll, S. J.?"," X1-be-is-null,X2-which-Which-null,X4-Don Doll J.?-Don-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-S.,X4-has_name-Don Doll J.?,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Don Doll J.?-Don-null, X1-subj-X2,X1-obj-X3,X4-has_name-S.,X4-has_name-Don Doll J.?,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Don Doll J.?, Don, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, S., propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_name, Don Doll J.?, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Don Doll J.?, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 3
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Don Doll J\\.\\?"",""i"")) . {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""S\\."",""i"")) . }"," []","[{""actor"":""http://data.americanart.si.edu/constituent/id/18485"",""label"":""Don Doll, S. J."",""placeLabel"":""Milwaukee, Wisconsin, United States""}]","false"
"Which is the birth place of Ronald Bladen?"," X1-be-is-null,X2-which-Which-null,X4-Ronald Bladen-Ronald-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ronald Bladen,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ronald Bladen-Ronald-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ronald Bladen,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ronald Bladen, Ronald, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ronald Bladen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ronald Bladen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ronald Bladen"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Vancouver, British Columbia, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vancouverbritishcolumbiacanada"",     ""snameArtist3"": ""Ronald Bladen"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/438""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/438"",""label"":""Ronald Bladen"",""placeLabel"":""Vancouver, British Columbia, Canada""}]","true"
"Which is the birth place of Jacquelyn Rice?"," X1-be-is-null,X2-which-Which-null,X4-Jacquelyn Rice-Jacquelyn-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jacquelyn Rice,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jacquelyn Rice-Jacquelyn-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jacquelyn Rice,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jacquelyn Rice, Jacquelyn, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jacquelyn Rice, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jacquelyn Rice, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jacquelyn Rice"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Orange, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/orangecaliforniaunitedstates"",     ""snameArtist3"": ""Jacquelyn Rice"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/29029""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/29029"",""label"":""Jacquelyn Rice"",""placeLabel"":""Orange, California, United States""}]","true"
"Which is the birth place of David Stromeyer?"," X1-be-is-null,X2-which-Which-null,X4-David Stromeyer-David-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-David Stromeyer,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-David Stromeyer-David-null, X1-subj-X2,X1-obj-X3,X4-has_name-David Stromeyer,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, David Stromeyer, David, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, David Stromeyer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, David Stromeyer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David Stromeyer"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Marblehead, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/marbleheadmassachusettsunitedstates"",     ""snameArtist3"": ""David Stromeyer"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4683""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4683"",""label"":""David Stromeyer"",""placeLabel"":""Marblehead, Massachusetts, United States""}]","true"
"Which is the birth place of Richard George Mathews?"," X1-be-is-null,X2-which-Which-null,X4-Richard George Mathew-Richard-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Richard George Mathew,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Richard George Mathew-Richard-null, X1-subj-X2,X1-obj-X3,X4-has_name-Richard George Mathew,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Richard George Mathew, Richard, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Richard George Mathew, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Richard George Mathew, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Richard George Mathew"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Montreal, Quebec, Canada"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/montrealquebeccanada"",     ""snameArtist3"": ""Richard George Mathews"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3163""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3163"",""label"":""Richard George Mathews"",""placeLabel"":""Montreal, Quebec, Canada""}]","true"
"Which is the birth place of Helene Sardeau?"," X1-be-is-null,X2-which-Which-null,X4-Helene Sardeau-Helene-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Helene Sardeau,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Helene Sardeau-Helene-null, X1-subj-X2,X1-obj-X3,X4-has_name-Helene Sardeau,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Helene Sardeau, Helene, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Helene Sardeau, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Helene Sardeau, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Helene Sardeau"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Antwerp, Belgium"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/antwerpbelgium"",     ""snameArtist3"": ""Helene Sardeau"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4252""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4252"",""label"":""Helene Sardeau"",""placeLabel"":""Antwerp, Belgium""}]","true"
"Which is the birth place of Victor Justice Evans?"," X1-be-is-null,X2-which-Which-null,X4-Victor Justice Evans-Victor Justice-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Victor Justice Evans,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Victor Justice Evans-Victor Justice-null, X1-subj-X2,X1-obj-X3,X4-has_name-Victor Justice Evans,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Victor Justice Evans, Victor Justice, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Victor Justice Evans, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Victor Justice Evans, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Victor Justice Evans"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Delaware, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/delawareohiounitedstates"",     ""snameArtist3"": ""Victor Justice Evans"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1470""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1470"",""label"":""Victor Justice Evans"",""placeLabel"":""Delaware, Ohio, United States""}]","true"
"Which is the birth place of Pat Steir?"," X1-be-is-null,X2-which-Which-null,X4-Pat Steir-Pat-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Pat Steir,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Pat Steir-Pat-null, X1-subj-X2,X1-obj-X3,X4-has_name-Pat Steir,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Pat Steir, Pat, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Pat Steir, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Pat Steir, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Pat Steir"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Newark, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newarknewjerseyunitedstates"",     ""snameArtist3"": ""Pat Steir"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4622""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4622"",""label"":""Pat Steir"",""placeLabel"":""Newark, New Jersey, United States""}]","true"
"Which is the birth place of Adriaen Brouwer?"," X1-be-is-null,X2-which-Which-null,X4-Adriaen Brouwer-Adriaen-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Adriaen Brouwer,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Adriaen Brouwer-Adriaen-null, X1-subj-X2,X1-obj-X3,X4-has_name-Adriaen Brouwer,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Adriaen Brouwer, Adriaen, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Adriaen Brouwer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Adriaen Brouwer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Adriaen Brouwer"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Oudenaarde, Flanders"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oudenaardeflanders"",     ""snameArtist3"": ""Adriaen Brouwer"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27474""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27474"",""label"":""Adriaen Brouwer"",""placeLabel"":""Oudenaarde, Flanders""}]","true"
"Which is the birth place of Leon Kelly?"," X1-be-is-null,X2-which-Which-null,X4-Leon Kelly-Leon-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Leon Kelly,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Leon Kelly-Leon-null, X1-subj-X2,X1-obj-X3,X4-has_name-Leon Kelly,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Leon Kelly, Leon, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Leon Kelly, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Leon Kelly, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Leon Kelly"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Perpignan, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/perpignanfrance"",     ""snameArtist3"": ""Leon Kelly"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2591""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2591"",""label"":""Leon Kelly"",""placeLabel"":""Perpignan, France""}]","true"
"Which is the birth place of Albert Gregory Hull?"," X1-be-is-null,X2-which-Which-null,X4-Albert Gregory Hull-Albert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Albert Gregory Hull,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Albert Gregory Hull-Albert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Albert Gregory Hull,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Albert Gregory Hull, Albert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Albert Gregory Hull, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Albert Gregory Hull, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Albert Gregory Hull"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Cedar Rapids, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cedarrapidsiowaunitedstates"",     ""snameArtist3"": ""Albert Gregory Hull"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2345""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2345"",""label"":""Albert Gregory Hull"",""placeLabel"":""Cedar Rapids, Iowa, United States""}]","true"
"Which is the birth place of James W. Williams?"," X1-be-is-null,X2-which-Which-null,X4-James W. Williams-James-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-James W. Williams,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-James W. Williams-James-null, X1-subj-X2,X1-obj-X3,X4-has_name-James W. Williams,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, James W. Williams, James, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, James W. Williams, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, James W. Williams, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James W\\. Williams"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/england"",     ""snameArtist3"": ""James W. Williams"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27313""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27313"",""label"":""James W. Williams"",""placeLabel"":""England""}]","true"
"Which is the birth place of Emmett Edwards?"," X1-be-is-null,X2-which-Which-null,X4-Emmett Edwards-Emmett-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Emmett Edwards,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Emmett Edwards-Emmett-null, X1-subj-X2,X1-obj-X3,X4-has_name-Emmett Edwards,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Emmett Edwards, Emmett, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Emmett Edwards, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Emmett Edwards, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Emmett Edwards"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Mount Pleasant, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/mountpleasantiowaunitedstates"",     ""snameArtist3"": ""Emmett Edwards"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1411""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1411"",""label"":""Emmett Edwards"",""placeLabel"":""Mount Pleasant, Iowa, United States""}]","true"
"Which is the birth place of E. J. Bellocq?"," X1-be-is-null,X2-which-Which-null,X4-E. J. Bellocq-E.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-E. J. Bellocq,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-E. J. Bellocq-E.-null, X1-subj-X2,X1-obj-X3,X4-has_name-E. J. Bellocq,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, E. J. Bellocq, E., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, E. J. Bellocq, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, E. J. Bellocq, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""E\\. J\\. Bellocq"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""New Orleans, Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/neworleanslouisianaunitedstates"",     ""snameArtist3"": ""E. J. Bellocq"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/28450""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/28450"",""label"":""E. J. Bellocq"",""placeLabel"":""New Orleans, Louisiana, United States""}]","true"
"Which is the birth place of Sarah Charlesworth?"," X1-be-is-null,X2-which-Which-null,X4-Sarah Charlesworth-Sarah-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Sarah Charlesworth,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Sarah Charlesworth-Sarah-null, X1-subj-X2,X1-obj-X3,X4-has_name-Sarah Charlesworth,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Sarah Charlesworth, Sarah, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Sarah Charlesworth, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Sarah Charlesworth, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Sarah Charlesworth"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""East Orange, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eastorangenewjerseyunitedstates"",     ""snameArtist3"": ""Sarah Charlesworth"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/833""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/833"",""label"":""Sarah Charlesworth"",""placeLabel"":""East Orange, New Jersey, United States""}]","true"
"Which is the birth place of Herbert Singleton?"," X1-be-is-null,X2-which-Which-null,X4-Herbert Singleton-Herbert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Herbert Singleton,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Herbert Singleton-Herbert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Herbert Singleton,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Herbert Singleton, Herbert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Herbert Singleton, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Herbert Singleton, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Herbert Singleton"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""New Orleans, Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/neworleanslouisianaunitedstates"",     ""snameArtist3"": ""Herbert Singleton"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/7431""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/7431"",""label"":""Herbert Singleton"",""placeLabel"":""New Orleans, Louisiana, United States""}]","true"
"Which is the birth place of Horace Pippin?"," X1-be-is-null,X2-which-Which-null,X4-Horace Pippin-Horace-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Horace Pippin,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Horace Pippin-Horace-null, X1-subj-X2,X1-obj-X3,X4-has_name-Horace Pippin,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Horace Pippin, Horace, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Horace Pippin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Horace Pippin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Horace Pippin"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""West Chester, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westchesterpennsylvaniaunitedstates"",     ""snameArtist3"": ""Horace Pippin"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18490""   },   {     ""snameBirthPlace4"": ""Westchester, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/westchesterpennsylvaniaunitedstates"",     ""snameArtist3"": ""Horace Pippin"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18490""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18490"",""label"":""Horace Pippin"",""placeLabel"":""West Chester, Pennsylvania, United States""},{""actor"":""http://data.americanart.si.edu/constituent/id/18490"",""label"":""Horace Pippin"",""placeLabel"":""Westchester, Pennsylvania, United States""}]","true"
"Which is the birth place of Terry Evans?"," X1-be-is-null,X2-which-Which-null,X4-Terry Evans-Terry-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Terry Evans,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Terry Evans-Terry-null, X1-subj-X2,X1-obj-X3,X4-has_name-Terry Evans,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Terry Evans, Terry, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Terry Evans, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Terry Evans, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Terry Evans"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Kansas City, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kansascitymissouriunitedstates"",     ""snameArtist3"": ""Terry Evans"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1469""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1469"",""label"":""Terry Evans"",""placeLabel"":""Kansas City, Missouri, United States""}]","true"
"Which is the birth place of Emile Gallé?"," X1-be-is-null,X2-which-Which-null,X4-Emile Gallé-Emile-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Emile Gallé,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Emile Gallé-Emile-null, X1-subj-X2,X1-obj-X3,X4-has_name-Emile Gallé,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Emile Gallé, Emile, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Emile Gallé, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Emile Gallé, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Emile Gallé"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Nancy, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nancyfrance"",     ""snameArtist3"": ""Emile Gallé"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5636""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5636"",""label"":""Emile Gallé"",""placeLabel"":""Nancy, France""}]","true"
"Which is the birth place of Ferdinand Pettrich?"," X1-be-is-null,X2-which-Which-null,X4-Ferdinand Pettrich-Ferdinand-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ferdinand Pettrich,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ferdinand Pettrich-Ferdinand-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ferdinand Pettrich,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ferdinand Pettrich, Ferdinand, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ferdinand Pettrich, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ferdinand Pettrich, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ferdinand Pettrich"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Dresden, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dresdengermany"",     ""snameArtist3"": ""Ferdinand Pettrich"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3782""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3782"",""label"":""Ferdinand Pettrich"",""placeLabel"":""Dresden, Germany""}]","true"
"Which is the birth place of James D. Butler?"," X1-be-is-null,X2-which-Which-null,X4-James D. Butler-James-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-James D. Butler,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-James D. Butler-James-null, X1-subj-X2,X1-obj-X3,X4-has_name-James D. Butler,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, James D. Butler, James, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, James D. Butler, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, James D. Butler, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James D\\. Butler"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Fort Dodge, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fortdodgeiowaunitedstates"",     ""snameArtist3"": ""James D. Butler"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/697""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/697"",""label"":""James D. Butler"",""placeLabel"":""Fort Dodge, Iowa, United States""}]","true"
"Which is the birth place of Giuseppe Cesari?"," X1-be-is-null,X2-which-Which-null,X4-Giuseppe Cesari-Giuseppe-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Giuseppe Cesari,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Giuseppe Cesari-Giuseppe-null, X1-subj-X2,X1-obj-X3,X4-has_name-Giuseppe Cesari,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Giuseppe Cesari, Giuseppe, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Giuseppe Cesari, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Giuseppe Cesari, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Giuseppe Cesari"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Arpino, Lazio, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/arpinolazioitaly"",     ""snameArtist3"": ""Giuseppe Cesari"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27244""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27244"",""label"":""Giuseppe Cesari"",""placeLabel"":""Arpino, Lazio, Italy""}]","true"
"Which is the birth place of Francis Kearny?"," X1-be-is-null,X2-which-Which-null,X4-Francis Kearny-Francis-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Francis Kearny,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Francis Kearny-Francis-null, X1-subj-X2,X1-obj-X3,X4-has_name-Francis Kearny,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Francis Kearny, Francis, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Francis Kearny, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Francis Kearny, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Francis Kearny"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Perth Amboy, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/perthamboynewjerseyunitedstates"",     ""snameArtist3"": ""Francis Kearny"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2575""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2575"",""label"":""Francis Kearny"",""placeLabel"":""Perth Amboy, New Jersey, United States""}]","true"
"Which is the birth place of Fay Chong?"," X1-be-is-null,X2-which-Which-null,X4-Fay Chong-Fay-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Fay Chong,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Fay Chong-Fay-null, X1-subj-X2,X1-obj-X3,X4-has_name-Fay Chong,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Fay Chong, Fay, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Fay Chong, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Fay Chong, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Fay Chong"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Canton, China"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cantonchina"",     ""snameArtist3"": ""Fay Chong"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/871""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/871"",""label"":""Fay Chong"",""placeLabel"":""Canton, China""}]","true"
"Which is the birth place of Duncan McCosker?"," X1-be-is-null,X2-which-Which-null,X4-Duncan McCosker-Duncan-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Duncan McCosker,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Duncan McCosker-Duncan-null, X1-subj-X2,X1-obj-X3,X4-has_name-Duncan McCosker,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Duncan McCosker, Duncan, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Duncan McCosker, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Duncan McCosker, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Duncan McCosker"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Glendale, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/glendalecaliforniaunitedstates"",     ""snameArtist3"": ""Duncan McCosker"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3211""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3211"",""label"":""Duncan McCosker"",""placeLabel"":""Glendale, California, United States""}]","true"
"Which is the birth place of Paul Laessle?"," X1-be-is-null,X2-which-Which-null,X4-Paul Laessle-Paul-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Paul Laessle,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Paul Laessle-Paul-null, X1-subj-X2,X1-obj-X3,X4-has_name-Paul Laessle,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Paul Laessle, Paul, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Paul Laessle, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Paul Laessle, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Paul Laessle"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Germantown, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/germantownpennsylvaniaunitedstates"",     ""snameArtist3"": ""Paul Laessle"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2759""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2759"",""label"":""Paul Laessle"",""placeLabel"":""Germantown, Pennsylvania, United States""}]","true"
"Which is the birth place of Douglas Paul Finkel?"," X1-be-is-null,X2-which-Which-null,X4-Douglas Paul Finkel-Douglas-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Douglas Paul Finkel,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Douglas Paul Finkel-Douglas-null, X1-subj-X2,X1-obj-X3,X4-has_name-Douglas Paul Finkel,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Douglas Paul Finkel, Douglas, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Douglas Paul Finkel, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Douglas Paul Finkel, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Douglas Paul Finkel"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Manhasset, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/manhassetnewyorkunitedstates"",     ""snameArtist3"": ""Douglas Paul Finkel"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/26984""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/26984"",""label"":""Douglas Paul Finkel"",""placeLabel"":""Manhasset, New York, United States""}]","true"
"Which is the birth place of James Hamilton?"," X1-be-is-null,X2-which-Which-null,X4-James Hamilton-James-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-James Hamilton,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-James Hamilton-James-null, X1-subj-X2,X1-obj-X3,X4-has_name-James Hamilton,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, James Hamilton, James, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, James Hamilton, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, James Hamilton, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James Hamilton"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Entrien, Ireland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/entrienireland"",     ""snameArtist3"": ""James Hamilton"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2047""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2047"",""label"":""James Hamilton"",""placeLabel"":""Entrien, Ireland""}]","true"
"Which is the birth place of Randy J. Johnston?"," X1-be-is-null,X2-which-Which-null,X4-Randy J. Johnston-Randy-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Randy J. Johnston,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Randy J. Johnston-Randy-null, X1-subj-X2,X1-obj-X3,X4-has_name-Randy J. Johnston,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Randy J. Johnston, Randy, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Randy J. Johnston, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Randy J. Johnston, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Randy J\\. Johnston"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Austin, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/austintexasunitedstates"",     ""snameArtist3"": ""Randy J. Johnston"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/29768""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/29768"",""label"":""Randy J. Johnston"",""placeLabel"":""Austin, Texas, United States""}]","true"
"Which is the birth place of Barbara Hashimoto?"," X1-be-is-null,X2-which-Which-null,X4-Barbara Hashimoto-Barbara-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Barbara Hashimoto,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Barbara Hashimoto-Barbara-null, X1-subj-X2,X1-obj-X3,X4-has_name-Barbara Hashimoto,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Barbara Hashimoto, Barbara, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Barbara Hashimoto, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Barbara Hashimoto, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Barbara Hashimoto"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Newark, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newarknewjerseyunitedstates"",     ""snameArtist3"": ""Barbara Hashimoto"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27515""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27515"",""label"":""Barbara Hashimoto"",""placeLabel"":""Newark, New Jersey, United States""}]","true"
"Which is the birth place of Jody Klein?"," X1-be-is-null,X2-which-Which-null,X4-Jody Klein-Jody-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jody Klein,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jody Klein-Jody-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jody Klein,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jody Klein, Jody, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jody Klein, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jody Klein, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jody Klein"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Akron, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/akronohiounitedstates"",     ""snameArtist3"": ""Jody Klein"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2654""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2654"",""label"":""Jody Klein"",""placeLabel"":""Akron, Ohio, United States""}]","true"
"Which is the birth place of Renee Margolin?"," X1-be-is-null,X2-which-Which-null,X4-Renee Margolin-Renee-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Renee Margolin,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Renee Margolin-Renee-null, X1-subj-X2,X1-obj-X3,X4-has_name-Renee Margolin,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Renee Margolin, Renee, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Renee Margolin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Renee Margolin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Renee Margolin"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Oroville, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/orovillecaliforniaunitedstates"",     ""snameArtist3"": ""Renee Margolin"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27768""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27768"",""label"":""Renee Margolin"",""placeLabel"":""Oroville, California, United States""}]","true"
"Which is the birth place of Margaret Foley?"," X1-be-is-null,X2-which-Which-null,X4-Margaret Foley-Margaret-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Margaret Foley,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Margaret Foley-Margaret-null, X1-subj-X2,X1-obj-X3,X4-has_name-Margaret Foley,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Margaret Foley, Margaret, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Margaret Foley, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Margaret Foley, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Margaret Foley"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/unitedstates"",     ""snameArtist3"": ""Margaret Foley"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1595""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1595"",""label"":""Margaret Foley"",""placeLabel"":""United States""}]","true"
"Which is the birth place of Ray H. French?"," X1-be-is-null,X2-which-Which-null,X4-Ray H. French-Ray-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ray H. French,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ray H. French-Ray-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ray H. French,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ray H. French, Ray, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ray H. French, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ray H. French, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ray H\\. French"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Terre Haute, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/terrehauteindianaunitedstates"",     ""snameArtist3"": ""Ray H. French"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1670""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1670"",""label"":""Ray H. French"",""placeLabel"":""Terre Haute, Indiana, United States""}]","true"
"Which is the birth place of Françoise Grossen?"," X1-be-is-null,X2-which-Which-null,X4-Françoise Grossen-Françoise-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Françoise Grossen,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Françoise Grossen-Françoise-null, X1-subj-X2,X1-obj-X3,X4-has_name-Françoise Grossen,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Françoise Grossen, Françoise, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Françoise Grossen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Françoise Grossen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Françoise Grossen"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Neuchatel, Switzerland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/neuchatelswitzerland"",     ""snameArtist3"": ""Françoise Grossen"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1963""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1963"",""label"":""Françoise Grossen"",""placeLabel"":""Neuchatel, Switzerland""}]","true"
"Which is the birth place of Robert Lee Eskridge?"," X1-be-is-null,X2-which-Which-null,X4-Robert Lee Eskridge-Robert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Robert Lee Eskridge,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Robert Lee Eskridge-Robert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Robert Lee Eskridge,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Robert Lee Eskridge, Robert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Robert Lee Eskridge, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Robert Lee Eskridge, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert Lee Eskridge"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Philipsburg, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/philipsburgpennsylvaniaunitedstates"",     ""snameArtist3"": ""Robert Lee Eskridge"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1458""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1458"",""label"":""Robert Lee Eskridge"",""placeLabel"":""Philipsburg, Pennsylvania, United States""}]","true"
"Which is the birth place of Mark Rothko?"," X1-be-is-null,X2-which-Which-null,X4-Mark Rothko-Mark-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Mark Rothko,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Mark Rothko-Mark-null, X1-subj-X2,X1-obj-X3,X4-has_name-Mark Rothko,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Mark Rothko, Mark, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Mark Rothko, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Mark Rothko, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mark Rothko"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Dvinsk, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dvinskrussia"",     ""snameArtist3"": ""Mark Rothko"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4161""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4161"",""label"":""Mark Rothko"",""placeLabel"":""Dvinsk, Russia""}]","true"
"Which is the birth place of Lloyd C. Foltz?"," X1-be-is-null,X2-which-Which-null,X4-Lloyd C. Foltz-Lloyd-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Lloyd C. Foltz,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Lloyd C. Foltz-Lloyd-null, X1-subj-X2,X1-obj-X3,X4-has_name-Lloyd C. Foltz,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Lloyd C. Foltz, Lloyd, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Lloyd C. Foltz, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Lloyd C. Foltz, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lloyd C\\. Foltz"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kansasunitedstates"",     ""snameArtist3"": ""Lloyd C. Foltz"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1598""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1598"",""label"":""Lloyd C. Foltz"",""placeLabel"":""Kansas, United States""}]","true"
"Which is the birth place of Frances Higgins?"," X1-be-is-null,X2-which-Which-null,X4-Frances Higgins-Frances-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Frances Higgins,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Frances Higgins-Frances-null, X1-subj-X2,X1-obj-X3,X4-has_name-Frances Higgins,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Frances Higgins, Frances, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Frances Higgins, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Frances Higgins, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frances Higgins"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Haddock, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/haddockgeorgiaunitedstates"",     ""snameArtist3"": ""Frances Higgins"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2212""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2212"",""label"":""Frances Higgins"",""placeLabel"":""Haddock, Georgia, United States""}]","true"
"Which is the birth place of Bob Freimark?"," X1-be-is-null,X2-which-Which-null,X4-Bob Freimark-Bob-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Bob Freimark,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Bob Freimark-Bob-null, X1-subj-X2,X1-obj-X3,X4-has_name-Bob Freimark,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Bob Freimark, Bob, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Bob Freimark, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Bob Freimark, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Bob Freimark"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Doster, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dostermichiganunitedstates"",     ""snameArtist3"": ""Bob Freimark"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1684""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1684"",""label"":""Bob Freimark"",""placeLabel"":""Doster, Michigan, United States""}]","true"
"Which is the birth place of Olin Dows?"," X1-be-is-null,X2-which-Which-null,X4-Olin Dows-Olin Dows-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Olin Dows,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Olin Dows-Olin Dows-null, X1-subj-X2,X1-obj-X3,X4-has_name-Olin Dows,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Olin Dows, Olin Dows, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Olin Dows, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Olin Dows, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Olin Dows"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Irvington-on-Hudson, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/irvingtononhudsonnewyorkunitedstates"",     ""snameArtist3"": ""Olin Dows"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1333""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1333"",""label"":""Olin Dows"",""placeLabel"":""Irvington-on-Hudson, New York, United States""}]","true"
"Which is the birth place of Carlos López?"," X1-be-is-null,X2-which-Which-null,X4-Carlos López-Carlos-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Carlos López,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Carlos López-Carlos-null, X1-subj-X2,X1-obj-X3,X4-has_name-Carlos López,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Carlos López, Carlos, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Carlos López, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Carlos López, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Carlos López"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Havana, Cuba"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/havanacuba"",     ""snameArtist3"": ""Carlos López"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/7370""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/7370"",""label"":""Carlos López"",""placeLabel"":""Havana, Cuba""}]","true"
"Which is the birth place of Lilo Raymond?"," X1-be-is-null,X2-which-Which-null,X4-Lilo Raymond-Lilo-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Lilo Raymond,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Lilo Raymond-Lilo-null, X1-subj-X2,X1-obj-X3,X4-has_name-Lilo Raymond,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Lilo Raymond, Lilo, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Lilo Raymond, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Lilo Raymond, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lilo Raymond"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Frankfurt, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/frankfurtgermany"",     ""snameArtist3"": ""Lilo Raymond"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3959""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3959"",""label"":""Lilo Raymond"",""placeLabel"":""Frankfurt, Germany""}]","true"
"Which is the birth place of Margaret Hluch?"," X1-be-is-null,X2-which-Which-null,X4-Margaret Hluch-Margaret-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Margaret Hluch,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Margaret Hluch-Margaret-null, X1-subj-X2,X1-obj-X3,X4-has_name-Margaret Hluch,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Margaret Hluch, Margaret, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Margaret Hluch, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Margaret Hluch, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Margaret Hluch"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Elyria, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/elyriaohiounitedstates"",     ""snameArtist3"": ""Margaret Hluch"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27936""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27936"",""label"":""Margaret Hluch"",""placeLabel"":""Elyria, Ohio, United States""}]","true"
"Which is the birth place of Henry Colton Shumway?"," X1-be-is-null,X2-which-Which-null,X4-Henry Colton Shumway-Henry-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Henry Colton Shumway,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Henry Colton Shumway-Henry-null, X1-subj-X2,X1-obj-X3,X4-has_name-Henry Colton Shumway,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Henry Colton Shumway, Henry, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Henry Colton Shumway, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Henry Colton Shumway, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Henry Colton Shumway"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Middletown, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/middletownconnecticutunitedstates"",     ""snameArtist3"": ""Henry Colton Shumway"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4442""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4442"",""label"":""Henry Colton Shumway"",""placeLabel"":""Middletown, Connecticut, United States""}]","true"
"Which is the birth place of Yusaku Kamekura?"," X1-be-is-null,X2-which-Which-null,X4-Yusaku Kamekura-Yusaku-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Yusaku Kamekura,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Yusaku Kamekura-Yusaku-null, X1-subj-X2,X1-obj-X3,X4-has_name-Yusaku Kamekura,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Yusaku Kamekura, Yusaku, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Yusaku Kamekura, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Yusaku Kamekura, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Yusaku Kamekura"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/japan"",     ""snameArtist3"": ""Yusaku Kamekura"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2535""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2535"",""label"":""Yusaku Kamekura"",""placeLabel"":""Japan""}]","true"
"Which is the birth place of Sarah Berman?"," X1-be-is-null,X2-which-Which-null,X4-Sarah Berman-Sarah-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Sarah Berman,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Sarah Berman-Sarah-null, X1-subj-X2,X1-obj-X3,X4-has_name-Sarah Berman,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Sarah Berman, Sarah, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Sarah Berman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Sarah Berman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Sarah Berman"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/russia"",     ""snameArtist3"": ""Sarah Berman"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/372""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/372"",""label"":""Sarah Berman"",""placeLabel"":""Russia""}]","true"
"Which is the birth place of Chuck Hindes?"," X1-be-is-null,X2-which-Which-null,X4-Chuck Hindes-Chuck-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Chuck Hindes,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Chuck Hindes-Chuck-null, X1-subj-X2,X1-obj-X3,X4-has_name-Chuck Hindes,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Chuck Hindes, Chuck, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Chuck Hindes, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Chuck Hindes, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Chuck Hindes"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Muskegon, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/muskegonmichiganunitedstates"",     ""snameArtist3"": ""Chuck Hindes"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27929""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27929"",""label"":""Chuck Hindes"",""placeLabel"":""Muskegon, Michigan, United States""}]","true"
"Which is the birth place of Edwin Boyd Johnson?"," X1-be-is-null,X2-which-Which-null,X4-Edwin Boyd Johnson-Edwin-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Edwin Boyd Johnson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Edwin Boyd Johnson-Edwin-null, X1-subj-X2,X1-obj-X3,X4-has_name-Edwin Boyd Johnson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Edwin Boyd Johnson, Edwin, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Edwin Boyd Johnson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Edwin Boyd Johnson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Edwin Boyd Johnson"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Watertown, Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/watertowntennesseeunitedstates"",     ""snameArtist3"": ""Edwin Boyd Johnson"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2474""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2474"",""label"":""Edwin Boyd Johnson"",""placeLabel"":""Watertown, Tennessee, United States""}]","true"
"Which is the birth place of Tony Carretta?"," X1-be-is-null,X2-which-Which-null,X4-Tony Carretta-Tony-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Tony Carretta,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Tony Carretta-Tony-null, X1-subj-X2,X1-obj-X3,X4-has_name-Tony Carretta,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Tony Carretta, Tony, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Tony Carretta, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Tony Carretta, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Tony Carretta"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Stamford, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stamfordconnecticutunitedstates"",     ""snameArtist3"": ""Tony Carretta"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27827""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27827"",""label"":""Tony Carretta"",""placeLabel"":""Stamford, Connecticut, United States""}]","true"
"Which is the birth place of Elaine de Kooning?"," X1-be-is-null,X2-which-Which-null,X4-Elaine de Kooning-Elaine-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Elaine de Kooning,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Elaine de Kooning-Elaine-null, X1-subj-X2,X1-obj-X3,X4-has_name-Elaine de Kooning,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Elaine de Kooning, Elaine, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Elaine de Kooning, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Elaine de Kooning, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Elaine de Kooning"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""New York, New York"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newyorknewyork"",     ""snameArtist3"": ""Elaine de Kooning"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/28289""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/28289"",""label"":""Elaine de Kooning"",""placeLabel"":""New York, New York""}]","true"
"Which is the birth place of Todd Walker?"," X1-be-is-null,X2-which-Which-null,X4-Todd Walker-Todd-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Todd Walker,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Todd Walker-Todd-null, X1-subj-X2,X1-obj-X3,X4-has_name-Todd Walker,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Todd Walker, Todd, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Todd Walker, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Todd Walker, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Todd Walker"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Salt Lake City, Utah, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/saltlakecityutahunitedstates"",     ""snameArtist3"": ""Todd Walker"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5211""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5211"",""label"":""Todd Walker"",""placeLabel"":""Salt Lake City, Utah, United States""}]","true"
"Which is the birth place of Chuck Ramirez?"," X1-be-is-null,X2-which-Which-null,X4-Chuck Ramirez-Chuck-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Chuck Ramirez,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Chuck Ramirez-Chuck-null, X1-subj-X2,X1-obj-X3,X4-has_name-Chuck Ramirez,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Chuck Ramirez, Chuck, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Chuck Ramirez, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Chuck Ramirez, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Chuck Ramirez"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""San Antonio, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sanantoniotexasunitedstates"",     ""snameArtist3"": ""Chuck Ramirez"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/30267""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/30267"",""label"":""Chuck Ramirez"",""placeLabel"":""San Antonio, Texas, United States""}]","true"
"Which is the birth place of Merry Moor Winnett?"," X1-be-is-null,X2-which-Which-null,X4-merry Moor Winnett-Merry-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-merry Moor Winnett,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-merry Moor Winnett-Merry-null, X1-subj-X2,X1-obj-X3,X4-has_name-merry Moor Winnett,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, merry Moor Winnett, Merry, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, merry Moor Winnett, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, merry Moor Winnett, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""merry Moor Winnett"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Newport News, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newportnewsvirginiaunitedstates"",     ""snameArtist3"": ""Merry Moor Winnett"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/7066""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/7066"",""label"":""Merry Moor Winnett"",""placeLabel"":""Newport News, Virginia, United States""}]","true"
"Which is the birth place of Ruth Starr Rose?"," X1-be-is-null,X2-which-Which-null,X4-Ruth Starr Rose-Ruth-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ruth Starr Rose,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ruth Starr Rose-Ruth-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ruth Starr Rose,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ruth Starr Rose, Ruth, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ruth Starr Rose, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ruth Starr Rose, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ruth Starr Rose"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Eau Claire, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eauclairewisconsinunitedstates"",     ""snameArtist3"": ""Ruth Starr Rose"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/29645""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/29645"",""label"":""Ruth Starr Rose"",""placeLabel"":""Eau Claire, Wisconsin, United States""}]","true"
"Which is the birth place of Ethelyn Cosby Stewart?"," X1-be-is-null,X2-which-Which-null,X4-Ethelyn Cosby Stewart-Ethelyn-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ethelyn Cosby Stewart,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ethelyn Cosby Stewart-Ethelyn-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ethelyn Cosby Stewart,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ethelyn Cosby Stewart, Ethelyn, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ethelyn Cosby Stewart, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ethelyn Cosby Stewart, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ethelyn Cosby Stewart"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Arlington, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/arlingtonnewjerseyunitedstates"",     ""snameArtist3"": ""Ethelyn Cosby Stewart"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4650""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4650"",""label"":""Ethelyn Cosby Stewart"",""placeLabel"":""Arlington, New Jersey, United States""}]","true"
"Which is the birth place of Thomas Austen Brown?"," X1-be-is-null,X2-which-Which-null,X4-Thomas Austen Brown-Thomas-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Thomas Austen Brown,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Thomas Austen Brown-Thomas-null, X1-subj-X2,X1-obj-X3,X4-has_name-Thomas Austen Brown,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Thomas Austen Brown, Thomas, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Thomas Austen Brown, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Thomas Austen Brown, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Thomas Austen Brown"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Edinburgh, Scotland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/edinburghscotland"",     ""snameArtist3"": ""Thomas Austen Brown"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/6367""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/6367"",""label"":""Thomas Austen Brown"",""placeLabel"":""Edinburgh, Scotland""}]","true"
"Which is the birth place of Earl Pardon?"," X1-be-is-null,X2-which-Which-null,X4-Earl Pardon-Earl-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Earl Pardon,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Earl Pardon-Earl-null, X1-subj-X2,X1-obj-X3,X4-has_name-Earl Pardon,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Earl Pardon, Earl, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Earl Pardon, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Earl Pardon, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Earl Pardon"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Memphis, Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/memphistennesseeunitedstates"",     ""snameArtist3"": ""Earl Pardon"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5883""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5883"",""label"":""Earl Pardon"",""placeLabel"":""Memphis, Tennessee, United States""}]","true"
"Which is the birth place of Louis Abel Truchet?"," X1-be-is-null,X2-which-Which-null,X4-Louis Abel Truchet-Louis-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Louis Abel Truchet,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Louis Abel Truchet-Louis-null, X1-subj-X2,X1-obj-X3,X4-has_name-Louis Abel Truchet,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Louis Abel Truchet, Louis, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Louis Abel Truchet, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Louis Abel Truchet, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Louis Abel Truchet"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Versailles, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/versaillesfrance"",     ""snameArtist3"": ""Louis Abel Truchet"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4865""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4865"",""label"":""Louis Abel Truchet"",""placeLabel"":""Versailles, France""}]","true"
"Which is the birth place of Mary Shaffer?"," X1-be-is-null,X2-which-Which-null,X4-Mary Shaffer-Mary-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Mary Shaffer,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Mary Shaffer-Mary-null, X1-subj-X2,X1-obj-X3,X4-has_name-Mary Shaffer,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Mary Shaffer, Mary, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Mary Shaffer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Mary Shaffer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mary Shaffer"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Walterboro, South Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/walterborosouthcarolinaunitedstates"",     ""snameArtist3"": ""Mary Shaffer"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27394""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27394"",""label"":""Mary Shaffer"",""placeLabel"":""Walterboro, South Carolina, United States""}]","true"
"Which is the birth place of Lisette Model?"," X1-be-is-null,X2-which-Which-null,X4-Lisette Model-Lisette Model-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Lisette Model,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Lisette Model-Lisette Model-null, X1-subj-X2,X1-obj-X3,X4-has_name-Lisette Model,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Lisette Model, Lisette Model, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Lisette Model, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Lisette Model, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lisette Model"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Vienna, Austria"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/viennaaustria"",     ""snameArtist3"": ""Lisette Model"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3366""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3366"",""label"":""Lisette Model"",""placeLabel"":""Vienna, Austria""}]","true"
"Which is the birth place of F. Luis Mora?"," X1-be-is-null,X2-which-Which-null,X4-F. Luis Mora-F.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-F. Luis Mora,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-F. Luis Mora-F.-null, X1-subj-X2,X1-obj-X3,X4-has_name-F. Luis Mora,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, F. Luis Mora, F., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, F. Luis Mora, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, F. Luis Mora, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""F\\. Luis Mora"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Montevideo, Uruguay"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/montevideouruguay"",     ""snameArtist3"": ""F. Luis Mora"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3398""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3398"",""label"":""F. Luis Mora"",""placeLabel"":""Montevideo, Uruguay""}]","true"
"Which is the birth place of John Grazier?"," X1-be-is-null,X2-which-Which-null,X4-John Grazier-John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John Grazier,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John Grazier-John-null, X1-subj-X2,X1-obj-X3,X4-has_name-John Grazier,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John Grazier, John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John Grazier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John Grazier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Grazier"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Long Beach, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/longbeachnewyorkunitedstates"",     ""snameArtist3"": ""John Grazier"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1920""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1920"",""label"":""John Grazier"",""placeLabel"":""Long Beach, New York, United States""}]","true"
"Which is the birth place of Thomas S. Baker?"," X1-be-is-null,X2-which-Which-null,X4-Thomas S. Baker-Thomas-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Thomas S. Baker,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Thomas S. Baker-Thomas-null, X1-subj-X2,X1-obj-X3,X4-has_name-Thomas S. Baker,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Thomas S. Baker, Thomas, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Thomas S. Baker, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Thomas S. Baker, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Thomas S\\. Baker"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Manchester, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/manchestermassachusettsunitedstates"",     ""snameArtist3"": ""Thomas S. Baker"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/213""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/213"",""label"":""Thomas S. Baker"",""placeLabel"":""Manchester, Massachusetts, United States""}]","true"
"Which is the birth place of Luigi Rist?"," X1-be-is-null,X2-which-Which-null,X4-Luigi Rist-Luigi-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Luigi Rist,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Luigi Rist-Luigi-null, X1-subj-X2,X1-obj-X3,X4-has_name-Luigi Rist,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Luigi Rist, Luigi, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Luigi Rist, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Luigi Rist, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Luigi Rist"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Newark, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newarknewjerseyunitedstates"",     ""snameArtist3"": ""Luigi Rist"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4057""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4057"",""label"":""Luigi Rist"",""placeLabel"":""Newark, New Jersey, United States""}]","true"
"Which is the birth place of Kazuko?"," X1-be-is-null,X2-which-Which-null,X4-Kazuko-Kazuko-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Kazuko,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Kazuko-Kazuko-null, X1-subj-X2,X1-obj-X3,X4-has_name-Kazuko,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Kazuko, Kazuko, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Kazuko, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Kazuko, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Kazuko"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Tokyo, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tokyojapan"",     ""snameArtist3"": ""Kazuko"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2573""   },   {     ""snameBirthPlace4"": ""Compton, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/comptoncaliforniaunitedstates"",     ""snameArtist3"": ""Kazuko Matthews"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/29866""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/29866"",""label"":""Kazuko Matthews"",""placeLabel"":""Compton, California, United States""},{""actor"":""http://data.americanart.si.edu/constituent/id/2573"",""label"":""Kazuko"",""placeLabel"":""Tokyo, Japan""}]","true"
"Which is the birth place of Christoffel Wüst?"," X1-be-is-null,X2-which-Which-null,X4-Christoffel Wüst-Christoffel-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Christoffel Wüst,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Christoffel Wüst-Christoffel-null, X1-subj-X2,X1-obj-X3,X4-has_name-Christoffel Wüst,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Christoffel Wüst, Christoffel, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Christoffel Wüst, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Christoffel Wüst, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Christoffel Wüst"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/france"",     ""snameArtist3"": ""Christoffel Wüst"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5498""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5498"",""label"":""Christoffel Wüst"",""placeLabel"":""France""}]","true"
"Which is the birth place of Paul Chabas?"," X1-be-is-null,X2-which-Which-null,X4-Paul Chabas-Paul-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Paul Chabas,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Paul Chabas-Paul-null, X1-subj-X2,X1-obj-X3,X4-has_name-Paul Chabas,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Paul Chabas, Paul, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Paul Chabas, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Paul Chabas, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Paul Chabas"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Nantes, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nantesfrance"",     ""snameArtist3"": ""Paul Chabas"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/804""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/804"",""label"":""Paul Chabas"",""placeLabel"":""Nantes, France""}]","true"
"Which is the birth place of Henry Otto Wix?"," X1-be-is-null,X2-which-Which-null,X4-Henry Otto Wix-Henry-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Henry Otto Wix,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Henry Otto Wix-Henry-null, X1-subj-X2,X1-obj-X3,X4-has_name-Henry Otto Wix,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Henry Otto Wix, Henry, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Henry Otto Wix, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Henry Otto Wix, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Henry Otto Wix"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/germany"",     ""snameArtist3"": ""Henry Otto Wix"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5456""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5456"",""label"":""Henry Otto Wix"",""placeLabel"":""Germany""}]","true"
"Which is the birth place of Alfred Sessler?"," X1-be-is-null,X2-which-Which-null,X4-Alfred Sessler-Alfred-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Alfred Sessler,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Alfred Sessler-Alfred-null, X1-subj-X2,X1-obj-X3,X4-has_name-Alfred Sessler,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Alfred Sessler, Alfred, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Alfred Sessler, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Alfred Sessler, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alfred Sessler"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Milwaukee, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/milwaukeewisconsinunitedstates"",     ""snameArtist3"": ""Alfred Sessler"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4375""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4375"",""label"":""Alfred Sessler"",""placeLabel"":""Milwaukee, Wisconsin, United States""}]","true"
"Which is the birth place of Sallie Curb Arnold?"," X1-be-is-null,X2-which-Which-null,X4-Sallie Curb Arnold-Sallie-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Sallie Curb Arnold,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Sallie Curb Arnold-Sallie-null, X1-subj-X2,X1-obj-X3,X4-has_name-Sallie Curb Arnold,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Sallie Curb Arnold, Sallie, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Sallie Curb Arnold, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Sallie Curb Arnold, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Sallie Curb Arnold"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Alabama, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/alabamaunitedstates"",     ""snameArtist3"": ""Sallie Curb Arnold"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/144""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/144"",""label"":""Sallie Curb Arnold"",""placeLabel"":""Alabama, United States""}]","true"
"Which is the birth place of Francis Scott King?"," X1-be-is-null,X2-which-Which-null,X4-Francis Scott King-Francis-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Francis Scott King,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Francis Scott King-Francis-null, X1-subj-X2,X1-obj-X3,X4-has_name-Francis Scott King,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Francis Scott King, Francis, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Francis Scott King, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Francis Scott King, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Francis Scott King"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Auburn, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/auburnmaineunitedstates"",     ""snameArtist3"": ""Francis Scott King"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2630""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2630"",""label"":""Francis Scott King"",""placeLabel"":""Auburn, Maine, United States""}]","true"
"Which is the birth place of Ben Foster?"," X1-be-is-null,X2-which-Which-null,X4-Ben Foster-Ben-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ben Foster,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ben Foster-Ben-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ben Foster,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ben Foster, Ben, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ben Foster, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ben Foster, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ben Foster"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""North Anson, Maine, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/northansonmaineunitedstates"",     ""snameArtist3"": ""Ben Foster"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1620""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1620"",""label"":""Ben Foster"",""placeLabel"":""North Anson, Maine, United States""}]","true"
"Which is the birth place of Max Bachofen?"," X1-be-is-null,X2-which-Which-null,X4-Max Bachofen-Max-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Max Bachofen,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Max Bachofen-Max-null, X1-subj-X2,X1-obj-X3,X4-has_name-Max Bachofen,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Max Bachofen, Max, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Max Bachofen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Max Bachofen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Max Bachofen"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Neubrunen, Switzerland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/neubrunenswitzerland"",     ""snameArtist3"": ""Max Bachofen"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/189""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/189"",""label"":""Max Bachofen"",""placeLabel"":""Neubrunen, Switzerland""}]","true"
"Which is the birth place of Antonio Jacobsen?"," X1-be-is-null,X2-which-Which-null,X4-Antonio Jacobsen-Antonio-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Antonio Jacobsen,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Antonio Jacobsen-Antonio-null, X1-subj-X2,X1-obj-X3,X4-has_name-Antonio Jacobsen,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Antonio Jacobsen, Antonio, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Antonio Jacobsen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Antonio Jacobsen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Antonio Jacobsen"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Copenhagen, Denmark"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/copenhagendenmark"",     ""snameArtist3"": ""Antonio Jacobsen"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2426""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2426"",""label"":""Antonio Jacobsen"",""placeLabel"":""Copenhagen, Denmark""}]","true"
"Which is the birth place of Jay S. Dunitz?"," X1-be-is-null,X2-which-Which-null,X4-Jay S. Dunitz-Jay-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jay S. Dunitz,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jay S. Dunitz-Jay-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jay S. Dunitz,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jay S. Dunitz, Jay, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jay S. Dunitz, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jay S. Dunitz, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jay S\\. Dunitz"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Reading, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/readingpennsylvaniaunitedstates"",     ""snameArtist3"": ""Jay S. Dunitz"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1355""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1355"",""label"":""Jay S. Dunitz"",""placeLabel"":""Reading, Pennsylvania, United States""}]","true"
"Which is the birth place of Alexander Kachinsky?"," X1-be-is-null,X2-which-Which-null,X4-Alexander Kachinsky-Alexander-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Alexander Kachinsky,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Alexander Kachinsky-Alexander-null, X1-subj-X2,X1-obj-X3,X4-has_name-Alexander Kachinsky,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Alexander Kachinsky, Alexander, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Alexander Kachinsky, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Alexander Kachinsky, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alexander Kachinsky"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Kharkov, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kharkovrussia"",     ""snameArtist3"": ""Alexander Kachinsky"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2522""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2522"",""label"":""Alexander Kachinsky"",""placeLabel"":""Kharkov, Russia""}]","true"
"Which is the birth place of Régis François Gignoux?"," X1-be-is-null,X2-which-Which-null,X4-Régis François Gignoux-Régis-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Régis François Gignoux,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Régis François Gignoux-Régis-null, X1-subj-X2,X1-obj-X3,X4-has_name-Régis François Gignoux,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Régis François Gignoux, Régis, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Régis François Gignoux, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Régis François Gignoux, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Régis François Gignoux"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Lyons, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lyonsfrance"",     ""snameArtist3"": ""Régis François Gignoux"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/28441""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/28441"",""label"":""Régis François Gignoux"",""placeLabel"":""Lyons, France""}]","true"
"Which is the birth place of David W. Humphrey?"," X1-be-is-null,X2-which-Which-null,X4-David W. Humphrey-David-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-David W. Humphrey,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-David W. Humphrey-David-null, X1-subj-X2,X1-obj-X3,X4-has_name-David W. Humphrey,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, David W. Humphrey, David, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, David W. Humphrey, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, David W. Humphrey, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David W\\. Humphrey"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Elkhorn, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/elkhornwisconsinunitedstates"",     ""snameArtist3"": ""David W. Humphrey"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2351""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2351"",""label"":""David W. Humphrey"",""placeLabel"":""Elkhorn, Wisconsin, United States""}]","true"
"Which is the birth place of Morris Henry Hobbs?"," X1-be-is-null,X2-which-Which-null,X4-Morris Henry Hobbs-Morris-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Morris Henry Hobbs,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Morris Henry Hobbs-Morris-null, X1-subj-X2,X1-obj-X3,X4-has_name-Morris Henry Hobbs,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Morris Henry Hobbs, Morris, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Morris Henry Hobbs, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Morris Henry Hobbs, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Morris Henry Hobbs"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Rockford, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rockfordillinoisunitedstates"",     ""snameArtist3"": ""Morris Henry Hobbs"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2253""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2253"",""label"":""Morris Henry Hobbs"",""placeLabel"":""Rockford, Illinois, United States""}]","true"
"Which is the birth place of George Rickey?"," X1-be-is-null,X2-which-Which-null,X4-George Rickey-George-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-George Rickey,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-George Rickey-George-null, X1-subj-X2,X1-obj-X3,X4-has_name-George Rickey,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, George Rickey, George, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, George Rickey, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, George Rickey, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""George Rickey"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""South Bend, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/southbendindianaunitedstates"",     ""snameArtist3"": ""George Rickey"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4045""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4045"",""label"":""George Rickey"",""placeLabel"":""South Bend, Indiana, United States""}]","true"
"Which is the birth place of Paul Heald?"," X1-be-is-null,X2-which-Which-null,X4-Paul Heald-Paul-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Paul Heald,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Paul Heald-Paul-null, X1-subj-X2,X1-obj-X3,X4-has_name-Paul Heald,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Paul Heald, Paul, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Paul Heald, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Paul Heald, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Paul Heald"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Port Huron, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/porthuronmichiganunitedstates"",     ""snameArtist3"": ""Paul Heald"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2138""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2138"",""label"":""Paul Heald"",""placeLabel"":""Port Huron, Michigan, United States""}]","true"
"Which is the birth place of George Fuller?"," X1-be-is-null,X2-which-Which-null,X4-George Fuller-George-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-George Fuller,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-George Fuller-George-null, X1-subj-X2,X1-obj-X3,X4-has_name-George Fuller,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, George Fuller, George, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, George Fuller, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, George Fuller, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""George Fuller"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Deerfield, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/deerfieldmassachusettsunitedstates"",     ""snameArtist3"": ""George Fuller"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1698""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1698"",""label"":""George Fuller"",""placeLabel"":""Deerfield, Massachusetts, United States""}]","true"
"Which is the birth place of William Eggleston?"," X1-be-is-null,X2-which-Which-null,X4-William Eggleston-William-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-William Eggleston,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-William Eggleston-William-null, X1-subj-X2,X1-obj-X3,X4-has_name-William Eggleston,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, William Eggleston, William, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, William Eggleston, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, William Eggleston, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William Eggleston"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Memphis, Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/memphistennesseeunitedstates"",     ""snameArtist3"": ""William Eggleston"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1420""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1420"",""label"":""William Eggleston"",""placeLabel"":""Memphis, Tennessee, United States""}]","true"
"Which is the birth place of Félix López?"," X1-be-is-null,X2-which-Which-null,X4-Félix López-Félix-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Félix López,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Félix López-Félix-null, X1-subj-X2,X1-obj-X3,X4-has_name-Félix López,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Félix López, Félix, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Félix López, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Félix López, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Félix López"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Gilman, Colorado, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gilmancoloradounitedstates"",     ""snameArtist3"": ""Félix López"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18393""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18393"",""label"":""Félix López"",""placeLabel"":""Gilman, Colorado, United States""}]","true"
"Which is the birth place of Walter Ingalls?"," X1-be-is-null,X2-which-Which-null,X4-Walter Ingall-Walter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Walter Ingall,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Walter Ingall-Walter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Walter Ingall,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Walter Ingall, Walter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Walter Ingall, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Walter Ingall, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Walter Ingall"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Canterbury, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/canterburynewhampshireunitedstates"",     ""snameArtist3"": ""Walter Ingalls"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2387""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2387"",""label"":""Walter Ingalls"",""placeLabel"":""Canterbury, New Hampshire, United States""}]","true"
"Which is the birth place of Leonard Maurer?"," X1-be-is-null,X2-which-Which-null,X4-Leonard Maurer-Leonard-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Leonard Maurer,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Leonard Maurer-Leonard-null, X1-subj-X2,X1-obj-X3,X4-has_name-Leonard Maurer,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Leonard Maurer, Leonard, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Leonard Maurer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Leonard Maurer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Leonard Maurer"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Newark, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newarknewjerseyunitedstates"",     ""snameArtist3"": ""Leonard Maurer"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3176""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3176"",""label"":""Leonard Maurer"",""placeLabel"":""Newark, New Jersey, United States""}]","true"
"Which is the birth place of Mary Douglas?"," X1-be-is-null,X2-which-Which-null,X4-Mary Douglas-Mary-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Mary Douglas,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Mary Douglas-Mary-null, X1-subj-X2,X1-obj-X3,X4-has_name-Mary Douglas,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Mary Douglas, Mary, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Mary Douglas, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Mary Douglas, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mary Douglas"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Taylorsville, North Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/taylorsvillenorthcarolinaunitedstates"",     ""snameArtist3"": ""Mary Douglas"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18323""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18323"",""label"":""Mary Douglas"",""placeLabel"":""Taylorsville, North Carolina, United States""}]","true"
"Which is the birth place of Lydia Field Emmet?","","NO DRS","null","null","null","null"
"Which is the birth place of Romuald Kraus?"," X1-be-is-null,X2-which-Which-null,X4-Romuald Kraus-Romuald-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Romuald Kraus,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Romuald Kraus-Romuald-null, X1-subj-X2,X1-obj-X3,X4-has_name-Romuald Kraus,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Romuald Kraus, Romuald, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Romuald Kraus, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Romuald Kraus, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Romuald Kraus"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Itzkany, Austria-Hungary"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/itzkanyaustriahungary"",     ""snameArtist3"": ""Romuald Kraus"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2715""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2715"",""label"":""Romuald Kraus"",""placeLabel"":""Itzkany, Austria-Hungary""}]","true"
"Which is the birth place of Morton Kaish?"," X1-be-is-null,X2-which-Which-null,X4-Morton Kaish-Morton-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Morton Kaish,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Morton Kaish-Morton-null, X1-subj-X2,X1-obj-X3,X4-has_name-Morton Kaish,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Morton Kaish, Morton, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Morton Kaish, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Morton Kaish, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Morton Kaish"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Newark, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newarknewjerseyunitedstates"",     ""snameArtist3"": ""Morton Kaish"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2533""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2533"",""label"":""Morton Kaish"",""placeLabel"":""Newark, New Jersey, United States""}]","true"
"Which is the birth place of Tom Green?"," X1-be-is-null,X2-which-Which-null,X4-Tom Green-Tom-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Tom Green,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Tom Green-Tom-null, X1-subj-X2,X1-obj-X3,X4-has_name-Tom Green,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Tom Green, Tom, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Tom Green, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Tom Green, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Tom Green"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Newark, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newarknewjerseyunitedstates"",     ""snameArtist3"": ""Tom Green"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5790""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5790"",""label"":""Tom Green"",""placeLabel"":""Newark, New Jersey, United States""}]","true"
"Which is the birth place of Gustave Baumann?"," X1-be-is-null,X2-which-Which-null,X4-Gustave Baumann-Gustave-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Gustave Baumann,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Gustave Baumann-Gustave-null, X1-subj-X2,X1-obj-X3,X4-has_name-Gustave Baumann,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Gustave Baumann, Gustave, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Gustave Baumann, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Gustave Baumann, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Gustave Baumann"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Magdeburg, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/magdeburggermany"",     ""snameArtist3"": ""Gustave Baumann"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/282""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/282"",""label"":""Gustave Baumann"",""placeLabel"":""Magdeburg, Germany""}]","true"
"Which is the birth place of Joseph Binder?"," X1-be-is-null,X2-which-Which-null,X4-Joseph Binder-Joseph-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Joseph Binder,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Joseph Binder-Joseph-null, X1-subj-X2,X1-obj-X3,X4-has_name-Joseph Binder,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Joseph Binder, Joseph, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Joseph Binder, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Joseph Binder, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Joseph Binder"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Vienna, Austria"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/viennaaustria"",     ""snameArtist3"": ""Joseph Binder"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/418""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/418"",""label"":""Joseph Binder"",""placeLabel"":""Vienna, Austria""}]","true"
"Which is the birth place of Jennifer McCurdy?"," X1-be-is-null,X2-which-Which-null,X4-Jennifer McCurdy-Jennifer-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jennifer McCurdy,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jennifer McCurdy-Jennifer-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jennifer McCurdy,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jennifer McCurdy, Jennifer, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jennifer McCurdy, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jennifer McCurdy, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jennifer McCurdy"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Newport, Rhode Island, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newportrhodeislandunitedstates"",     ""snameArtist3"": ""Jennifer McCurdy"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/28973""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/28973"",""label"":""Jennifer McCurdy"",""placeLabel"":""Newport, Rhode Island, United States""}]","true"
"Which is the birth place of Betty Scarpino?"," X1-be-is-null,X2-which-Which-null,X4-Betty Scarpino-Betty-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Betty Scarpino,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Betty Scarpino-Betty-null, X1-subj-X2,X1-obj-X3,X4-has_name-Betty Scarpino,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Betty Scarpino, Betty, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Betty Scarpino, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Betty Scarpino, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Betty Scarpino"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Wenatchee, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wenatcheewashingtonunitedstates"",     ""snameArtist3"": ""Betty Scarpino"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27229""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27229"",""label"":""Betty Scarpino"",""placeLabel"":""Wenatchee, Washington, United States""}]","true"
"Which is the birth place of Richard Landis?"," X1-be-is-null,X2-which-Which-null,X4-Richard Landis-Richard-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Richard Landis,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Richard Landis-Richard-null, X1-subj-X2,X1-obj-X3,X4-has_name-Richard Landis,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Richard Landis, Richard, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Richard Landis, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Richard Landis, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Richard Landis"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Long Beach, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/longbeachcaliforniaunitedstates"",     ""snameArtist3"": ""Richard Landis"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18402""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18402"",""label"":""Richard Landis"",""placeLabel"":""Long Beach, California, United States""}]","true"
"Which is the birth place of Torin Richards?"," X1-be-is-null,X2-which-Which-null,X4-Torin Richards-Torin-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Torin Richards,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Torin Richards-Torin-null, X1-subj-X2,X1-obj-X3,X4-has_name-Torin Richards,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Torin Richards, Torin, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Torin Richards, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Torin Richards, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Torin Richards"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Ames, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/amesiowaunitedstates"",     ""snameArtist3"": ""Torin Richards"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18193""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18193"",""label"":""Torin Richards"",""placeLabel"":""Ames, Iowa, United States""}]","true"
"Which is the birth place of Ernst Halberstadt?"," X1-be-is-null,X2-which-Which-null,X4-Ernst Halberstadt-Ernst-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ernst Halberstadt,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ernst Halberstadt-Ernst-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ernst Halberstadt,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ernst Halberstadt, Ernst, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ernst Halberstadt, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ernst Halberstadt, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ernst Halberstadt"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Budingen, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/budingengermany"",     ""snameArtist3"": ""Ernst Halberstadt"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2021""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2021"",""label"":""Ernst Halberstadt"",""placeLabel"":""Budingen, Germany""}]","true"
"Which is the birth place of Frank French?"," X1-be-is-null,X2-which-Which-null,X4-Frank French-Frank-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Frank French,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Frank French-Frank-null, X1-subj-X2,X1-obj-X3,X4-has_name-Frank French,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Frank French, Frank, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Frank French, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Frank French, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frank French"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Loudon, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/loudonnewhampshireunitedstates"",     ""snameArtist3"": ""Frank French"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1668""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1668"",""label"":""Frank French"",""placeLabel"":""Loudon, New Hampshire, United States""}]","true"
"Which is the birth place of James Holmes?"," X1-be-is-null,X2-which-Which-null,X4-James Holmes-James-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-James Holmes,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-James Holmes-James-null, X1-subj-X2,X1-obj-X3,X4-has_name-James Holmes,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, James Holmes, James, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, James Holmes, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, James Holmes, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James Holmes"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Frostburg, Maryland, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/frostburgmarylandunitedstates"",     ""snameArtist3"": ""James Holmes"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27774""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27774"",""label"":""James Holmes"",""placeLabel"":""Frostburg, Maryland, United States""}]","true"
"Which is the birth place of Bernard Leach?"," X1-be-is-null,X2-which-Which-null,X4-Bernard Leach-Bernard-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Bernard Leach,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Bernard Leach-Bernard-null, X1-subj-X2,X1-obj-X3,X4-has_name-Bernard Leach,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Bernard Leach, Bernard, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Bernard Leach, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Bernard Leach, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Bernard Leach"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Hong Kong, China"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hongkongchina"",     ""snameArtist3"": ""Bernard Leach"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2844""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2844"",""label"":""Bernard Leach"",""placeLabel"":""Hong Kong, China""}]","true"
"Which is the birth place of Oyvind Fahlstrom?"," X1-be-is-null,X2-which-Which-null,X4-Oyvind Fahlstrom-Oyvind-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Oyvind Fahlstrom,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Oyvind Fahlstrom-Oyvind-null, X1-subj-X2,X1-obj-X3,X4-has_name-Oyvind Fahlstrom,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Oyvind Fahlstrom, Oyvind, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Oyvind Fahlstrom, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Oyvind Fahlstrom, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Oyvind Fahlstrom"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Sao Paulo, Brazil"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/saopaulobrazil"",     ""snameArtist3"": ""Oyvind Fahlstrom"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1482""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1482"",""label"":""Oyvind Fahlstrom"",""placeLabel"":""Sao Paulo, Brazil""}]","true"
"Which is the birth place of Eugene C. Fitsch?"," X1-be-is-null,X2-which-Which-null,X4-Eugene C. Fitsch-Eugene-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Eugene C. Fitsch,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Eugene C. Fitsch-Eugene-null, X1-subj-X2,X1-obj-X3,X4-has_name-Eugene C. Fitsch,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Eugene C. Fitsch, Eugene, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Eugene C. Fitsch, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Eugene C. Fitsch, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Eugene C\\. Fitsch"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Alsace, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/alsacefrance"",     ""snameArtist3"": ""Eugene C. Fitsch"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1560""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1560"",""label"":""Eugene C. Fitsch"",""placeLabel"":""Alsace, France""}]","true"
"Which is the birth place of Mary Roehm?"," X1-be-is-null,X2-which-Which-null,X4-Mary Roehm-Mary-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Mary Roehm,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Mary Roehm-Mary-null, X1-subj-X2,X1-obj-X3,X4-has_name-Mary Roehm,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Mary Roehm, Mary, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Mary Roehm, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Mary Roehm, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mary Roehm"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Endwell, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/endwellnewyorkunitedstates"",     ""snameArtist3"": ""Mary Roehm"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/17965""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/17965"",""label"":""Mary Roehm"",""placeLabel"":""Endwell, New York, United States""}]","true"
"Which is the birth place of Mary Carroll?"," X1-be-is-null,X2-which-Which-null,X4-Mary Carroll-Mary-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Mary Carroll,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Mary Carroll-Mary-null, X1-subj-X2,X1-obj-X3,X4-has_name-Mary Carroll,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Mary Carroll, Mary, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Mary Carroll, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Mary Carroll, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mary Carroll"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Sioux City, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/siouxcityiowaunitedstates"",     ""snameArtist3"": ""Mary Carroll"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/17971""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/17971"",""label"":""Mary Carroll"",""placeLabel"":""Sioux City, Iowa, United States""}]","true"
"Which is the birth place of Pierre Troubetzkoy?"," X1-be-is-null,X2-which-Which-null,X4-Pierre Troubetzkoy-Pierre-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Pierre Troubetzkoy,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Pierre Troubetzkoy-Pierre-null, X1-subj-X2,X1-obj-X3,X4-has_name-Pierre Troubetzkoy,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Pierre Troubetzkoy, Pierre, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Pierre Troubetzkoy, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Pierre Troubetzkoy, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Pierre Troubetzkoy"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Milan, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/milanitaly"",     ""snameArtist3"": ""Pierre Troubetzkoy"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4861""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4861"",""label"":""Pierre Troubetzkoy"",""placeLabel"":""Milan, Italy""}]","true"
"Which is the birth place of K. Lee Manuel?"," X1-be-is-null,X2-which-Which-null,X4-K. Lee Manuel-K.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-K. Lee Manuel,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-K. Lee Manuel-K.-null, X1-subj-X2,X1-obj-X3,X4-has_name-K. Lee Manuel,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, K. Lee Manuel, K., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, K. Lee Manuel, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, K. Lee Manuel, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""K\\. Lee Manuel"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Loma Linda, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lomalindacaliforniaunitedstates"",     ""snameArtist3"": ""K. Lee Manuel"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27150""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27150"",""label"":""K. Lee Manuel"",""placeLabel"":""Loma Linda, California, United States""}]","true"
"Which is the birth place of Théo Kerg?"," X1-be-is-null,X2-which-Which-null,X4-Théo Kerg-Théo-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Théo Kerg,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Théo Kerg-Théo-null, X1-subj-X2,X1-obj-X3,X4-has_name-Théo Kerg,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Théo Kerg, Théo, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Théo Kerg, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Théo Kerg, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Théo Kerg"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Niedercorn, Luxembourg"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/niedercornluxembourg"",     ""snameArtist3"": ""Théo Kerg"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2606""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2606"",""label"":""Théo Kerg"",""placeLabel"":""Niedercorn, Luxembourg""}]","true"
"Which is the birth place of J. Paul Fennell?"," X1-be-is-null,X2-which-Which-null,X4-J. Paul Fennell-J.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-J. Paul Fennell,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-J. Paul Fennell-J.-null, X1-subj-X2,X1-obj-X3,X4-has_name-J. Paul Fennell,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, J. Paul Fennell, J., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, J. Paul Fennell, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, J. Paul Fennell, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""J\\. Paul Fennell"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Beverly, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/beverlymassachusettsunitedstates"",     ""snameArtist3"": ""J. Paul Fennell"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/7049""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/7049"",""label"":""J. Paul Fennell"",""placeLabel"":""Beverly, Massachusetts, United States""}]","true"
"Which is the birth place of Mattie Lou O'Kelley?"," X1-be-is-null,X2-which-Which-null,X4-Mattie Lou O'Kelley-Mattie-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Mattie Lou O'Kelley,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Mattie Lou O'Kelley-Mattie-null, X1-subj-X2,X1-obj-X3,X4-has_name-Mattie Lou O'Kelley,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Mattie Lou O'Kelley, Mattie, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Mattie Lou O'Kelley, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Mattie Lou O'Kelley, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mattie Lou O\\'Kelley"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Maysville, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/maysvillegeorgiaunitedstates"",     ""snameArtist3"": ""Mattie Lou O'Kelley"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18274""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18274"",""label"":""Mattie Lou O'Kelley"",""placeLabel"":""Maysville, Georgia, United States""}]","true"
"Which is the birth place of Henner Schröder?"," X1-be-is-null,X2-which-Which-null,X4-Henner Schröder-Henner-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Henner Schröder,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Henner Schröder-Henner-null, X1-subj-X2,X1-obj-X3,X4-has_name-Henner Schröder,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Henner Schröder, Henner, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Henner Schröder, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Henner Schröder, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Henner Schröder"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Gottingen, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/gottingengermany"",     ""snameArtist3"": ""Henner Schröder"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18612""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18612"",""label"":""Henner Schröder"",""placeLabel"":""Gottingen, Germany""}]","true"
"Which is the birth place of Helen West Heller?"," X1-be-is-null,X2-which-Which-null,X4-Helen West Heller-Helen-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Helen West Heller,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Helen West Heller-Helen-null, X1-subj-X2,X1-obj-X3,X4-has_name-Helen West Heller,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Helen West Heller, Helen, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Helen West Heller, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Helen West Heller, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Helen West Heller"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Rushville, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/rushvilleillinoisunitedstates"",     ""snameArtist3"": ""Helen West Heller"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2162""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2162"",""label"":""Helen West Heller"",""placeLabel"":""Rushville, Illinois, United States""}]","true"
"Which is the birth place of Genichiro Inokuma?"," X1-be-is-null,X2-which-Which-null,X4-Genichiro Inokuma-Genichiro-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Genichiro Inokuma,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Genichiro Inokuma-Genichiro-null, X1-subj-X2,X1-obj-X3,X4-has_name-Genichiro Inokuma,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Genichiro Inokuma, Genichiro, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Genichiro Inokuma, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Genichiro Inokuma, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Genichiro Inokuma"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Takamatsu, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/takamatsujapan"",     ""snameArtist3"": ""Genichiro Inokuma"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2393""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2393"",""label"":""Genichiro Inokuma"",""placeLabel"":""Takamatsu, Japan""}]","true"
"Which is the birth place of Léo Laporte Blairsy?"," X1-be-is-null,X2-which-Which-null,X4-Léo Laporte Blairsy-Léo-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Léo Laporte Blairsy,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Léo Laporte Blairsy-Léo-null, X1-subj-X2,X1-obj-X3,X4-has_name-Léo Laporte Blairsy,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Léo Laporte Blairsy, Léo, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Léo Laporte Blairsy, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Léo Laporte Blairsy, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Léo Laporte Blairsy"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Toulouse, Haute-Garonne, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/toulousehautegaronnefrance"",     ""snameArtist3"": ""Léo Laporte Blairsy"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2798""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2798"",""label"":""Léo Laporte Blairsy"",""placeLabel"":""Toulouse, Haute-Garonne, France""}]","true"
"Which is the birth place of Giacomo Palma, the younger?"," X1-be-is-null,X2-which-Which-null,X5-young-younger-the,X4-Giacomo Palma-Giacomo-null,X3-birth place-birth place-the, X1-subj-X2,X4-rel-X5,X4-has_name-Giacomo Palma,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X5-young-younger-the,X4-Giacomo Palma-Giacomo-null, X1-subj-X2,X1-obj-X3,X4-rel-X5,X4-has_name-Giacomo Palma,X1-obl_of-X4,","NO CORRECT DRS","null","null","null","null"
"Which is the birth place of Mary Van Cline?"," X1-be-is-null,X2-which-Which-null,X4-Mary Van Cline-Mary-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Mary Van Cline,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Mary Van Cline-Mary-null, X1-subj-X2,X1-obj-X3,X4-has_name-Mary Van Cline,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Mary Van Cline, Mary, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Mary Van Cline, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Mary Van Cline, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mary Van Cline"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Dallas, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dallastexasunitedstates"",     ""snameArtist3"": ""Mary Van Cline"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18547""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18547"",""label"":""Mary Van Cline"",""placeLabel"":""Dallas, Texas, United States""}]","true"
"Which is the birth place of Thomas Hewes Hinckley?"," X1-be-is-null,X2-which-Which-null,X4-Thomas Hewes Hinckley-Thomas-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Thomas Hewes Hinckley,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Thomas Hewes Hinckley-Thomas-null, X1-subj-X2,X1-obj-X3,X4-has_name-Thomas Hewes Hinckley,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Thomas Hewes Hinckley, Thomas, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Thomas Hewes Hinckley, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Thomas Hewes Hinckley, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Thomas Hewes Hinckley"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Milton, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/miltonmassachusettsunitedstates"",     ""snameArtist3"": ""Thomas Hewes Hinckley"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2230""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2230"",""label"":""Thomas Hewes Hinckley"",""placeLabel"":""Milton, Massachusetts, United States""}]","true"
"Which is the birth place of Virginia R. Harris?"," X1-be-is-null,X2-which-Which-null,X4-Virginia R. Harris-Virginia-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Virginia R. Harris,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Virginia R. Harris-Virginia-null, X1-subj-X2,X1-obj-X3,X4-has_name-Virginia R. Harris,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Virginia R. Harris, Virginia, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Virginia R. Harris, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Virginia R. Harris, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Virginia R\\. Harris"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Macon, Georgia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/macongeorgiaunitedstates"",     ""snameArtist3"": ""Virginia R. Harris"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27821""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27821"",""label"":""Virginia R. Harris"",""placeLabel"":""Macon, Georgia, United States""}]","true"
"Which is the birth place of Edward Kienholz?"," X1-be-is-null,X2-which-Which-null,X4-Edward Kienholz-Edward-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Edward Kienholz,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Edward Kienholz-Edward-null, X1-subj-X2,X1-obj-X3,X4-has_name-Edward Kienholz,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Edward Kienholz, Edward, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Edward Kienholz, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Edward Kienholz, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Edward Kienholz"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Fairfield, Washington, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fairfieldwashingtonunitedstates"",     ""snameArtist3"": ""Edward Kienholz"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2619""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2619"",""label"":""Edward Kienholz"",""placeLabel"":""Fairfield, Washington, United States""}]","true"
"Which is the birth place of Walter Ufer?"," X1-be-is-null,X2-which-Which-null,X4-Walter Ufer-Walter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Walter Ufer,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Walter Ufer-Walter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Walter Ufer,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Walter Ufer, Walter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Walter Ufer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Walter Ufer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Walter Ufer"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Louisville, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/louisvillekentuckyunitedstates"",     ""snameArtist3"": ""Walter Ufer"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4912""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4912"",""label"":""Walter Ufer"",""placeLabel"":""Louisville, Kentucky, United States""}]","true"
"Which is the birth place of Hans Jelinek?"," X1-be-is-null,X2-which-Which-null,X4-Hans Jelinek-Hans-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Hans Jelinek,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Hans Jelinek-Hans-null, X1-subj-X2,X1-obj-X3,X4-has_name-Hans Jelinek,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Hans Jelinek, Hans, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Hans Jelinek, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Hans Jelinek, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Hans Jelinek"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Vienna, Austria"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/viennaaustria"",     ""snameArtist3"": ""Hans Jelinek"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2448""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2448"",""label"":""Hans Jelinek"",""placeLabel"":""Vienna, Austria""}]","true"
"Which is the birth place of Walter Beck?"," X1-be-is-null,X2-which-Which-null,X4-Walter Beck-Walter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Walter Beck,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Walter Beck-Walter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Walter Beck,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Walter Beck, Walter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Walter Beck, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Walter Beck, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Walter Beck"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Dayton, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/daytonohiounitedstates"",     ""snameArtist3"": ""Walter Beck"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/305""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/305"",""label"":""Walter Beck"",""placeLabel"":""Dayton, Ohio, United States""}]","true"
"Which is the birth place of Melissa Mayer Galbraith?"," X1-be-is-null,X2-which-Which-null,X4-Melissa Mayer Galbraith-Melissa-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Melissa Mayer Galbraith,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Melissa Mayer Galbraith-Melissa-null, X1-subj-X2,X1-obj-X3,X4-has_name-Melissa Mayer Galbraith,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Melissa Mayer Galbraith, Melissa, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Melissa Mayer Galbraith, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Melissa Mayer Galbraith, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Melissa Mayer Galbraith"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Neuilly-sur-Seine, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/neuillysurseinefrance"",     ""snameArtist3"": ""Melissa Mayer Galbraith"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/28777""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/28777"",""label"":""Melissa Mayer Galbraith"",""placeLabel"":""Neuilly-sur-Seine, France""}]","true"
"Which is the birth place of Benjamin Blythe?"," X1-be-is-null,X2-which-Which-null,X4-Benjamin Blythe-Benjamin-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Benjamin Blythe,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Benjamin Blythe-Benjamin-null, X1-subj-X2,X1-obj-X3,X4-has_name-Benjamin Blythe,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Benjamin Blythe, Benjamin, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Benjamin Blythe, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Benjamin Blythe, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Benjamin Blythe"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Salem, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/salemmassachusettsunitedstates"",     ""snameArtist3"": ""Benjamin Blythe"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/469""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/469"",""label"":""Benjamin Blythe"",""placeLabel"":""Salem, Massachusetts, United States""}]","true"
"Which is the birth place of Marc Swanson?"," X1-be-is-null,X2-which-Which-null,X4-Marc Swanson-Marc-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Marc Swanson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Marc Swanson-Marc-null, X1-subj-X2,X1-obj-X3,X4-has_name-Marc Swanson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Marc Swanson, Marc, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Marc Swanson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Marc Swanson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Marc Swanson"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""New Britain, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newbritainconnecticutunitedstates"",     ""snameArtist3"": ""Marc Swanson"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/30678""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/30678"",""label"":""Marc Swanson"",""placeLabel"":""New Britain, Connecticut, United States""}]","true"
"Which is the birth place of L.J. Roberts?"," X1-be-is-null,X2-which-Which-null,X4-L.J. Roberts-L.J.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-L.J. Roberts,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-L.J. Roberts-L.J.-null, X1-subj-X2,X1-obj-X3,X4-has_name-L.J. Roberts,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, L.J. Roberts, L.J., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, L.J. Roberts, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, L.J. Roberts, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""L\\.J\\. Roberts"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Royal Oak, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/royaloakmichiganunitedstates"",     ""snameArtist3"": ""L.J. Roberts"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/30191""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/30191"",""label"":""L.J. Roberts"",""placeLabel"":""Royal Oak, Michigan, United States""}]","true"
"Which is the birth place of Charles Merrick Capps?"," X1-be-is-null,X2-which-Which-null,X4-Charles Merrick Capps-Charles-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Charles Merrick Capps,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Charles Merrick Capps-Charles-null, X1-subj-X2,X1-obj-X3,X4-has_name-Charles Merrick Capps,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Charles Merrick Capps, Charles, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Charles Merrick Capps, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Charles Merrick Capps, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charles Merrick Capps"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Jacksonville, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jacksonvilleillinoisunitedstates"",     ""snameArtist3"": ""Charles Merrick Capps"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/733""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/733"",""label"":""Charles Merrick Capps"",""placeLabel"":""Jacksonville, Illinois, United States""}]","true"
"Which is the birth place of Mario Carreno?"," X1-be-is-null,X2-which-Which-null,X4-Mario Carreno-Mario-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Mario Carreno,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Mario Carreno-Mario-null, X1-subj-X2,X1-obj-X3,X4-has_name-Mario Carreno,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Mario Carreno, Mario, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Mario Carreno, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Mario Carreno, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mario Carreno"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Havana, Cuba"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/havanacuba"",     ""snameArtist3"": ""Mario Carreno"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/755""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/755"",""label"":""Mario Carreno"",""placeLabel"":""Havana, Cuba""}]","true"
"Which is the birth place of Charles Fraser?"," X1-be-is-null,X2-which-Which-null,X4-Charles Fraser-Charles-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Charles Fraser,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Charles Fraser-Charles-null, X1-subj-X2,X1-obj-X3,X4-has_name-Charles Fraser,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Charles Fraser, Charles, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Charles Fraser, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Charles Fraser, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charles Fraser"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Charleston, South Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/charlestonsouthcarolinaunitedstates"",     ""snameArtist3"": ""Charles Fraser"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1646""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1646"",""label"":""Charles Fraser"",""placeLabel"":""Charleston, South Carolina, United States""}]","true"
"Which is the birth place of Benjamin Kopman?"," X1-be-is-null,X2-which-Which-null,X4-Benjamin Kopman-Benjamin-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Benjamin Kopman,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Benjamin Kopman-Benjamin-null, X1-subj-X2,X1-obj-X3,X4-has_name-Benjamin Kopman,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Benjamin Kopman, Benjamin, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Benjamin Kopman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Benjamin Kopman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Benjamin Kopman"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Vitebsk, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/vitebskrussia"",     ""snameArtist3"": ""Benjamin Kopman"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2690""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2690"",""label"":""Benjamin Kopman"",""placeLabel"":""Vitebsk, Russia""}]","true"
"Which is the birth place of Gil Smith?"," X1-be-is-null,X2-which-Which-null,X4-Gil Smith-Gil-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Gil Smith,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Gil Smith-Gil-null, X1-subj-X2,X1-obj-X3,X4-has_name-Gil Smith,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Gil Smith, Gil, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Gil Smith, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Gil Smith, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Gil Smith"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Jacksonville, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jacksonvilleillinoisunitedstates"",     ""snameArtist3"": ""Gil Smith"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4500""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4500"",""label"":""Gil Smith"",""placeLabel"":""Jacksonville, Illinois, United States""}]","true"
"Which is the birth place of Werner Groshans?"," X1-be-is-null,X2-which-Which-null,X4-Werner Groshan-Werner-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Werner Groshan,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Werner Groshan-Werner-null, X1-subj-X2,X1-obj-X3,X4-has_name-Werner Groshan,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Werner Groshan, Werner, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Werner Groshan, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Werner Groshan, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Werner Groshan"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Eutingen, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/eutingengermany"",     ""snameArtist3"": ""Werner Groshans"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18483""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18483"",""label"":""Werner Groshans"",""placeLabel"":""Eutingen, Germany""}]","true"
"Which is the birth place of Joseph Kantor?"," X1-be-is-null,X2-which-Which-null,X4-Joseph Kantor-Joseph-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Joseph Kantor,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Joseph Kantor-Joseph-null, X1-subj-X2,X1-obj-X3,X4-has_name-Joseph Kantor,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Joseph Kantor, Joseph, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Joseph Kantor, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Joseph Kantor, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Joseph Kantor"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/russia"",     ""snameArtist3"": ""Joseph Kantor"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2543""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2543"",""label"":""Joseph Kantor"",""placeLabel"":""Russia""}]","true"
"Which is the birth place of Ida Kohlmeyer?"," X1-be-is-null,X2-which-Which-null,X4-Ida Kohlmeyer-Ida-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ida Kohlmeyer,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ida Kohlmeyer-Ida-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ida Kohlmeyer,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ida Kohlmeyer, Ida, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ida Kohlmeyer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ida Kohlmeyer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ida Kohlmeyer"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""New Orleans, Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/neworleanslouisianaunitedstates"",     ""snameArtist3"": ""Ida Kohlmeyer"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2683""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2683"",""label"":""Ida Kohlmeyer"",""placeLabel"":""New Orleans, Louisiana, United States""}]","true"
"Which is the birth place of Charles Anton Kaeselau?"," X1-be-is-null,X2-which-Which-null,X4-Charles Anton Kaeselau-Charles-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Charles Anton Kaeselau,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Charles Anton Kaeselau-Charles-null, X1-subj-X2,X1-obj-X3,X4-has_name-Charles Anton Kaeselau,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Charles Anton Kaeselau, Charles, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Charles Anton Kaeselau, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Charles Anton Kaeselau, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charles Anton Kaeselau"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Stockholm, Sweden"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/stockholmsweden"",     ""snameArtist3"": ""Charles Anton Kaeselau"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2524""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2524"",""label"":""Charles Anton Kaeselau"",""placeLabel"":""Stockholm, Sweden""}]","true"
"Which is the birth place of Terry Gips?"," X1-be-is-null,X2-which-Which-null,X4-Terry Gip-Terry-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Terry Gip,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Terry Gip-Terry-null, X1-subj-X2,X1-obj-X3,X4-has_name-Terry Gip,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Terry Gip, Terry, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Terry Gip, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Terry Gip, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Terry Gip"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Oneida, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oneidanewyorkunitedstates"",     ""snameArtist3"": ""Terry Gips"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1819""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1819"",""label"":""Terry Gips"",""placeLabel"":""Oneida, New York, United States""}]","true"
"Which is the birth place of David Burliuk?"," X1-be-is-null,X2-which-Which-null,X4-David Burliuk-David-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-David Burliuk,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-David Burliuk-David-null, X1-subj-X2,X1-obj-X3,X4-has_name-David Burliuk,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, David Burliuk, David, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, David Burliuk, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, David Burliuk, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David Burliuk"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Kharkov, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kharkovrussia"",     ""snameArtist3"": ""David Burliuk"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/670""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/670"",""label"":""David Burliuk"",""placeLabel"":""Kharkov, Russia""}]","true"
"Which is the birth place of Alcopley?"," X1-be-is-null,X2-which-Which-null,X4-Alcopley-Alcopley-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Alcopley,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Alcopley-Alcopley-null, X1-subj-X2,X1-obj-X3,X4-has_name-Alcopley,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Alcopley, Alcopley, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Alcopley, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Alcopley, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alcopley"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Dresden, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dresdengermany"",     ""snameArtist3"": ""Alcopley"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/53""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/53"",""label"":""Alcopley"",""placeLabel"":""Dresden, Germany""}]","true"
"Which is the birth place of Otis Dozier?"," X1-be-is-null,X2-which-Which-null,X4-Otis Dozier-Otis-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Otis Dozier,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Otis Dozier-Otis-null, X1-subj-X2,X1-obj-X3,X4-has_name-Otis Dozier,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Otis Dozier, Otis, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Otis Dozier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Otis Dozier, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Otis Dozier"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Forney, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/forneytexasunitedstates"",     ""snameArtist3"": ""Otis Dozier"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1338""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1338"",""label"":""Otis Dozier"",""placeLabel"":""Forney, Texas, United States""}]","true"
"Which is the birth place of Chou Pang-Ling?"," X1-be-is-null,X2-which-Which-null,X4-Chou Pang-Chou-null,X3-birth place Ling-birth place-the, X1-subj-X2,X4-has_name-Chou Pang,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place Ling-birth place-the,X4-Chou Pang-Chou-null, X1-subj-X2,X1-obj-X3,X4-has_name-Chou Pang,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Chou Pang, Chou, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place Ling, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Chou Pang, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Chou Pang, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place Ling, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 2]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Chou Pang"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Changhua, Taiwan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/changhuataiwan"",     ""snameArtist3"": ""Chou Pang-Ling"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27723""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27723"",""label"":""Chou Pang-Ling"",""placeLabel"":""Changhua, Taiwan""}]","true"
"Which is the birth place of Tami Kegley?"," X1-be-is-null,X2-which-Which-null,X4-Tami Kegley-Tami-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Tami Kegley,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Tami Kegley-Tami-null, X1-subj-X2,X1-obj-X3,X4-has_name-Tami Kegley,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Tami Kegley, Tami, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Tami Kegley, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Tami Kegley, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Tami Kegley"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Waco, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/wacotexasunitedstates"",     ""snameArtist3"": ""Tami Kegley"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/28080""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/28080"",""label"":""Tami Kegley"",""placeLabel"":""Waco, Texas, United States""}]","true"
"Which is the birth place of Bob Winston?"," X1-be-is-null,X2-which-Which-null,X4-Bob Winston-Bob-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Bob Winston,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Bob Winston-Bob-null, X1-subj-X2,X1-obj-X3,X4-has_name-Bob Winston,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Bob Winston, Bob, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Bob Winston, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Bob Winston, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Bob Winston"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Long Beach, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/longbeachcaliforniaunitedstates"",     ""snameArtist3"": ""Bob Winston"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27912""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27912"",""label"":""Bob Winston"",""placeLabel"":""Long Beach, California, United States""}]","true"
"Which is the birth place of Fred Shane?"," X1-be-is-null,X2-which-Which-null,X4-Fred Shane-Fred-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Fred Shane,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Fred Shane-Fred-null, X1-subj-X2,X1-obj-X3,X4-has_name-Fred Shane,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Fred Shane, Fred, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Fred Shane, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Fred Shane, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Fred Shane"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Kansas City, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kansascitymissouriunitedstates"",     ""snameArtist3"": ""Fred Shane"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4385""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4385"",""label"":""Fred Shane"",""placeLabel"":""Kansas City, Missouri, United States""}]","true"
"Which is the birth place of ADÁL?"," X1-be-is-null,X2-which-Which-null,X4-ADÁL-ADÁL-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-ADÁL,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-ADÁL-ADÁL-null, X1-subj-X2,X1-obj-X3,X4-has_name-ADÁL,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, ADÁL, ADÁL, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, ADÁL, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, ADÁL, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""ADÁL"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Utuado, Puerto Rico"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/utuadopuertorico"",     ""snameArtist3"": ""ADÁL"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18"",""label"":""ADÁL"",""placeLabel"":""Utuado, Puerto Rico""}]","true"
"Which is the birth place of William Wellstood?"," X1-be-is-null,X2-which-Which-null,X4-William Wellstood-William-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-William Wellstood,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-William Wellstood-William-null, X1-subj-X2,X1-obj-X3,X4-has_name-William Wellstood,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, William Wellstood, William, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, William Wellstood, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, William Wellstood, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William Wellstood"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Edinburgh, Scotland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/edinburghscotland"",     ""snameArtist3"": ""William Wellstood"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5322""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5322"",""label"":""William Wellstood"",""placeLabel"":""Edinburgh, Scotland""}]","true"
"Which is the birth place of Esther Louise Peck Newton?"," X1-be-is-null,X2-which-Which-null,X4-Esther Louise Peck Newton-Esther-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Esther Louise Peck Newton,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Esther Louise Peck Newton-Esther-null, X1-subj-X2,X1-obj-X3,X4-has_name-Esther Louise Peck Newton,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Esther Louise Peck Newton, Esther, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Esther Louise Peck Newton, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Esther Louise Peck Newton, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Esther Louise Peck Newton"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Chester, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chesterpennsylvaniaunitedstates"",     ""snameArtist3"": ""Esther Louise Peck Newton"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3534""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3534"",""label"":""Esther Louise Peck Newton"",""placeLabel"":""Chester, Pennsylvania, United States""}]","true"
"Which is the birth place of Charles W. Ward?"," X1-be-is-null,X2-which-Which-null,X4-Charles W. Ward-Charles-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Charles W. Ward,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Charles W. Ward-Charles-null, X1-subj-X2,X1-obj-X3,X4-has_name-Charles W. Ward,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Charles W. Ward, Charles, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Charles W. Ward, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Charles W. Ward, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charles W\\. Ward"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Trenton, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/trentonnewjerseyunitedstates"",     ""snameArtist3"": ""Charles W. Ward"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5228""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5228"",""label"":""Charles W. Ward"",""placeLabel"":""Trenton, New Jersey, United States""}]","true"
"Which is the birth place of Martin Stupich?"," X1-be-is-null,X2-which-Which-null,X4-Martin Stupich-Martin-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Martin Stupich,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Martin Stupich-Martin-null, X1-subj-X2,X1-obj-X3,X4-has_name-Martin Stupich,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Martin Stupich, Martin, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Martin Stupich, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Martin Stupich, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Martin Stupich"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Milwaukee, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/milwaukeewisconsinunitedstates"",     ""snameArtist3"": ""Martin Stupich"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18506""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18506"",""label"":""Martin Stupich"",""placeLabel"":""Milwaukee, Wisconsin, United States""}]","true"
"Which is the birth place of James Auchiah?"," X1-be-is-null,X2-which-Which-null,X4-James Auchiah-James-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-James Auchiah,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-James Auchiah-James-null, X1-subj-X2,X1-obj-X3,X4-has_name-James Auchiah,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, James Auchiah, James, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, James Auchiah, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, James Auchiah, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James Auchiah"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Medicine Park, Oklahoma, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/medicineparkoklahomaunitedstates"",     ""snameArtist3"": ""James Auchiah"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/164""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/164"",""label"":""James Auchiah"",""placeLabel"":""Medicine Park, Oklahoma, United States""}]","true"
"Which is the birth place of Max Weber?"," X1-be-is-null,X2-which-Which-null,X4-Max Weber-Max-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Max Weber,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Max Weber-Max-null, X1-subj-X2,X1-obj-X3,X4-has_name-Max Weber,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Max Weber, Max, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Max Weber, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Max Weber, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Max Weber"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Bialystok, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bialystokrussia"",     ""snameArtist3"": ""Max Weber"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5273""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5273"",""label"":""Max Weber"",""placeLabel"":""Bialystok, Russia""}]","true"
"Which is the birth place of Steve Szabo?"," X1-be-is-null,X2-which-Which-null,X4-Steve Szabo-Steve-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Steve Szabo,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Steve Szabo-Steve-null, X1-subj-X2,X1-obj-X3,X4-has_name-Steve Szabo,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Steve Szabo, Steve, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Steve Szabo, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Steve Szabo, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Steve Szabo"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Berwick, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/berwickpennsylvaniaunitedstates"",     ""snameArtist3"": ""Steve Szabo"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5782""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5782"",""label"":""Steve Szabo"",""placeLabel"":""Berwick, Pennsylvania, United States""}]","true"
"Which is the birth place of Ferol Sibley Warthen?"," X1-be-is-null,X2-which-Which-null,X4-Ferol Sibley Warthen-Ferol-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ferol Sibley Warthen,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ferol Sibley Warthen-Ferol-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ferol Sibley Warthen,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ferol Sibley Warthen, Ferol, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ferol Sibley Warthen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ferol Sibley Warthen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ferol Sibley Warthen"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Aberdeen, South Dakota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/aberdeensouthdakotaunitedstates"",     ""snameArtist3"": ""Ferol Sibley Warthen"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5244""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5244"",""label"":""Ferol Sibley Warthen"",""placeLabel"":""Aberdeen, South Dakota, United States""}]","true"
"Which is the birth place of Karin Birch?"," X1-be-is-null,X2-which-Which-null,X4-Karin Birch-Karin-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Karin Birch,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Karin Birch-Karin-null, X1-subj-X2,X1-obj-X3,X4-has_name-Karin Birch,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Karin Birch, Karin, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Karin Birch, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Karin Birch, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Karin Birch"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Point Barrow, Alaska, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pointbarrowalaskaunitedstates"",     ""snameArtist3"": ""Karin Birch"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18365""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18365"",""label"":""Karin Birch"",""placeLabel"":""Point Barrow, Alaska, United States""}]","true"
"Which is the birth place of Eyre de Lanux?"," X1-be-is-null,X2-which-Which-null,X4-Eyre de Lanux-Eyre-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Eyre de Lanux,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Eyre de Lanux-Eyre-null, X1-subj-X2,X1-obj-X3,X4-has_name-Eyre de Lanux,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Eyre de Lanux, Eyre, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Eyre de Lanux, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Eyre de Lanux, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Eyre de Lanux"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Johnstown, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/johnstownpennsylvaniaunitedstates"",     ""snameArtist3"": ""Eyre de Lanux"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1477""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1477"",""label"":""Eyre de Lanux"",""placeLabel"":""Johnstown, Pennsylvania, United States""}]","true"
"Which is the birth place of William H. Jackson?"," X1-be-is-null,X2-which-Which-null,X4-William H. Jackson-William-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-William H. Jackson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-William H. Jackson-William-null, X1-subj-X2,X1-obj-X3,X4-has_name-William H. Jackson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, William H. Jackson, William, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, William H. Jackson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, William H. Jackson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William H\\. Jackson"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Keesville, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/keesvillenewyorkunitedstates"",     ""snameArtist3"": ""William H. Jackson"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2424""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2424"",""label"":""William H. Jackson"",""placeLabel"":""Keesville, New York, United States""}]","true"
"Which is the birth place of Michael Lantz?"," X1-be-is-null,X2-which-Which-null,X4-Michael Lantz-Michael-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Michael Lantz,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Michael Lantz-Michael-null, X1-subj-X2,X1-obj-X3,X4-has_name-Michael Lantz,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Michael Lantz, Michael, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Michael Lantz, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Michael Lantz, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Michael Lantz"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""New Rochelle, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newrochellenewyorkunitedstates"",     ""snameArtist3"": ""Michael Lantz"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2793""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2793"",""label"":""Michael Lantz"",""placeLabel"":""New Rochelle, New York, United States""}]","true"
"Which is the birth place of Robert Goodnough?"," X1-be-is-null,X2-which-Which-null,X4-Robert Goodnough-Robert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Robert Goodnough,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Robert Goodnough-Robert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Robert Goodnough,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Robert Goodnough, Robert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Robert Goodnough, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Robert Goodnough, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert Goodnough"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Cortland, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cortlandnewyorkunitedstates"",     ""snameArtist3"": ""Robert Goodnough"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1870""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1870"",""label"":""Robert Goodnough"",""placeLabel"":""Cortland, New York, United States""}]","true"
"Which is the birth place of Maybelle Stamper?"," X1-be-is-null,X2-which-Which-null,X4-Maybelle Stamper-Maybelle-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Maybelle Stamper,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Maybelle Stamper-Maybelle-null, X1-subj-X2,X1-obj-X3,X4-has_name-Maybelle Stamper,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Maybelle Stamper, Maybelle, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Maybelle Stamper, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Maybelle Stamper, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Maybelle Stamper"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Dublin, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dublinnewhampshireunitedstates"",     ""snameArtist3"": ""Maybelle Stamper"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27713""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27713"",""label"":""Maybelle Stamper"",""placeLabel"":""Dublin, New Hampshire, United States""}]","true"
"Which is the birth place of Robert Cato?"," X1-be-is-null,X2-which-Which-null,X4-Robert Cato-Robert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Robert Cato,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Robert Cato-Robert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Robert Cato,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Robert Cato, Robert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Robert Cato, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Robert Cato, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert Cato"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""New Orleans, Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/neworleanslouisianaunitedstates"",     ""snameArtist3"": ""Robert Cato"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/783""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/783"",""label"":""Robert Cato"",""placeLabel"":""New Orleans, Louisiana, United States""}]","true"
"Which is the birth place of Roger D. Corsaw?"," X1-be-is-null,X2-which-Which-null,X4-Roger D. Corsaw-Roger-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Roger D. Corsaw,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Roger D. Corsaw-Roger-null, X1-subj-X2,X1-obj-X3,X4-has_name-Roger D. Corsaw,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Roger D. Corsaw, Roger, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Roger D. Corsaw, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Roger D. Corsaw, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Roger D\\. Corsaw"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Ithaca, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/ithacanewyorkunitedstates"",     ""snameArtist3"": ""Roger D. Corsaw"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/7309""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/7309"",""label"":""Roger D. Corsaw"",""placeLabel"":""Ithaca, New York, United States""}]","true"
"Which is the birth place of Elizabeth Saltonstall?"," X1-be-is-null,X2-which-Which-null,X4-Elizabeth Saltonstall-Elizabeth-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Elizabeth Saltonstall,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Elizabeth Saltonstall-Elizabeth-null, X1-subj-X2,X1-obj-X3,X4-has_name-Elizabeth Saltonstall,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Elizabeth Saltonstall, Elizabeth, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Elizabeth Saltonstall, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Elizabeth Saltonstall, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Elizabeth Saltonstall"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Chestnut Hill, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chestnuthillmassachusettsunitedstates"",     ""snameArtist3"": ""Elizabeth Saltonstall"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4225""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4225"",""label"":""Elizabeth Saltonstall"",""placeLabel"":""Chestnut Hill, Massachusetts, United States""}]","true"
"Which is the birth place of James Wallace Buchman?"," X1-be-is-null,X2-which-Which-null,X4-James Wallace Buchman-James-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-James Wallace Buchman,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-James Wallace Buchman-James-null, X1-subj-X2,X1-obj-X3,X4-has_name-James Wallace Buchman,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, James Wallace Buchman, James, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, James Wallace Buchman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, James Wallace Buchman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James Wallace Buchman"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Memphis, Tennessee, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/memphistennesseeunitedstates"",     ""snameArtist3"": ""James Wallace Buchman"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/636""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/636"",""label"":""James Wallace Buchman"",""placeLabel"":""Memphis, Tennessee, United States""}]","true"
"Which is the birth place of Keith Martin?"," X1-be-is-null,X2-which-Which-null,X4-Keith Martin-Keith-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Keith Martin,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Keith Martin-Keith-null, X1-subj-X2,X1-obj-X3,X4-has_name-Keith Martin,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Keith Martin, Keith, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Keith Martin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Keith Martin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Keith Martin"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Lincoln, Nebraska, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lincolnnebraskaunitedstates"",     ""snameArtist3"": ""Keith Martin"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3139""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3139"",""label"":""Keith Martin"",""placeLabel"":""Lincoln, Nebraska, United States""}]","true"
"Which is the birth place of Hermann Herzog?"," X1-be-is-null,X2-which-Which-null,X4-Hermann Herzog-Hermann-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Hermann Herzog,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Hermann Herzog-Hermann-null, X1-subj-X2,X1-obj-X3,X4-has_name-Hermann Herzog,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Hermann Herzog, Hermann, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Hermann Herzog, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Hermann Herzog, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Hermann Herzog"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Bremen, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/bremengermany"",     ""snameArtist3"": ""Hermann Herzog"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2194""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2194"",""label"":""Hermann Herzog"",""placeLabel"":""Bremen, Germany""}]","true"
"Which is the birth place of Lynda Benglis?"," X1-be-is-null,X2-which-Which-null,X4-Lynda Benglis-Lynda-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Lynda Benglis,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Lynda Benglis-Lynda-null, X1-subj-X2,X1-obj-X3,X4-has_name-Lynda Benglis,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Lynda Benglis, Lynda, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Lynda Benglis, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Lynda Benglis, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lynda Benglis"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Lake Charles, Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lakecharleslouisianaunitedstates"",     ""snameArtist3"": ""Lynda Benglis"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/340""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/340"",""label"":""Lynda Benglis"",""placeLabel"":""Lake Charles, Louisiana, United States""}]","true"
"Which is the birth place of Juan Buckingham Wandesforde?"," X1-be-is-null,X2-which-Which-null,X4-Juan Buckingham Wandesforde-Juan-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Juan Buckingham Wandesforde,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Juan Buckingham Wandesforde-Juan-null, X1-subj-X2,X1-obj-X3,X4-has_name-Juan Buckingham Wandesforde,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Juan Buckingham Wandesforde, Juan, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Juan Buckingham Wandesforde, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Juan Buckingham Wandesforde, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Juan Buckingham Wandesforde"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/england"",     ""snameArtist3"": ""Juan Buckingham Wandesforde"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/6548""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/6548"",""label"":""Juan Buckingham Wandesforde"",""placeLabel"":""England""}]","true"
"Which is the birth place of Lester Beall?"," X1-be-is-null,X2-which-Which-null,X4-Lester Beall-Lester-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Lester Beall,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Lester Beall-Lester-null, X1-subj-X2,X1-obj-X3,X4-has_name-Lester Beall,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Lester Beall, Lester, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Lester Beall, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Lester Beall, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Lester Beall"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Kansas City, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kansascitymissouriunitedstates"",     ""snameArtist3"": ""Lester Beall"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/291""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/291"",""label"":""Lester Beall"",""placeLabel"":""Kansas City, Missouri, United States""}]","true"
"Which is the birth place of Hans Haacke?"," X1-be-is-null,X2-which-Which-null,X4-Hans Haacke-Hans-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Hans Haacke,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Hans Haacke-Hans-null, X1-subj-X2,X1-obj-X3,X4-has_name-Hans Haacke,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Hans Haacke, Hans, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Hans Haacke, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Hans Haacke, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Hans Haacke"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Cologne, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/colognegermany"",     ""snameArtist3"": ""Hans Haacke"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2001""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2001"",""label"":""Hans Haacke"",""placeLabel"":""Cologne, Germany""}]","true"
"Which is the birth place of Mark Burns?"," X1-be-is-null,X2-which-Which-null,X4-Mark Burns-Mark-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Mark Burns,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Mark Burns-Mark-null, X1-subj-X2,X1-obj-X3,X4-has_name-Mark Burns,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Mark Burns, Mark, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Mark Burns, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Mark Burns, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mark Burns"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Springfield, Ohio, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/springfieldohiounitedstates"",     ""snameArtist3"": ""Mark Burns"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/29027""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/29027"",""label"":""Mark Burns"",""placeLabel"":""Springfield, Ohio, United States""}]","true"
"Which is the birth place of Arthur Ollman?"," X1-be-is-null,X2-which-Which-null,X4-Arthur Ollman-Arthur-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Arthur Ollman,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Arthur Ollman-Arthur-null, X1-subj-X2,X1-obj-X3,X4-has_name-Arthur Ollman,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Arthur Ollman, Arthur, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Arthur Ollman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Arthur Ollman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Arthur Ollman"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Milwaukee, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/milwaukeewisconsinunitedstates"",     ""snameArtist3"": ""Arthur Ollman"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3623""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3623"",""label"":""Arthur Ollman"",""placeLabel"":""Milwaukee, Wisconsin, United States""}]","true"
"Which is the birth place of Ruth Eckstein?"," X1-be-is-null,X2-which-Which-null,X4-Ruth Eckstein-Ruth-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ruth Eckstein,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ruth Eckstein-Ruth-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ruth Eckstein,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ruth Eckstein, Ruth, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ruth Eckstein, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ruth Eckstein, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ruth Eckstein"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Nuremberg, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nuremberggermany"",     ""snameArtist3"": ""Ruth Eckstein"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1401""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1401"",""label"":""Ruth Eckstein"",""placeLabel"":""Nuremberg, Germany""}]","true"
"Which is the birth place of Joseph Konzal?"," X1-be-is-null,X2-which-Which-null,X4-Joseph Konzal-Joseph-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Joseph Konzal,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Joseph Konzal-Joseph-null, X1-subj-X2,X1-obj-X3,X4-has_name-Joseph Konzal,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Joseph Konzal, Joseph, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Joseph Konzal, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Joseph Konzal, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Joseph Konzal"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Milwaukee, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/milwaukeewisconsinunitedstates"",     ""snameArtist3"": ""Joseph Konzal"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2689""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2689"",""label"":""Joseph Konzal"",""placeLabel"":""Milwaukee, Wisconsin, United States""}]","true"
"Which is the birth place of Nan Watson?"," X1-be-is-null,X2-which-Which-null,X4-Nan Watson-Nan-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Nan Watson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Nan Watson-Nan-null, X1-subj-X2,X1-obj-X3,X4-has_name-Nan Watson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Nan Watson, Nan, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Nan Watson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Nan Watson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Nan Watson"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Edinburgh, Scotland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/edinburghscotland"",     ""snameArtist3"": ""Nan Watson"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5257""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5257"",""label"":""Nan Watson"",""placeLabel"":""Edinburgh, Scotland""}]","true"
"Which is the birth place of Russell Smoky Brown?","","NO DRS","null","null","null","null"
"Which is the birth place of Keisuke Mizuno?"," X1-be-is-null,X2-which-Which-null,X4-Keisuke Mizuno-Keisuke-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Keisuke Mizuno,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Keisuke Mizuno-Keisuke-null, X1-subj-X2,X1-obj-X3,X4-has_name-Keisuke Mizuno,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Keisuke Mizuno, Keisuke, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Keisuke Mizuno, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Keisuke Mizuno, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Keisuke Mizuno"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Nagoya, Aichi Prefecture, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nagoyaaichiprefecturejapan"",     ""snameArtist3"": ""Keisuke Mizuno"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18475""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18475"",""label"":""Keisuke Mizuno"",""placeLabel"":""Nagoya, Aichi Prefecture, Japan""}]","true"
"Which is the birth place of Delilah Montoya?"," X1-be-is-null,X2-which-Which-null,X4-Delilah Montoya-Delilah-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Delilah Montoya,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Delilah Montoya-Delilah-null, X1-subj-X2,X1-obj-X3,X4-has_name-Delilah Montoya,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Delilah Montoya, Delilah, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Delilah Montoya, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Delilah Montoya, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Delilah Montoya"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Fort Worth, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fortworthtexasunitedstates"",     ""snameArtist3"": ""Delilah Montoya"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5986""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5986"",""label"":""Delilah Montoya"",""placeLabel"":""Fort Worth, Texas, United States""}]","true"
"Which is the birth place of John Sebastien Miller?"," X1-be-is-null,X2-which-Which-null,X4-John Sebastien Miller-John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John Sebastien Miller,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John Sebastien Miller-John-null, X1-subj-X2,X1-obj-X3,X4-has_name-John Sebastien Miller,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John Sebastien Miller, John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John Sebastien Miller, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John Sebastien Miller, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Sebastien Miller"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Nuremberg, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nuremberggermany"",     ""snameArtist3"": ""John Sebastien Miller"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3330""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3330"",""label"":""John Sebastien Miller"",""placeLabel"":""Nuremberg, Germany""}]","true"
"Which is the birth place of Mel Ramos?"," X1-be-is-null,X2-which-Which-null,X4-Mel Ramos-Mel-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Mel Ramos,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Mel Ramos-Mel-null, X1-subj-X2,X1-obj-X3,X4-has_name-Mel Ramos,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Mel Ramos, Mel, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Mel Ramos, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Mel Ramos, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mel Ramos"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Sacramento, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sacramentocaliforniaunitedstates"",     ""snameArtist3"": ""Mel Ramos"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3932""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3932"",""label"":""Mel Ramos"",""placeLabel"":""Sacramento, California, United States""}]","true"
"Which is the birth place of Charlie Willeto?"," X1-be-is-null,X2-which-Which-null,X4-Charlie Willeto-Charlie-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Charlie Willeto,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Charlie Willeto-Charlie-null, X1-subj-X2,X1-obj-X3,X4-has_name-Charlie Willeto,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Charlie Willeto, Charlie, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Charlie Willeto, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Charlie Willeto, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charlie Willeto"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Nageezi, New Mexico, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nageezinewmexicounitedstates"",     ""snameArtist3"": ""Charlie Willeto"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5403""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5403"",""label"":""Charlie Willeto"",""placeLabel"":""Nageezi, New Mexico, United States""}]","true"
"Which is the birth place of Eugene James Faber?"," X1-be-is-null,X2-which-Which-null,X4-Eugene James Faber-Eugene-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Eugene James Faber,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Eugene James Faber-Eugene-null, X1-subj-X2,X1-obj-X3,X4-has_name-Eugene James Faber,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Eugene James Faber, Eugene, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Eugene James Faber, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Eugene James Faber, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Eugene James Faber"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Milwaukee, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/milwaukeewisconsinunitedstates"",     ""snameArtist3"": ""Eugene James Faber"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1479""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1479"",""label"":""Eugene James Faber"",""placeLabel"":""Milwaukee, Wisconsin, United States""}]","true"
"Which is the birth place of John Saccaro?"," X1-be-is-null,X2-which-Which-null,X4-John Saccaro-John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John Saccaro,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John Saccaro-John-null, X1-subj-X2,X1-obj-X3,X4-has_name-John Saccaro,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John Saccaro, John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John Saccaro, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John Saccaro, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Saccaro"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""San Francisco, California"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sanfranciscocalifornia"",     ""snameArtist3"": ""John Saccaro"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/28300""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/28300"",""label"":""John Saccaro"",""placeLabel"":""San Francisco, California""}]","true"
"Which is the birth place of Gilbert Gaul?"," X1-be-is-null,X2-which-Which-null,X4-Gilbert Gaul-Gilbert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Gilbert Gaul,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Gilbert Gaul-Gilbert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Gilbert Gaul,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Gilbert Gaul, Gilbert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Gilbert Gaul, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Gilbert Gaul, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Gilbert Gaul"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Jersey City, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/jerseycitynewjerseyunitedstates"",     ""snameArtist3"": ""Gilbert Gaul"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/6420""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/6420"",""label"":""Gilbert Gaul"",""placeLabel"":""Jersey City, New Jersey, United States""}]","true"
"Which is the birth place of Da Loria Norman?"," X1-be-is-null,X2-which-Which-null,X4-Da Loria Norman-Da-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Da Loria Norman,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Da Loria Norman-Da-null, X1-subj-X2,X1-obj-X3,X4-has_name-Da Loria Norman,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Da Loria Norman, Da, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Da Loria Norman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Da Loria Norman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Da Loria Norman"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Leavenworth, Kansas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/leavenworthkansasunitedstates"",     ""snameArtist3"": ""Da Loria Norman"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3571""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3571"",""label"":""Da Loria Norman"",""placeLabel"":""Leavenworth, Kansas, United States""}]","true"
"Which is the birth place of Alton Tobey?"," X1-be-is-null,X2-which-Which-null,X4-Alton Tobey-Alton-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Alton Tobey,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Alton Tobey-Alton-null, X1-subj-X2,X1-obj-X3,X4-has_name-Alton Tobey,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Alton Tobey, Alton, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Alton Tobey, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Alton Tobey, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alton Tobey"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Middletown, Connecticut, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/middletownconnecticutunitedstates"",     ""snameArtist3"": ""Alton Tobey"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4822""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4822"",""label"":""Alton Tobey"",""placeLabel"":""Middletown, Connecticut, United States""}]","true"
"Which is the birth place of John Scott?"," X1-be-is-null,X2-which-Which-null,X4-John Scott-John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John Scott,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John Scott-John-null, X1-subj-X2,X1-obj-X3,X4-has_name-John Scott,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John Scott, John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John Scott, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John Scott, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Scott"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""New Orleans, Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/neworleanslouisianaunitedstates"",     ""snameArtist3"": ""John Scott"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/6571""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/6571"",""label"":""John Scott"",""placeLabel"":""New Orleans, Louisiana, United States""}]","true"
"Which is the birth place of Jay Wilson?"," X1-be-is-null,X2-which-Which-null,X4-Jay Wilson-Jay-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jay Wilson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jay Wilson-Jay-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jay Wilson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jay Wilson, Jay, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jay Wilson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jay Wilson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jay Wilson"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Clarksburg, West Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/clarksburgwestvirginiaunitedstates"",     ""snameArtist3"": ""Jay Wilson"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18534""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18534"",""label"":""Jay Wilson"",""placeLabel"":""Clarksburg, West Virginia, United States""}]","true"
"Which is the birth place of Clara Fasano?"," X1-be-is-null,X2-which-Which-null,X4-Clara Fasano-Clara-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Clara Fasano,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Clara Fasano-Clara-null, X1-subj-X2,X1-obj-X3,X4-has_name-Clara Fasano,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Clara Fasano, Clara, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Clara Fasano, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Clara Fasano, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Clara Fasano"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Castellaneta, Italy"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/castellanetaitaly"",     ""snameArtist3"": ""Clara Fasano"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1497""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1497"",""label"":""Clara Fasano"",""placeLabel"":""Castellaneta, Italy""}]","true"
"Which is the birth place of Rudy Ayoroa?"," X1-be-is-null,X2-which-Which-null,X4-Rudy Ayoroa-Rudy-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Rudy Ayoroa,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Rudy Ayoroa-Rudy-null, X1-subj-X2,X1-obj-X3,X4-has_name-Rudy Ayoroa,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Rudy Ayoroa, Rudy, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Rudy Ayoroa, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Rudy Ayoroa, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Rudy Ayoroa"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""La Paz, Bolivia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lapazbolivia"",     ""snameArtist3"": ""Rudy Ayoroa"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/181""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/181"",""label"":""Rudy Ayoroa"",""placeLabel"":""La Paz, Bolivia""}]","true"
"Which is the birth place of Charles Pollock?"," X1-be-is-null,X2-which-Which-null,X4-Charles Pollock-Charles-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Charles Pollock,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Charles Pollock-Charles-null, X1-subj-X2,X1-obj-X3,X4-has_name-Charles Pollock,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Charles Pollock, Charles, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Charles Pollock, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Charles Pollock, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charles Pollock"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Denver, Colorado, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/denvercoloradounitedstates"",     ""snameArtist3"": ""Charles Pollock"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3825""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3825"",""label"":""Charles Pollock"",""placeLabel"":""Denver, Colorado, United States""}]","true"
"Which is the birth place of Albert Heckman?"," X1-be-is-null,X2-which-Which-null,X4-Albert Heckman-Albert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Albert Heckman,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Albert Heckman-Albert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Albert Heckman,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Albert Heckman, Albert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Albert Heckman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Albert Heckman, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Albert Heckman"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Meadville, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/meadvillepennsylvaniaunitedstates"",     ""snameArtist3"": ""Albert Heckman"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2146""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2146"",""label"":""Albert Heckman"",""placeLabel"":""Meadville, Pennsylvania, United States""}]","true"
"Which is the birth place of Xavier Martinez?"," X1-be-is-null,X2-which-Which-null,X4-Xavier Martinez-Xavier-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Xavier Martinez,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Xavier Martinez-Xavier-null, X1-subj-X2,X1-obj-X3,X4-has_name-Xavier Martinez,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Xavier Martinez, Xavier, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Xavier Martinez, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Xavier Martinez, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Xavier Martinez"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Guadalajara, Mexico"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/guadalajaramexico"",     ""snameArtist3"": ""Xavier Martinez"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3144""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3144"",""label"":""Xavier Martinez"",""placeLabel"":""Guadalajara, Mexico""}]","true"
"Which is the birth place of Gustave Klumpp?"," X1-be-is-null,X2-which-Which-null,X4-Gustave Klumpp-Gustave-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Gustave Klumpp,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Gustave Klumpp-Gustave-null, X1-subj-X2,X1-obj-X3,X4-has_name-Gustave Klumpp,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Gustave Klumpp, Gustave, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Gustave Klumpp, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Gustave Klumpp, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Gustave Klumpp"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Baiersbronn, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/baiersbronngermany"",     ""snameArtist3"": ""Gustave Klumpp"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2666""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2666"",""label"":""Gustave Klumpp"",""placeLabel"":""Baiersbronn, Germany""}]","true"
"Which is the birth place of Gayleen Aiken?"," X1-be-is-null,X2-which-Which-null,X4-Gayleen Aiken-Gayleen-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Gayleen Aiken,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Gayleen Aiken-Gayleen-null, X1-subj-X2,X1-obj-X3,X4-has_name-Gayleen Aiken,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Gayleen Aiken, Gayleen, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Gayleen Aiken, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Gayleen Aiken, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Gayleen Aiken"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Barre, Vermont, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/barrevermontunitedstates"",     ""snameArtist3"": ""Gayleen Aiken"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18266""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18266"",""label"":""Gayleen Aiken"",""placeLabel"":""Barre, Vermont, United States""}]","true"
"Which is the birth place of Aldro T. Hibbard?"," X1-be-is-null,X2-which-Which-null,X4-Aldro T. Hibbard-Aldro-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Aldro T. Hibbard,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Aldro T. Hibbard-Aldro-null, X1-subj-X2,X1-obj-X3,X4-has_name-Aldro T. Hibbard,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Aldro T. Hibbard, Aldro, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Aldro T. Hibbard, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Aldro T. Hibbard, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Aldro T\\. Hibbard"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Falmouth, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/falmouthmassachusettsunitedstates"",     ""snameArtist3"": ""Aldro T. Hibbard"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2203""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2203"",""label"":""Aldro T. Hibbard"",""placeLabel"":""Falmouth, Massachusetts, United States""}]","true"
"Which is the birth place of Benoit Audran I?"," X1-be-is-null,X2-which-Which-null,X4-Benoit Audran I-Benoit-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Benoit Audran I,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Benoit Audran I-Benoit-null, X1-subj-X2,X1-obj-X3,X4-has_name-Benoit Audran I,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Benoit Audran I, Benoit, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Benoit Audran I, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Benoit Audran I, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Benoit Audran I"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Lyons, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lyonsfrance"",     ""snameArtist3"": ""Benoit Audran I"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/166""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/166"",""label"":""Benoit Audran I"",""placeLabel"":""Lyons, France""}]","true"
"Which is the birth place of Joyce Kozloff?"," X1-be-is-null,X2-which-Which-null,X4-Joyce Kozloff-Joyce-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Joyce Kozloff,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Joyce Kozloff-Joyce-null, X1-subj-X2,X1-obj-X3,X4-has_name-Joyce Kozloff,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Joyce Kozloff, Joyce, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Joyce Kozloff, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Joyce Kozloff, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Joyce Kozloff"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Somerville, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/somervillenewjerseyunitedstates"",     ""snameArtist3"": ""Joyce Kozloff"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18410""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18410"",""label"":""Joyce Kozloff"",""placeLabel"":""Somerville, New Jersey, United States""}]","true"
"Which is the birth place of Buenaventura Salesa?"," X1-be-is-null,X2-which-Which-null,X4-Buenaventura Salesa-Buenaventura-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Buenaventura Salesa,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Buenaventura Salesa-Buenaventura-null, X1-subj-X2,X1-obj-X3,X4-has_name-Buenaventura Salesa,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Buenaventura Salesa, Buenaventura, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Buenaventura Salesa, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Buenaventura Salesa, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Buenaventura Salesa"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Borja, Spain"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/borjaspain"",     ""snameArtist3"": ""Buenaventura Salesa"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27464""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27464"",""label"":""Buenaventura Salesa"",""placeLabel"":""Borja, Spain""}]","true"
"Which is the birth place of Henri Martin?"," X1-be-is-null,X2-which-Which-null,X4-Henri Martin-Henri-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Henri Martin,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Henri Martin-Henri-null, X1-subj-X2,X1-obj-X3,X4-has_name-Henri Martin,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Henri Martin, Henri, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Henri Martin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Henri Martin, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Henri Martin"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Toulouse, Haute-Garonne, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/toulousehautegaronnefrance"",     ""snameArtist3"": ""Henri Martin"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3136""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3136"",""label"":""Henri Martin"",""placeLabel"":""Toulouse, Haute-Garonne, France""}]","true"
"Which is the birth place of Kenneth C. Holmes?"," X1-be-is-null,X2-which-Which-null,X4-Kenneth C. Holmes-Kenneth-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Kenneth C. Holmes,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Kenneth C. Holmes-Kenneth-null, X1-subj-X2,X1-obj-X3,X4-has_name-Kenneth C. Holmes,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Kenneth C. Holmes, Kenneth, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Kenneth C. Holmes, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Kenneth C. Holmes, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Kenneth C\\. Holmes"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Skipton, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/skiptonengland"",     ""snameArtist3"": ""Kenneth C. Holmes"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2278""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2278"",""label"":""Kenneth C. Holmes"",""placeLabel"":""Skipton, England""}]","true"
"Which is the birth place of Frederick Langenheim?"," X1-be-is-null,X2-which-Which-null,X4-Frederick Langenheim-Frederick-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Frederick Langenheim,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Frederick Langenheim-Frederick-null, X1-subj-X2,X1-obj-X3,X4-has_name-Frederick Langenheim,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Frederick Langenheim, Frederick, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Frederick Langenheim, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Frederick Langenheim, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frederick Langenheim"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Brunswick, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/brunswickgermany"",     ""snameArtist3"": ""Frederick Langenheim"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27486""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27486"",""label"":""Frederick Langenheim"",""placeLabel"":""Brunswick, Germany""}]","true"
"Which is the birth place of P. E. Stroëhling?"," X1-be-is-null,X2-which-Which-null,X4-P. E. Stroëhling-P.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-P. E. Stroëhling,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-P. E. Stroëhling-P.-null, X1-subj-X2,X1-obj-X3,X4-has_name-P. E. Stroëhling,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, P. E. Stroëhling, P., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, P. E. Stroëhling, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, P. E. Stroëhling, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""P\\. E\\. Stroëhling"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Dusseldorf, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dusseldorfgermany"",     ""snameArtist3"": ""P. E. Stroëhling"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4682""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4682"",""label"":""P. E. Stroëhling"",""placeLabel"":""Dusseldorf, Germany""}]","true"
"Which is the birth place of Arthur Durston?"," X1-be-is-null,X2-which-Which-null,X4-Arthur Durston-Arthur-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Arthur Durston,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Arthur Durston-Arthur-null, X1-subj-X2,X1-obj-X3,X4-has_name-Arthur Durston,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Arthur Durston, Arthur, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Arthur Durston, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Arthur Durston, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Arthur Durston"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Farnsborough, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/farnsboroughengland"",     ""snameArtist3"": ""Arthur Durston"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1367""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1367"",""label"":""Arthur Durston"",""placeLabel"":""Farnsborough, England""}]","true"
"Which is the birth place of Bjorn Egeli?"," X1-be-is-null,X2-which-Which-null,X4-Bjorn Egeli-Bjorn-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Bjorn Egeli,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Bjorn Egeli-Bjorn-null, X1-subj-X2,X1-obj-X3,X4-has_name-Bjorn Egeli,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Bjorn Egeli, Bjorn, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Bjorn Egeli, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Bjorn Egeli, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Bjorn Egeli"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Oslo, Norway"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oslonorway"",     ""snameArtist3"": ""Bjorn Egeli"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1419""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1419"",""label"":""Bjorn Egeli"",""placeLabel"":""Oslo, Norway""}]","true"
"Which is the birth place of Ludolf Backhuysen?"," X1-be-is-null,X2-which-Which-null,X4-Ludolf Backhuysen-Ludolf-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Ludolf Backhuysen,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Ludolf Backhuysen-Ludolf-null, X1-subj-X2,X1-obj-X3,X4-has_name-Ludolf Backhuysen,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Ludolf Backhuysen, Ludolf, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Ludolf Backhuysen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Ludolf Backhuysen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Ludolf Backhuysen"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Emden, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/emdengermany"",     ""snameArtist3"": ""Ludolf Backhuysen"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/190""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/190"",""label"":""Ludolf Backhuysen"",""placeLabel"":""Emden, Germany""}]","true"
"Which is the birth place of James Forbes?"," X1-be-is-null,X2-which-Which-null,X4-James Forbes-James-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-James Forbes,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-James Forbes-James-null, X1-subj-X2,X1-obj-X3,X4-has_name-James Forbes,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, James Forbes, James, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, James Forbes, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, James Forbes, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""James Forbes"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Louisville, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/louisvillekentuckyunitedstates"",     ""snameArtist3"": ""James Forbes"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1606""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1606"",""label"":""James Forbes"",""placeLabel"":""Louisville, Kentucky, United States""}]","true"
"Which is the birth place of Kee-Ho Yuen?"," X1-be-is-null,X2-which-Which-null,X4-Kee-Ho Yuen-Kee,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Kee,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Kee-Ho Yuen-Kee, X1-subj-X2,X1-obj-X3,X4-has_name-Kee,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Kee-Ho Yuen, Kee-Ho, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Kee-Ho Yuen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Kee-Ho Yuen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Kee\\-Ho Yuen"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Hong Kong, China"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hongkongchina"",     ""snameArtist3"": ""Kee-Ho Yuen"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27817""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27817"",""label"":""Kee-Ho Yuen"",""placeLabel"":""Hong Kong, China""}]","true"
"Which is the birth place of Hideaki Miyamura?"," X1-be-is-null,X2-which-Which-null,X4-Hideaki Miyamura-Hideaki-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Hideaki Miyamura,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Hideaki Miyamura-Hideaki-null, X1-subj-X2,X1-obj-X3,X4-has_name-Hideaki Miyamura,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Hideaki Miyamura, Hideaki, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Hideaki Miyamura, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Hideaki Miyamura, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Hideaki Miyamura"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Niigata, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/niigatajapan"",     ""snameArtist3"": ""Hideaki Miyamura"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27897""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27897"",""label"":""Hideaki Miyamura"",""placeLabel"":""Niigata, Japan""}]","true"
"Which is the birth place of Niles Spencer?"," X1-be-is-null,X2-which-Which-null,X4-Niles Spencer-Niles-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Niles Spencer,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Niles Spencer-Niles-null, X1-subj-X2,X1-obj-X3,X4-has_name-Niles Spencer,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Niles Spencer, Niles, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Niles Spencer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Niles Spencer, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Niles Spencer"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Pawtucket, Rhode Island, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/pawtucketrhodeislandunitedstates"",     ""snameArtist3"": ""Niles Spencer"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4575""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4575"",""label"":""Niles Spencer"",""placeLabel"":""Pawtucket, Rhode Island, United States""}]","true"
"Which is the birth place of Charles Roscoe Savage?"," X1-be-is-null,X2-which-Which-null,X4-Charles Roscoe Savage-Charles-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Charles Roscoe Savage,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Charles Roscoe Savage-Charles-null, X1-subj-X2,X1-obj-X3,X4-has_name-Charles Roscoe Savage,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Charles Roscoe Savage, Charles, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Charles Roscoe Savage, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Charles Roscoe Savage, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charles Roscoe Savage"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Southampton, England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/southamptonengland"",     ""snameArtist3"": ""Charles Roscoe Savage"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27797""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27797"",""label"":""Charles Roscoe Savage"",""placeLabel"":""Southampton, England""}]","true"
"Which is the birth place of Michelle Grabner?"," X1-be-is-null,X2-which-Which-null,X4-Michelle Grabner-Michelle-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Michelle Grabner,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Michelle Grabner-Michelle-null, X1-subj-X2,X1-obj-X3,X4-has_name-Michelle Grabner,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Michelle Grabner, Michelle, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Michelle Grabner, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Michelle Grabner, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Michelle Grabner"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Oshkosh, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oshkoshwisconsinunitedstates"",     ""snameArtist3"": ""Michelle Grabner"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/29087""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/29087"",""label"":""Michelle Grabner"",""placeLabel"":""Oshkosh, Wisconsin, United States""}]","true"
"Which is the birth place of John Leighton?"," X1-be-is-null,X2-which-Which-null,X4-John Leighton-John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John Leighton,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John Leighton-John-null, X1-subj-X2,X1-obj-X3,X4-has_name-John Leighton,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John Leighton, John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John Leighton, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John Leighton, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Leighton"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Hollywood, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hollywoodcaliforniaunitedstates"",     ""snameArtist3"": ""John Leighton"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18584""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18584"",""label"":""John Leighton"",""placeLabel"":""Hollywood, California, United States""}]","true"
"Which is the birth place of B. W. Kilburn?"," X1-be-is-null,X2-which-Which-null,X4-B. W. Kilburn-B.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-B. W. Kilburn,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-B. W. Kilburn-B.-null, X1-subj-X2,X1-obj-X3,X4-has_name-B. W. Kilburn,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, B. W. Kilburn, B., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, B. W. Kilburn, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, B. W. Kilburn, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""B\\. W\\. Kilburn"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Littleton, New Hampshire, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/littletonnewhampshireunitedstates"",     ""snameArtist3"": ""B. W. Kilburn"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/7192""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/7192"",""label"":""B. W. Kilburn"",""placeLabel"":""Littleton, New Hampshire, United States""}]","true"
"Which is the birth place of Carlos Alfonzo?"," X1-be-is-null,X2-which-Which-null,X4-Carlos Alfonzo-Carlos-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Carlos Alfonzo,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Carlos Alfonzo-Carlos-null, X1-subj-X2,X1-obj-X3,X4-has_name-Carlos Alfonzo,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Carlos Alfonzo, Carlos, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Carlos Alfonzo, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Carlos Alfonzo, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Carlos Alfonzo"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Havana, Cuba"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/havanacuba"",     ""snameArtist3"": ""Carlos Alfonzo"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/7498""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/7498"",""label"":""Carlos Alfonzo"",""placeLabel"":""Havana, Cuba""}]","true"
"Which is the birth place of Scott Hyde?"," X1-be-is-null,X2-which-Which-null,X4-Scott Hyde-Scott-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Scott Hyde,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Scott Hyde-Scott-null, X1-subj-X2,X1-obj-X3,X4-has_name-Scott Hyde,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Scott Hyde, Scott, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Scott Hyde, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Scott Hyde, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Scott Hyde"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Montevideo, Minnesota, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/montevideominnesotaunitedstates"",     ""snameArtist3"": ""Scott Hyde"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2378""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2378"",""label"":""Scott Hyde"",""placeLabel"":""Montevideo, Minnesota, United States""}]","true"
"Which is the birth place of Chiura Obata?"," X1-be-is-null,X2-which-Which-null,X4-Chiura Obata-Chiura-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Chiura Obata,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Chiura Obata-Chiura-null, X1-subj-X2,X1-obj-X3,X4-has_name-Chiura Obata,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Chiura Obata, Chiura, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Chiura Obata, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Chiura Obata, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Chiura Obata"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Okayama-ken, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/okayamakenjapan"",     ""snameArtist3"": ""Chiura Obata"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27393""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27393"",""label"":""Chiura Obata"",""placeLabel"":""Okayama-ken, Japan""}]","true"
"Which is the birth place of Alan Cohen?"," X1-be-is-null,X2-which-Which-null,X4-Alan Cohen-Alan-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Alan Cohen,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Alan Cohen-Alan-null, X1-subj-X2,X1-obj-X3,X4-has_name-Alan Cohen,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Alan Cohen, Alan, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Alan Cohen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Alan Cohen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Alan Cohen"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Harrisburg, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/harrisburgpennsylvaniaunitedstates"",     ""snameArtist3"": ""Alan Cohen"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/931""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/931"",""label"":""Alan Cohen"",""placeLabel"":""Harrisburg, Pennsylvania, United States""}]","true"
"Which is the birth place of Jules Dupré?"," X1-be-is-null,X2-which-Which-null,X4-Jules Dupré-Jules-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jules Dupré,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jules Dupré-Jules-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jules Dupré,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jules Dupré, Jules, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jules Dupré, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jules Dupré, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jules Dupré"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Nantes, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/nantesfrance"",     ""snameArtist3"": ""Jules Dupré"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27476""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27476"",""label"":""Jules Dupré"",""placeLabel"":""Nantes, France""}]","true"
"Which is the birth place of Niels Borch Jensen?"," X1-be-is-null,X2-which-Which-null,X4-Niels Borch Jensen-Niels-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Niels Borch Jensen,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Niels Borch Jensen-Niels-null, X1-subj-X2,X1-obj-X3,X4-has_name-Niels Borch Jensen,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Niels Borch Jensen, Niels, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Niels Borch Jensen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Niels Borch Jensen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Niels Borch Jensen"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Copenhagen, Denmark"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/copenhagendenmark"",     ""snameArtist3"": ""Niels Borch Jensen"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/6933""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/6933"",""label"":""Niels Borch Jensen"",""placeLabel"":""Copenhagen, Denmark""}]","true"
"Which is the birth place of William Bailey?"," X1-be-is-null,X2-which-Which-null,X4-William Bailey-William-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-William Bailey,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-William Bailey-William-null, X1-subj-X2,X1-obj-X3,X4-has_name-William Bailey,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, William Bailey, William, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, William Bailey, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, William Bailey, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""William Bailey"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Council Bluffs, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/councilbluffsiowaunitedstates"",     ""snameArtist3"": ""William Bailey"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/204""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/204"",""label"":""William Bailey"",""placeLabel"":""Council Bluffs, Iowa, United States""}]","true"
"Which is the birth place of Chauncey Frederick Korten?"," X1-be-is-null,X2-which-Which-null,X4-Chauncey Frederick Korten-Chauncey-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Chauncey Frederick Korten,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Chauncey Frederick Korten-Chauncey-null, X1-subj-X2,X1-obj-X3,X4-has_name-Chauncey Frederick Korten,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Chauncey Frederick Korten, Chauncey, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Chauncey Frederick Korten, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Chauncey Frederick Korten, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Chauncey Frederick Korten"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/michiganunitedstates"",     ""snameArtist3"": ""Chauncey Frederick Korten"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2695""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2695"",""label"":""Chauncey Frederick Korten"",""placeLabel"":""Michigan, United States""}]","true"
"Which is the birth place of Frank Armstrong?"," X1-be-is-null,X2-which-Which-null,X4-Frank Armstrong-Frank-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Frank Armstrong,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Frank Armstrong-Frank-null, X1-subj-X2,X1-obj-X3,X4-has_name-Frank Armstrong,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Frank Armstrong, Frank, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Frank Armstrong, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Frank Armstrong, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frank Armstrong"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Henderson, Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hendersontexasunitedstates"",     ""snameArtist3"": ""Frank Armstrong"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/137""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/137"",""label"":""Frank Armstrong"",""placeLabel"":""Henderson, Texas, United States""}]","true"
"Which is the birth place of Robert Feke?"," X1-be-is-null,X2-which-Which-null,X4-Robert Feke-Robert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Robert Feke,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Robert Feke-Robert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Robert Feke,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Robert Feke, Robert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Robert Feke, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Robert Feke, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert Feke"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Oyster Bay, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oysterbaynewyorkunitedstates"",     ""snameArtist3"": ""Robert Feke"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1510""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1510"",""label"":""Robert Feke"",""placeLabel"":""Oyster Bay, New York, United States""}]","true"
"Which is the birth place of Charles François Lacroix de Marseille?"," X1-be-is-null,X2-which-Which-null,X4-Charles François Lacroix de Marseille-Charles-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Charles François Lacroix de Marseille,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Charles François Lacroix de Marseille-Charles-null, X1-subj-X2,X1-obj-X3,X4-has_name-Charles François Lacroix de Marseille,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Charles François Lacroix de Marseille, Charles, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Charles François Lacroix de Marseille, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Charles François Lacroix de Marseille, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charles François Lacroix de Marseille"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/france"",     ""snameArtist3"": ""Charles François Lacroix de Marseille"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2755""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2755"",""label"":""Charles François Lacroix de Marseille"",""placeLabel"":""France""}]","true"
"Which is the birth place of George Snow Hill?"," X1-be-is-null,X2-which-Which-null,X4-George Snow Hill-George-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-George Snow Hill,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-George Snow Hill-George-null, X1-subj-X2,X1-obj-X3,X4-has_name-George Snow Hill,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, George Snow Hill, George, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, George Snow Hill, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, George Snow Hill, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""George Snow Hill"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Munising, Michigan, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/munisingmichiganunitedstates"",     ""snameArtist3"": ""George Snow Hill"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2223""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2223"",""label"":""George Snow Hill"",""placeLabel"":""Munising, Michigan, United States""}]","true"
"Which is the birth place of Agnes E. Lyall?"," X1-be-is-null,X2-which-Which-null,X4-Agnes E. Lyall-Agnes-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Agnes E. Lyall,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Agnes E. Lyall-Agnes-null, X1-subj-X2,X1-obj-X3,X4-has_name-Agnes E. Lyall,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Agnes E. Lyall, Agnes, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Agnes E. Lyall, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Agnes E. Lyall, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Agnes E\\. Lyall"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Summit, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/summitnewjerseyunitedstates"",     ""snameArtist3"": ""Agnes E. Lyall"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3027""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3027"",""label"":""Agnes E. Lyall"",""placeLabel"":""Summit, New Jersey, United States""}]","true"
"Which is the birth place of Paul J. Grellert?"," X1-be-is-null,X2-which-Which-null,X4-Paul J. Grellert-Paul-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Paul J. Grellert,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Paul J. Grellert-Paul-null, X1-subj-X2,X1-obj-X3,X4-has_name-Paul J. Grellert,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Paul J. Grellert, Paul, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Paul J. Grellert, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Paul J. Grellert, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Paul J\\. Grellert"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/germany"",     ""snameArtist3"": ""Paul J. Grellert"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1945""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1945"",""label"":""Paul J. Grellert"",""placeLabel"":""Germany""}]","true"
"Which is the birth place of Harold Faye?"," X1-be-is-null,X2-which-Which-null,X4-Harold Faye-Harold-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Harold Faye,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Harold Faye-Harold-null, X1-subj-X2,X1-obj-X3,X4-has_name-Harold Faye,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Harold Faye, Harold, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Harold Faye, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Harold Faye, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Harold Faye"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""La Grange, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lagrangeillinoisunitedstates"",     ""snameArtist3"": ""Harold Faye"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1505""   },   {     ""snameBirthPlace4"": ""LaGrange, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lagrangeillinoisunitedstates"",     ""snameArtist3"": ""Harold Faye"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1505""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1505"",""label"":""Harold Faye"",""placeLabel"":""LaGrange, Illinois, United States""},{""actor"":""http://data.americanart.si.edu/constituent/id/1505"",""label"":""Harold Faye"",""placeLabel"":""La Grange, Illinois, United States""}]","true"
"Which is the birth place of David Sengel?"," X1-be-is-null,X2-which-Which-null,X4-David Sengel-David-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-David Sengel,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-David Sengel-David-null, X1-subj-X2,X1-obj-X3,X4-has_name-David Sengel,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, David Sengel, David, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, David Sengel, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, David Sengel, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David Sengel"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Radford, Virginia, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/radfordvirginiaunitedstates"",     ""snameArtist3"": ""David Sengel"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27893""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27893"",""label"":""David Sengel"",""placeLabel"":""Radford, Virginia, United States""}]","true"
"Which is the birth place of Enrico Glicenstein?"," X1-be-is-null,X2-which-Which-null,X4-Enrico Glicenstein-Enrico-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Enrico Glicenstein,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Enrico Glicenstein-Enrico-null, X1-subj-X2,X1-obj-X3,X4-has_name-Enrico Glicenstein,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Enrico Glicenstein, Enrico, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Enrico Glicenstein, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Enrico Glicenstein, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Enrico Glicenstein"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Turek, Russia"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/turekrussia"",     ""snameArtist3"": ""Enrico Glicenstein"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1831""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1831"",""label"":""Enrico Glicenstein"",""placeLabel"":""Turek, Russia""}]","true"
"Which is the birth place of David Beck?"," X1-be-is-null,X2-which-Which-null,X4-David Beck-David-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-David Beck,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-David Beck-David-null, X1-subj-X2,X1-obj-X3,X4-has_name-David Beck,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, David Beck, David, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, David Beck, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, David Beck, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David Beck"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Muncie, Indiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/muncieindianaunitedstates"",     ""snameArtist3"": ""David Beck"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27231""   },   {     ""snameBirthPlace4"": ""Milwaukee, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/milwaukeewisconsinunitedstates"",     ""snameArtist3"": ""David Becker"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/306""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27231"",""label"":""David Beck"",""placeLabel"":""Muncie, Indiana, United States""},{""actor"":""http://data.americanart.si.edu/constituent/id/306"",""label"":""David Becker"",""placeLabel"":""Milwaukee, Wisconsin, United States""}]","true"
"Which is the birth place of Donal Hord?"," X1-be-is-null,X2-which-Which-null,X4-Donal Hord-Donal-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Donal Hord,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Donal Hord-Donal-null, X1-subj-X2,X1-obj-X3,X4-has_name-Donal Hord,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Donal Hord, Donal, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Donal Hord, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Donal Hord, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Donal Hord"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Prentice, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/prenticewisconsinunitedstates"",     ""snameArtist3"": ""Donal Hord"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2302""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2302"",""label"":""Donal Hord"",""placeLabel"":""Prentice, Wisconsin, United States""}]","true"
"Which is the birth place of De Lancey Gill?"," X1-be-is-null,X2-which-Which-null,X4-De Lancey Gill-De-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-De Lancey Gill,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-De Lancey Gill-De-null, X1-subj-X2,X1-obj-X3,X4-has_name-De Lancey Gill,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, De Lancey Gill, De, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, De Lancey Gill, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, De Lancey Gill, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""De Lancey Gill"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Chester, South Carolina, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/chestersouthcarolinaunitedstates"",     ""snameArtist3"": ""De Lancey Gill"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1806""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1806"",""label"":""De Lancey Gill"",""placeLabel"":""Chester, South Carolina, United States""}]","true"
"Which is the birth place of Norio Azuma?"," X1-be-is-null,X2-which-Which-null,X4-Norio Azuma-Norio-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Norio Azuma,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Norio Azuma-Norio-null, X1-subj-X2,X1-obj-X3,X4-has_name-Norio Azuma,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Norio Azuma, Norio, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Norio Azuma, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Norio Azuma, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Norio Azuma"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Kii-Nagashima-cho, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kiinagashimachojapan"",     ""snameArtist3"": ""Norio Azuma"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/182""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/182"",""label"":""Norio Azuma"",""placeLabel"":""Kii-Nagashima-cho, Japan""}]","true"
"Which is the birth place of CHRISTIAN MARCLAY (NEA)?"," X1-be-is-null,X2-which-Which-null,X5-NEA-NEA-null,X4-Christian Marclay-CHRISTIAN-null,X3-birth place-birth place-the, X1-subj-X2,X5-has_name-NEA,X4-rel-X5,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X5-NEA-NEA-null,X4-Christian Marclay-CHRISTIAN-null, X1-subj-X2,X1-obj-X3,X5-has_name-NEA,X4-rel-X5,X1-obl_of-X4,","NO CORRECT DRS","null","null","null","null"
"Which is the birth place of Albert Pinkham Ryder?"," X1-be-is-null,X2-which-Which-null,X4-Albert Pinkham Ryder-Albert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Albert Pinkham Ryder,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Albert Pinkham Ryder-Albert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Albert Pinkham Ryder,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Albert Pinkham Ryder, Albert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Albert Pinkham Ryder, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Albert Pinkham Ryder, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Albert Pinkham Ryder"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""New Bedford, Massachusetts, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newbedfordmassachusettsunitedstates"",     ""snameArtist3"": ""Albert Pinkham Ryder"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4199""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4199"",""label"":""Albert Pinkham Ryder"",""placeLabel"":""New Bedford, Massachusetts, United States""}]","true"
"Which is the birth place of John T. Bowen?"," X1-be-is-null,X2-which-Which-null,X4-John T. Bowen-John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John T. Bowen,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John T. Bowen-John-null, X1-subj-X2,X1-obj-X3,X4-has_name-John T. Bowen,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John T. Bowen, John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John T. Bowen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John T. Bowen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John T\\. Bowen"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""England"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/england"",     ""snameArtist3"": ""John T. Bowen"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/533""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/533"",""label"":""John T. Bowen"",""placeLabel"":""England""}]","true"
"Which is the birth place of Didi Suydam?"," X1-be-is-null,X2-which-Which-null,X4-Didi Suydam-Didi-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Didi Suydam,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Didi Suydam-Didi-null, X1-subj-X2,X1-obj-X3,X4-has_name-Didi Suydam,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Didi Suydam, Didi, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Didi Suydam, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Didi Suydam, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Didi Suydam"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""New York, New York"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newyorknewyork"",     ""snameArtist3"": ""Didi Suydam"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27358""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27358"",""label"":""Didi Suydam"",""placeLabel"":""New York, New York""}]","true"
"Which is the birth place of John Iversen?"," X1-be-is-null,X2-which-Which-null,X4-John Iversen-John-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-John Iversen,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-John Iversen-John-null, X1-subj-X2,X1-obj-X3,X4-has_name-John Iversen,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, John Iversen, John, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, John Iversen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, John Iversen, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""John Iversen"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Hamburg, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/hamburggermany"",     ""snameArtist3"": ""John Iversen"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/26992""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/26992"",""label"":""John Iversen"",""placeLabel"":""Hamburg, Germany""}]","true"
"Which is the birth place of Aristidis Kyriazis?"," X1-be-is-null,X2-which-Which-null,X4-Aristidis Kyriazis-Aristidis-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Aristidis Kyriazis,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Aristidis Kyriazis-Aristidis-null, X1-subj-X2,X1-obj-X3,X4-has_name-Aristidis Kyriazis,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Aristidis Kyriazis, Aristidis, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Aristidis Kyriazis, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Aristidis Kyriazis, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Aristidis Kyriazis"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Thessaloniki, Greece"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/thessalonikigreece"",     ""snameArtist3"": ""Aristidis Kyriazis"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18535""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18535"",""label"":""Aristidis Kyriazis"",""placeLabel"":""Thessaloniki, Greece""}]","true"
"Which is the birth place of H. Willard Ortlip?"," X1-be-is-null,X2-which-Which-null,X4-H. Willard Ortlip-H.-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-H. Willard Ortlip,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-H. Willard Ortlip-H.-null, X1-subj-X2,X1-obj-X3,X4-has_name-H. Willard Ortlip,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, H. Willard Ortlip, H., PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, H. Willard Ortlip, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, H. Willard Ortlip, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""H\\. Willard Ortlip"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Norristown, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/norristownpennsylvaniaunitedstates"",     ""snameArtist3"": ""H. Willard Ortlip"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3639""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3639"",""label"":""H. Willard Ortlip"",""placeLabel"":""Norristown, Pennsylvania, United States""}]","true"
"Which is the birth place of Samuel M. Green?"," X1-be-is-null,X2-which-Which-null,X4-Samuel M. Green-Samuel-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Samuel M. Green,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Samuel M. Green-Samuel-null, X1-subj-X2,X1-obj-X3,X4-has_name-Samuel M. Green,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Samuel M. Green, Samuel, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Samuel M. Green, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Samuel M. Green, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Samuel M\\. Green"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Oconomowoc, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/oconomowocwisconsinunitedstates"",     ""snameArtist3"": ""Samuel M. Green"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1927""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1927"",""label"":""Samuel M. Green"",""placeLabel"":""Oconomowoc, Wisconsin, United States""}]","true"
"Which is the birth place of Minnette Lehmann?"," X1-be-is-null,X2-which-Which-null,X4-Minnette Lehmann-Minnette-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Minnette Lehmann,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Minnette Lehmann-Minnette-null, X1-subj-X2,X1-obj-X3,X4-has_name-Minnette Lehmann,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Minnette Lehmann, Minnette, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Minnette Lehmann, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Minnette Lehmann, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Minnette Lehmann"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Sacramento, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sacramentocaliforniaunitedstates"",     ""snameArtist3"": ""Minnette Lehmann"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2871""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2871"",""label"":""Minnette Lehmann"",""placeLabel"":""Sacramento, California, United States""}]","true"
"Which is the birth place of Frans Wildenhain?"," X1-be-is-null,X2-which-Which-null,X4-Frans Wildenhain-Frans-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Frans Wildenhain,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Frans Wildenhain-Frans-null, X1-subj-X2,X1-obj-X3,X4-has_name-Frans Wildenhain,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Frans Wildenhain, Frans, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Frans Wildenhain, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Frans Wildenhain, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Frans Wildenhain"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Leipzig, Germany"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/leipziggermany"",     ""snameArtist3"": ""Frans Wildenhain"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5388""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5388"",""label"":""Frans Wildenhain"",""placeLabel"":""Leipzig, Germany""}]","true"
"Which is the birth place of May Gearhart?"," X1-be-is-null,X2-which-Which-null,X4-May Gearhart-May-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-May Gearhart,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-May Gearhart-May-null, X1-subj-X2,X1-obj-X3,X4-has_name-May Gearhart,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, May Gearhart, May, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, May Gearhart, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, May Gearhart, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""May Gearhart"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Sagetown, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/sagetownillinoisunitedstates"",     ""snameArtist3"": ""May Gearhart"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/1763""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/1763"",""label"":""May Gearhart"",""placeLabel"":""Sagetown, Illinois, United States""}]","false"
"Which is the birth place of Jeffrey Clancy?"," X1-be-is-null,X2-which-Which-null,X4-Jeffrey Clancy-Jeffrey-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jeffrey Clancy,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jeffrey Clancy-Jeffrey-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jeffrey Clancy,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jeffrey Clancy, Jeffrey, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jeffrey Clancy, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jeffrey Clancy, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jeffrey Clancy"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Norristown, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/norristownpennsylvaniaunitedstates"",     ""snameArtist3"": ""Jeffrey Clancy"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/30165""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/30165"",""label"":""Jeffrey Clancy"",""placeLabel"":""Norristown, Pennsylvania, United States""}]","true"
"Which is the birth place of Robert ParkeHarrison?"," X1-be-is-null,X2-which-Which-null,X4-Robert ParkeHarrison-Robert-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Robert ParkeHarrison,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Robert ParkeHarrison-Robert-null, X1-subj-X2,X1-obj-X3,X4-has_name-Robert ParkeHarrison,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Robert ParkeHarrison, Robert, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Robert ParkeHarrison, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Robert ParkeHarrison, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Robert ParkeHarrison"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Fort Leonard Wood, Missouri, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fortleonardwoodmissouriunitedstates"",     ""snameArtist3"": ""Robert ParkeHarrison"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/26660""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/26660"",""label"":""Robert ParkeHarrison"",""placeLabel"":""Fort Leonard Wood, Missouri, United States""}]","true"
"Which is the birth place of Pamela Colman Smith?"," X1-be-is-null,X2-which-Which-null,X4-Pamela Colman Smith-Pamela-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Pamela Colman Smith,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Pamela Colman Smith-Pamela-null, X1-subj-X2,X1-obj-X3,X4-has_name-Pamela Colman Smith,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Pamela Colman Smith, Pamela, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Pamela Colman Smith, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Pamela Colman Smith, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Pamela Colman Smith"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/unitedstates"",     ""snameArtist3"": ""Pamela Colman Smith"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4514""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4514"",""label"":""Pamela Colman Smith"",""placeLabel"":""United States""}]","true"
"Which is the birth place of Edmond Casarella?"," X1-be-is-null,X2-which-Which-null,X4-Edmond Casarella-Edmond-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Edmond Casarella,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Edmond Casarella-Edmond-null, X1-subj-X2,X1-obj-X3,X4-has_name-Edmond Casarella,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Edmond Casarella, Edmond, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Edmond Casarella, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Edmond Casarella, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Edmond Casarella"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Newark, New Jersey, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newarknewjerseyunitedstates"",     ""snameArtist3"": ""Edmond Casarella"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/765""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/765"",""label"":""Edmond Casarella"",""placeLabel"":""Newark, New Jersey, United States""}]","true"
"Which is the birth place of Billy Al Bengston?"," X1-be-is-null,X2-which-Which-null,X4-Billy Al Bengston-Billy-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Billy Al Bengston,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Billy Al Bengston-Billy-null, X1-subj-X2,X1-obj-X3,X4-has_name-Billy Al Bengston,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Billy Al Bengston, Billy, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Billy Al Bengston, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Billy Al Bengston, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Billy Al Bengston"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Dodge City, Kansas"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dodgecitykansas"",     ""snameArtist3"": ""Billy Al Bengston"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/28283""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/28283"",""label"":""Billy Al Bengston"",""placeLabel"":""Dodge City, Kansas""}]","true"
"Which is the birth place of Thomas Michael Savage?"," X1-be-is-null,X2-which-Which-null,X4-Thomas Michael Savage-Thomas-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Thomas Michael Savage,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Thomas Michael Savage-Thomas-null, X1-subj-X2,X1-obj-X3,X4-has_name-Thomas Michael Savage,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Thomas Michael Savage, Thomas, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Thomas Michael Savage, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Thomas Michael Savage, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Thomas Michael Savage"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Fort Dodge, Iowa, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/fortdodgeiowaunitedstates"",     ""snameArtist3"": ""Thomas Michael Savage"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4273""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4273"",""label"":""Thomas Michael Savage"",""placeLabel"":""Fort Dodge, Iowa, United States""}]","true"
"Which is the birth place of Mong Q. Lee?"," X1-be-is-null,X2-which-Which-null,X4-Mong Q. Lee-Mong-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Mong Q. Lee,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Mong Q. Lee-Mong-null, X1-subj-X2,X1-obj-X3,X4-has_name-Mong Q. Lee,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Mong Q. Lee, Mong, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Mong Q. Lee, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Mong Q. Lee, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mong Q\\. Lee"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Canton, China"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/cantonchina"",     ""snameArtist3"": ""Mong Q. Lee"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2859""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2859"",""label"":""Mong Q. Lee"",""placeLabel"":""Canton, China""}]","true"
"Which is the birth place of Amy Cutler?"," X1-be-is-null,X2-which-Which-null,X4-Amy Cutler-Amy-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Amy Cutler,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Amy Cutler-Amy-null, X1-subj-X2,X1-obj-X3,X4-has_name-Amy Cutler,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Amy Cutler, Amy, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Amy Cutler, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Amy Cutler, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Amy Cutler"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Poughkeepsie, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/poughkeepsienewyorkunitedstates"",     ""snameArtist3"": ""Amy Cutler"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/30296""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/30296"",""label"":""Amy Cutler"",""placeLabel"":""Poughkeepsie, New York, United States""}]","true"
"Which is the birth place of Tamiji Kitagawa?"," X1-be-is-null,X2-which-Which-null,X4-Tamiji Kitagawa-Tamiji-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Tamiji Kitagawa,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Tamiji Kitagawa-Tamiji-null, X1-subj-X2,X1-obj-X3,X4-has_name-Tamiji Kitagawa,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Tamiji Kitagawa, Tamiji, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Tamiji Kitagawa, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Tamiji Kitagawa, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Tamiji Kitagawa"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Shizuoka, Japan"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/shizuokajapan"",     ""snameArtist3"": ""Tamiji Kitagawa"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2649""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2649"",""label"":""Tamiji Kitagawa"",""placeLabel"":""Shizuoka, Japan""}]","true"
"Which is the birth place of Patricia Nix?"," X1-be-is-null,X2-which-Which-null,X4-Patricia Nix-Patricia-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Patricia Nix,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Patricia Nix-Patricia-null, X1-subj-X2,X1-obj-X3,X4-has_name-Patricia Nix,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Patricia Nix, Patricia, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Patricia Nix, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Patricia Nix, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Patricia Nix"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Texas, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/texasunitedstates"",     ""snameArtist3"": ""Patricia Nix"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3556""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3556"",""label"":""Patricia Nix"",""placeLabel"":""Texas, United States""}]","true"
"Which is the birth place of Walter Robertson?"," X1-be-is-null,X2-which-Which-null,X4-Walter Robertson-Walter-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Walter Robertson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Walter Robertson-Walter-null, X1-subj-X2,X1-obj-X3,X4-has_name-Walter Robertson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Walter Robertson, Walter, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Walter Robertson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Walter Robertson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Walter Robertson"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Dublin, Ireland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/dublinireland"",     ""snameArtist3"": ""Walter Robertson"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/4080""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/4080"",""label"":""Walter Robertson"",""placeLabel"":""Dublin, Ireland""}]","true"
"Which is the birth place of Charles W. Hawthorne?"," X1-be-is-null,X2-which-Which-null,X4-Charles W. Hawthorne-Charles-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Charles W. Hawthorne,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Charles W. Hawthorne-Charles-null, X1-subj-X2,X1-obj-X3,X4-has_name-Charles W. Hawthorne,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Charles W. Hawthorne, Charles, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Charles W. Hawthorne, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Charles W. Hawthorne, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Charles W\\. Hawthorne"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Lodi, Illinois, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/lodiillinoisunitedstates"",     ""snameArtist3"": ""Charles W. Hawthorne"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2128""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2128"",""label"":""Charles W. Hawthorne"",""placeLabel"":""Lodi, Illinois, United States""}]","true"
"Which is the birth place of Delwyn Herbert?"," X1-be-is-null,X2-which-Which-null,X4-Delwyn Herbert-Delwyn-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Delwyn Herbert,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Delwyn Herbert-Delwyn-null, X1-subj-X2,X1-obj-X3,X4-has_name-Delwyn Herbert,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Delwyn Herbert, Delwyn, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Delwyn Herbert, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Delwyn Herbert, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Delwyn Herbert"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Coaldale, Pennsylvania, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/coaldalepennsylvaniaunitedstates"",     ""snameArtist3"": ""Delwyn Herbert"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/18633""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/18633"",""label"":""Delwyn Herbert"",""placeLabel"":""Coaldale, Pennsylvania, United States""}]","true"
"Which is the birth place of Tom Joyce?"," X1-be-is-null,X2-which-Which-null,X4-Tom Joyce-Tom-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Tom Joyce,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Tom Joyce-Tom-null, X1-subj-X2,X1-obj-X3,X4-has_name-Tom Joyce,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Tom Joyce, Tom, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Tom Joyce, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Tom Joyce, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Tom Joyce"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Tulsa, Oklahoma, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/tulsaoklahomaunitedstates"",     ""snameArtist3"": ""Tom Joyce"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/27557""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/27557"",""label"":""Tom Joyce"",""placeLabel"":""Tulsa, Oklahoma, United States""}]","true"
"Which is the birth place of Esther Blaikie MacKinnon?"," X1-be-is-null,X2-which-Which-null,X4-Esther Blaikie MacKinnon-Esther-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Esther Blaikie MacKinnon,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Esther Blaikie MacKinnon-Esther-null, X1-subj-X2,X1-obj-X3,X4-has_name-Esther Blaikie MacKinnon,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Esther Blaikie MacKinnon, Esther, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Esther Blaikie MacKinnon, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Esther Blaikie MacKinnon, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Esther Blaikie MacKinnon"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Aberdeen, Scotland"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/aberdeenscotland"",     ""snameArtist3"": ""Esther Blaikie MacKinnon"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/3054""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/3054"",""label"":""Esther Blaikie MacKinnon"",""placeLabel"":""Aberdeen, Scotland""}]","true"
"Which is the birth place of George Inness?"," X1-be-is-null,X2-which-Which-null,X4-George Inness-George-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-George Inness,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-George Inness-George-null, X1-subj-X2,X1-obj-X3,X4-has_name-George Inness,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, George Inness, George, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, George Inness, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, George Inness, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""George Inness"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Newburgh, New York, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newburghnewyorkunitedstates"",     ""snameArtist3"": ""George Inness"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2392""   },   {     ""snameBirthPlace4"": ""Paris, France"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/parisfrance"",     ""snameArtist3"": ""George Inness, Jr."",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/6440""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2392"",""label"":""George Inness"",""placeLabel"":""Newburgh, New York, United States""},{""actor"":""http://data.americanart.si.edu/constituent/id/6440"",""label"":""George Inness, Jr."",""placeLabel"":""Paris, France""}]","true"
"Which is the birth place of Debbie Fleming Caffery?"," X1-be-is-null,X2-which-Which-null,X4-Debbie Fleming Caffery-Debbie-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Debbie Fleming Caffery,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Debbie Fleming Caffery-Debbie-null, X1-subj-X2,X1-obj-X3,X4-has_name-Debbie Fleming Caffery,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Debbie Fleming Caffery, Debbie, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Debbie Fleming Caffery, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Debbie Fleming Caffery, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Debbie Fleming Caffery"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""New Iberia, Louisiana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/newiberialouisianaunitedstates"",     ""snameArtist3"": ""Debbie Fleming Caffery"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/705""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/705"",""label"":""Debbie Fleming Caffery"",""placeLabel"":""New Iberia, Louisiana, United States""}]","true"
"Which is the birth place of Mitchell Jamieson?"," X1-be-is-null,X2-which-Which-null,X4-Mitchell Jamieson-Mitchell-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Mitchell Jamieson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Mitchell Jamieson-Mitchell-null, X1-subj-X2,X1-obj-X3,X4-has_name-Mitchell Jamieson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Mitchell Jamieson, Mitchell, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Mitchell Jamieson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Mitchell Jamieson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Mitchell Jamieson"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Kensington, Maryland, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/kensingtonmarylandunitedstates"",     ""snameArtist3"": ""Mitchell Jamieson"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2437""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2437"",""label"":""Mitchell Jamieson"",""placeLabel"":""Kensington, Maryland, United States""}]","true"
"Which is the birth place of Meyer Wolfe?"," X1-be-is-null,X2-which-Which-null,X4-Meyer Wolfe-Meyer-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Meyer Wolfe,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Meyer Wolfe-Meyer-null, X1-subj-X2,X1-obj-X3,X4-has_name-Meyer Wolfe,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Meyer Wolfe, Meyer, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Meyer Wolfe, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Meyer Wolfe, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Meyer Wolfe"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Louisville, Kentucky, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/louisvillekentuckyunitedstates"",     ""snameArtist3"": ""Meyer Wolfe"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5462""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5462"",""label"":""Meyer Wolfe"",""placeLabel"":""Louisville, Kentucky, United States""}]","true"
"Which is the birth place of Josef Israëls?"," X1-be-is-null,X2-which-Which-null,X4-Josef Israëls-Josef-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Josef Israëls,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Josef Israëls-Josef-null, X1-subj-X2,X1-obj-X3,X4-has_name-Josef Israëls,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Josef Israëls, Josef, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Josef Israëls, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Josef Israëls, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Josef Israëls"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Groningen, Netherlands"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/groningennetherlands"",     ""snameArtist3"": ""Josef Israëls"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/26577""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/26577"",""label"":""Josef Israëls"",""placeLabel"":""Groningen, Netherlands""}]","true"
"Which is the birth place of Wayne Healy?"," X1-be-is-null,X2-which-Which-null,X4-Wayne Healy-Wayne-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Wayne Healy,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Wayne Healy-Wayne-null, X1-subj-X2,X1-obj-X3,X4-has_name-Wayne Healy,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Wayne Healy, Wayne, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Wayne Healy, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Wayne Healy, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Wayne Healy"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Santa Barbara, California, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/santabarbaracaliforniaunitedstates"",     ""snameArtist3"": ""Wayne Healy"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/30328""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/30328"",""label"":""Wayne Healy"",""placeLabel"":""Santa Barbara, California, United States""}]","true"
"Which is the birth place of David T. Hanson?"," X1-be-is-null,X2-which-Which-null,X4-David T. Hanson-David-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-David T. Hanson,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-David T. Hanson-David-null, X1-subj-X2,X1-obj-X3,X4-has_name-David T. Hanson,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, David T. Hanson, David, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, David T. Hanson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, David T. Hanson, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""David T\\. Hanson"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Billings, Montana, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/billingsmontanaunitedstates"",     ""snameArtist3"": ""David T. Hanson"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/5938""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/5938"",""label"":""David T. Hanson"",""placeLabel"":""Billings, Montana, United States""}]","true"
"Which is the birth place of Jane Marie Logemann?"," X1-be-is-null,X2-which-Which-null,X4-Jane Marie Logemann-Jane-null,X3-birth place-birth place-the, X1-subj-X2,X4-has_name-Jane Marie Logemann,X3-of-X4,X1-obj-X3, X1-be-is-null,X2-which-Which-null,X3-birth place-birth place-the,X4-Jane Marie Logemann-Jane-null, X1-subj-X2,X1-obj-X3,X4-has_name-Jane Marie Logemann,X1-obl_of-X4,","Drs [
 tokens=[],
 dEntities=[
DEntity(X1, be, is, VERB, null, false, Query1, Query), 
DEntity(X2, which, Which, PRON, null, false, Qualifier2, Qualifier), 
DEntity(X4, Jane Marie Logemann, Jane, PROPN, null, false, Artist3, Artist), 
DEntity(X3, birth place, birth place, NOUN, the, false, BirthPlace4, BirthPlace)],
 dConditions=[
DCondition(X1, subj, X2, propriedades= [qQualifier] --- []), 
DCondition(X4, has_name, Jane Marie Logemann, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, of, X4, propriedades= [birthplace_of] --- []), 
DCondition(X1, obj, X3, propriedades= [select] --- []), 
DCondition(X1, has_text, be, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_text, which, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X4, has_text, Jane Marie Logemann, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X3, has_text, birth place, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X2, has_name, null list, propriedades= [] --- [has_name, has_text, who]), 
DCondition(X1, obj, X2, propriedades= [qQualifier] --- [])]
 solu��es = []
 numeroFrase = 0
 numHasNames = 2
 numIndividuals = 4
 numEntitiesOk = 10
 numIsClass = 0
 numPropsOk = 1
 numEntitiesNOk = 0
 numClassesOk = 3]"," PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX cidoc: <http://www.cidoc-crm.org/cidoc-crm/> SELECT  DISTINCT  ?snameBirthPlace4 ?BirthPlace4 ?snameArtist3 ?Artist3 WHERE { ?Artist3 cidoc:P92i_was_brought_into_existence_by ?birth . ?birth  cidoc:P7_took_place_at ?BirthPlace4 . ?BirthPlace4 rdfs:label ?snameBirthPlace4 . ?Artist3 rdfs:label ?snameArtist3. {{?Artist3 cidoc:P131_is_identified_by ?nameArtist3 . ?nameArtist3 rdf:value ?snameArtist3 .}  UNION {?Artist3 rdfs:label ?snameArtist3 .}}  filter(regex(?snameArtist3,""Jane Marie Logemann"",""i"")) . }"," [   {     ""snameBirthPlace4"": ""Milwaukee, Wisconsin, United States"",     ""BirthPlace4"": ""http://data.americanart.si.edu/thesauri/place/milwaukeewisconsinunitedstates"",     ""snameArtist3"": ""Jane Marie Logemann"",     ""Artist3"": ""http://data.americanart.si.edu/constituent/id/2979""   } ]","[{""actor"":""http://data.americanart.si.edu/constituent/id/2979"",""label"":""Jane Marie Logemann"",""placeLabel"":""Milwaukee, Wisconsin, United States""}]","true"
